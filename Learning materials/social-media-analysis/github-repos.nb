(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    334261,       7815]
NotebookOptionsPosition[    290932,       7323]
NotebookOutlinePosition[    291358,       7340]
CellTagsIndexPosition[    291315,       7337]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"req", "=", 
  RowBox[{"HTTPRequest", "[", 
   RowBox[{
    RowBox[{"\"\<https://api.github.com/search/repositories?page=\>\"", "<>", 
     RowBox[{"ToString", "[", "1", "]"}], "<>", "\"\<&q=coronavirus\>\""}], 
    ",", 
    RowBox[{"<|", 
     RowBox[{"\"\<Headers\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Authorization\>\"", "\[Rule]", 
        RowBox[{"\"\<token \>\"", "<>", "token"}]}], "}"}]}], "|>"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7898206544407363`*^9, 3.7898206609199543`*^9}, {
  3.79001204117234*^9, 3.790012041499354*^9}, {3.7900121316420417`*^9, 
  3.7900121320790606`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"4c1ff1ba-2b47-4440-887f-5d20a3c2de3c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPRequest",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"GET\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    TagBox[
                    "\"https://api.github.com/search/repositories?page=1&q=\
coronavirus\"", Short], 
                    "https://api.github.com/search/repositories?page=1&q=\
coronavirus"}, "HyperlinkURL"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"GET\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"URL: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    TagBox[
                    "\"https://api.github.com/search/repositories?page=1&q=\
coronavirus\"", Short], 
                    "https://api.github.com/search/repositories?page=1&q=\
coronavirus"}, "HyperlinkURL"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ContentType: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  HTTPRequest[
  "https://api.github.com/search/repositories?page=1&q=coronavirus", 
   Association[
   "Headers" -> {
     "Authorization" -> "token 7969bbf4592b3fa0509103fe0c9243b3fa273804"}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.789820685513794*^9, 3.79001204548254*^9, 
  3.790012132770091*^9, 3.79001226146338*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"95a4a4e8-b8f1-4f8f-ae14-3b7b84e69928"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"response", "=", 
  RowBox[{"URLRead", "[", "req", "]"}]}]], "Input",
 CellChangeTimes->{{3.790012077431988*^9, 3.79001208534035*^9}, {
  3.7900121340651507`*^9, 3.790012135079195*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"ffe324cc-4d02-4f97-b6ad-91c207436a4c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["HTTPResponse",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"200\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"OK\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"application/json;charset=utf-8\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 
               NCache[
                Rational[2, 3], 0.6666666666666666], 0], 
              DiskBox[{0, 0}], 
              InsetBox[
               FormBox[
                StyleBox["\"200\"", 
                 Directive[10, 
                  GrayLevel[1], Bold], StripOnInput -> False], 
                TraditionalForm], 
               Scaled[{0.53, 0.48}]]}, ImageSize -> 
             Dynamic[{
               Automatic, (3 CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification]}], Background -> None], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Status: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"OK\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Content type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"application/json;charset=utf-8\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  HTTPResponse[
   ByteArray[CompressedData["
1:eJzd3X2TG8l9H3Alr2Syf6R05VtgnvGQulJoLk3xcsAej+CdeKkUCwsMd7GL
BVZ42OUu66okxVbpWbFTkizJ1oOrZCep6CRXxbYsyc57cY6801/yS0j3YADM
Q/evu3+/BnW26qQjd6e/3TPTmMF81NP9746mbx39m0984hN/9dl/+4lne4vp
oj9+PJguJ4u9dtCMX90bTQbT84txskgez5L5cryY77Wf9MfzhP1qkZyzv/3n
Z3uj4V7bD2LPa7XC1qt7k+kwecx/ttc5uHN1OH59PLjbuul/5q3LweTsunPz
6GmndxZ1D85e22Mb988TtqXveq39q+VJf7I/mM6mk/7laLac7w/7iz7b6Mly
PH6cbXk8nh71x4PRYnSTTOpwuYvZ6LK/SDZNnl5Nktle+9neeHo8mpTDWAHe
6siNgjgu7sb9+O3PdMeD04dX3V7H7x6/xpveZ9n92ePlbMy2OVksLubten31
w3lQOx4tTpZHy3kyG0wni2SyqLEjWV/WV/GfunwtZBHHsywkrYf9oBR2Mcpy
VoVZ2LxebvPJ4nxcakSuTHnrJ9PxeHrFcsrtVlZV3xTdxIwmx9gYVvRZfbo4
SdgBZBu9xw/GaL5ANCst9iz9FzuMPGjOjugsGZpHZQVZw3hHee9ZfZZcTNPE
5dF8MBtdLEbTCaKJheIsbjo77k9GN31kHCvOU3jjEKXTYqx4csk6JaL8qtyz
evrhGly/l7ZkkIwu2RHHZpYCWOTi+oJ/2h+yjfnxZxebx/3hOf/Qpp/l94z6
veIyMUw2Zye7FDnv8G2d29ttHb6t88k0aHJ7+vYr6Ydgdra5toD7nB5zozbx
bMWBNAytp5Es+iy5tpzME5/x/80+gAP2Ee8fTWf9xVR1oTGtqhD9rPBXXvMi
6Z9brjGN5NfZ6dT2GUkj+W1nPl8mWh8e0xrS5PnmMztZnh+tLra7qGzz4e3P
56PjSZJYzt/EPquv7xlHs/5kcGK7onXqs+xPac/qH9vuWP30Mn7EClhOZkXr
aeyz+vykv7q3Lh7b3wNeD08tVDNLnuygGp66qWYxs9630l2ZpX0rq4R9GViw
bma5nnVq/VlWzbg/OV72j23Xs4nNvg8d92+UX/oQ+5Llptf8yWI2Olru4pK/
Td5+Fzuyvzvb4NJXvp3Us/q+wQ/c+fnI9qU4Cy18MHdSEf/clCvjf7d/d1mn
5u9iqxtn9pud3DlFtWYPdDvo5jy1/uz3LvqLk+xAXvRnifXjyEPrz4767Ht0
rVZ7dpL0069t58nM+nVolcm/E8wGJ+wrvt30Z+tU9t32vL9In9ie8F0Zsie4
8bQ/tLw3m9h139vJ17V8X7tYjseWK0kj83Wcj8bJfDGdWD/3m9x8bZPpYvRk
NNB5+DWtsBD97FPz0WSQvNofj19lHX4xGozY52o0OV7ddY8S28d1lcl2tX+e
rJ6Kx0nf+heIdeqz+upZa5hcjKfXO7je5oL5pWiW9BfsAb2/SB+RfXff9fb9
qOcGba/R9v13OV5dDMvb+Ptu3PNabbfZ9tx30/48P6lsEvV8vx0F7TDdhN+r
VnvC/oR8quc7zm/i85Nt1H/cBrVNgwZj1o0taMO6XZfl7xRIujiZnicX7Gve
XnvCPtUcSm7Yn71m1Ircwhe/Nep6wat7V/0Fe7op/XD9hZG16c1Pv8mj+/PH
q+vRXnsxWyarn1zMpqfJYFH42faqmPvh1ehsVCiYfhlda8mKN7L6o4hfg2az
aYapq13JLu3DTZnhaN4/Gud+ML1IJlkT11Fsp8ejQTKZJ5x5z5JrfuovxvtB
zd1i893uQ+duMklm/bHz5vKIFXDeWBVyLlcbzi+GT1cme/fNN7LC4Icrq5R9
vraV5fx4EPfujk/ffSe6ebd39tree9kBWO16bjfSHVifnuzEDJMn/eV48Xj1
KMrizvvzRapiF8nsnJVLUZHtbd7HVh+03F/G49XJYFXPWT/inSQIai03avjv
vbom/LAVxK1mU03496POzaPo8OA4R/iTwfSyZPWT5Olivpj1R5N69lulyG+L
ZBzv+17UCoKw1Kjrw7PW9bv+Hyz7n7k4Gd4dXx6d3rvu9B6yhnVcNM6vKyPw
fGEHYKMsbGoE87kDi1b5SgaF5HNhJI/P5djD+HwoVeJzWaYMnytqbvC5wnYA
vtAaib4f5o4OSuGrF4CitXc3v3eOlqPx0GGXRWcyvUzGTu5m53wSK+7V+rVd
vVTUWM/L5clGXg60JeHlXGPvLgdgVbucY8Guy5E4oS6nEB26HEfR5srJMzTl
cnmaHIvS0D4sCsMpsLBZaOstp9FEt5yGd1tBu/A6W73YUAy20jSStErSEJ5a
3UuSmor6GcVGRc0jC6jkKkt1TlGHwWumYM/JZlnOxMhkOcOOP5ZTccooPrEo
SyxHEcWwcuTtuGA5dhf6V708442vnEWUvEqvUXud1+pxrONkB3pdo+1G2TZC
r4t7btyOwrYbK7yu1EaVyok3V9ibpA5I2KqPBVtH22y/3ajGnvTWG66ArdEI
Rbrmxa2qrqU/zOva9eIkvVG9PGALfGvAFgqA7Tw94pn5dO711ppWgDT2c21E
ywIlgHbnJgdofNcKgBbmAS099jsDNN+ttcIo9LaA1miwHzZiNaANgk7v3lX3
5lEe0G5PL7n2lhDt7pL1ncEJ/99Hy3puI6WlFUpmnBb7cRS0xKNbH113Tx/e
HN5Xjm71pIC2iifwWbnNsC+UtzZCtOKBRTuaKIZCacU8kqYVo+yBWimXamrF
OFNWK5Y2l7VieTu4Vm6T7dGt0mtCkdc+u0xm1w5/QJ070yfOaPKE3VmSYcHW
BvwrCILWpE3QFjZxgjG0SWLI3ibJtcVuknhjfZPkYBFOEmfB4iTJOJKThBFl
TpJKATrZaTZ0OkkMjeuAULTaAZk4vIMaiTY8SSiN8iSheNGTtxIPe9KrGsX3
ZA0lMR8citA+6a6T0A/onxT7AxpLJkD4Gk+VQKCH4UFQfjjILiiJxvCgJMqO
EkrCcVgIdgGUGUoSiXQoOzl2BFGSvgtIlN4c8J4oiSSyoqybqXTRZ//w0YC+
2/aboC4225HbDn1YF/m4wpZCF8VNVSEjWEphjXCNEDlKH5cE8nh+UbtKRk9H
k9pnP5sWntcfuwfNO92j/XB89zx8+LYXH575zVsbj/QCoUeKOLKkkW+9VIj0
m9Yg0stB5ComE0FeR0EEvbwI7hQE3bjWioJWtAXBpufHvhupQfD4aef00XXn
4GEJBDvJ+XR2XSJB3nW4R5+nv6wXtlOqYLHwmgXdqBU1okgCg1fd3pnXvXno
KWDQl8NgVgGBBisNh42ksrkRDpYOMVoHhTkUHiwFknywlGUPCMvBVCEs5ZkS
Yam4uRGWAuwgYaVVtpUQukyU33n33Rff/vnzL/7ooy/88sMvfOOj93/+/P9+
8be//t4Hv/7R8//1Jy++8pPffP6/f/CLb/zmz3/w0Xe/9+IHf/j8i9/94B/+
7Le//tKLr33+w1/99MX3/w8r/ttff3mVz7GRRzq8yrbTSYajvsOP+mwxd/qT
odOdTvbZNyxeu/PObMS/Ts2dT95mV4zRZDldzp30ywP7KWbQH7Tb2jgpDTH2
SXkSmSjl0baUUl6DMVTKo7BWKU+0wJXycJxYyvOIaCkPprglcOIN6VKeRNNL
OBcNmHAszjAVTUUzpjyXJpnyXDxmgm3FeyZ0CaSQJtBckmoqcxGwCR0Dkm3C
/ZbCm3CTycKpvDNQkRPudnjnBI8LmTrl6RjtlKfZAU95Ps48VZ0CxZ7yUKJ8
AufKDn7KK9iFf0K3FDyBylOJCgr0PQ0IDXtuyMdH+gEEob7HX4sOYgBC+ZvT
bKtIAaHS1qosVFVQwaHKeiERhR7Tcii6Nc4oasSx0Dl9r9GsSufqp1vrXCnh
Sxx1GTasaacfyrgzraXgnX5hCOTqKOyOPINa7Da8Rm4MZNNreDrkOQg7vcHT
InnmRiaVzPP16QnrIskkqRe3UXrnpmBGnY1mEDRakgk+WZtuOsFh75FqCKQr
lc4snwCd+RbDwpPf0og3t0cTLZvlCApqbrNInrmNsUeZuUyqYm6jTAFzW9Lc
Lrdl7bBlvi22xVL2IS9qZX5azt6sPzhjXc8Z9ucnR9P+bIgQQ1m12looDDCW
QnEKWQnFsbaEUJxurIPiGKwMitMsqKA4GCeC4iyiBopDKRIoOcGGCihOoQmg
PBOtf/JInPwBTUSrnziTJn7iTLz2SduIlz7ZZYyifJJmkoQPzETonmy/SbIn
75cU1ZM3lSx64BWdqnnyroWXPOmxICueOBkjeOIkO3onzsbJHXTyUWonDiSK
neS82NE6cfgupE52K8ArnTiRKHSS/qU1TNFrtoMwG4Io1Tm37TfgYYrZJqpJ
C4UtVckcVEihcmB9kMjJHoMEQxTnJ6PJde2UFdgf8BJp+fyJ2LCdH0bCiQgF
QxOD3+XQxHgnIxPXr0inLrJlrsPsr9vXo7uHtx48uPNW795hd41EqybI3oK+
lZ9GMIaGPAY7HPLYbNaCKMq9AR01PS/2yrP1CfTvYdjp3fE7vfs5/evymb/2
c4/3+w/TT2fZAptB68FiORxN61AJpQxuYjIZDMIgcGPfF9Ngx+3cdK66p/eu
FTQofzt6XQHBBvNthi0lv6WRDW6PLtoGyxEUG9xmkWxwG2PPBnOZVBvcRpna
4LakuQ1uy9qxwXxbbNug3oe+KIV8TONf/ODDH7//0c++wv/8g68+/+KPPvzK
3374nT968bM/WY11/PBXP/zo/R+/+NbPX3z9fT6g8WfffPGdn2wGNCI0Ua+h
2raoEWcsjTqZZHfUqcSWQurUZWySOqFYodTJtuCVOtXg9FInmWiZOlVQZFOr
0xg6p04mTT11a0AbqG4FOBHVbj7aR3VqoGmpTg14O9VsP15S9S7MFFfV2gWS
shrUgDBXvSNEEljdzwHFY3V3g6yzBnczqtXqdl683GoeNbLj6tSDUV2dXDvG
q1MTTnz1OxTKf3XiiRqsdXbt2LBOVbuQYr3bIN6NdfKJiqzVgzUWwgl6Xtj2
m20/UkysGcXtqAW9+h7yEZ+BasSnRrtVwqwfofBmg7ZA+qz32Cxe8CYQz8cZ
CRa7iYLf6ZhQd/cvwPM65Boc7XBJmWaj5gatRu7994YXhg1PZzDo0+7B/aDT
KwwGPWFdgC8+f1LyXz5seMRuwvnfq1eWSQvtrd93D13X1VlV5tFV9+DWVedA
uaqMfEToujLKqjLrxivW21hvZraazOpw4leSyZcnrSKzCqKtILPKsLh6TBZI
XjlmlWO8asyqmLntZgUtrRazbsXOVooRfKRLoz43v3I6/Qv+ijnrZA5/i8BJ
bxiF1doPl4sjdqM+qyH8VtQU/WVjyoXNF46pJNCXjqlEWls8ppJsvnxMJQK9
gEwlycYSMpVQ5CIylRzqMjKVQNJCMtUTabqUTCWB5pziPPxyMsI45IIy4qbh
l5Sp5BEXlankEZaVEbWNsLCM4FJEWlqm2jza4jKyPMzyMoJ9pS0wI+x3FCEU
N5G+yIzsSkzVP3H3ISw0I9p/+lIzlVTUYjOVFEvLzVRykQvOSE4ybsmZShh1
0ZnqObC07EwleCcLzwgu4YSlZypp1MVnqn1IrWSB23MjPkGkB74X7cV8WOXq
pWeZkvH3ptuhcvmZcitVJiYroFqCRlYPuAiN4DGjNNKSFVhttT4Bo2n+kO9t
+CtoBsL1aLi8VNaj4T/MDbN8vX/Zf5De4PZ2JWGrHxQgzN5EkK7MwcrzQLqF
lWH4UdiZgwW1IGzE+XVh4mZYfudYvC5M9/TYzd4/zs32uM/7wf6TWXqzG5Y4
bD6dPZ1Nj+rCDZUulpXOYMwL3LDlcUIUjYG8c8P+HHV6nSsFhsmXWF5XQMCw
bYthU9huZ8Rh68OJ9rBiAAXE1kkkEVuH2COxTSLVxNZBpii2LmeuYuuSdlhs
2w7box3Bz3QRxjr9i1cddivtp1MrLkbnyXg0STiQFdZQXiUhF1IGm6ONY/IU
YyUDoshcBmTbcjOgCmNAA7KwkgZEWiA1IB1na0AgEdmAZIq2QaffkN2AKJq/
KYLREKfIxYmcqrFomgOCaUYHBOOxDm4tXu3AKyKF76AGkxxPHYwAPfAwkGRP
0X8pxKdoNNn61PcKKvopeh9e/+BDQ2ZAIB7jgUCcHRgEKsAJobJroKgQSCWa
IXTC7OAhUMMuFBG8yeA5EYgluiLUBfVe7fb5q92eCwJjwCdnXCGkbOJFtomf
LYENAKO8uSppVJZUkKO6Zsgewcc5wevei5NkPV0jL7+BR98NYuHb3YLpGIPC
ZIx7by+TnXmjaOSdvbkYpQPvyhMxFt/C3uEsjA2/FgZx09+CYxzHrtvw1eD4
yO+e3rrq3tyrTMK44DOrJbP9/qQ/vmYXoPJL2MPpYDw6ni7q8s2V9rjOWOOj
64Vx5ElewL5z1end97u9O6oXsOUj8dYVEPAx12RYcHIbGvHj5rii/bGUQAHI
TRRJIDcp9ghyG0k1yE2SKUJuCpor5KaoHYbMtcS2Q2p8yosaeYv/Zj5arfPC
jwxf84V/iR4604kzSUfqFVySk+Q+v7u8kiJmzUHwpEYrtZFSlWVMlcpAMlgq
a7DFlsqKjPFSmYglTGWwBchU1oHjTGUsETWV+RTaVHcRQ+BUBtKYUysejZ1a
6Tjy1Gs4Gj6V8TT+VMbjEVSn5XgK1bjWUkBU3XgSi+rGI3BU48CQiFSrv1Og
VGsHyFyqe1+ioqlWP8XTqc7BIgOqshIMoypD7WCqshocqWp2HxSsKrOJvKo+
nXaQVVnPLqhV44aGB1dlOJFd1Z1V4x3oJn95OWy2o1COrxGfe9OL22FDiq+b
TUIFvqoarSJYzfIKiNVtBcSxGo+v4vee/Tjgriga+Ska+FkA2E/3Om+8VIFt
7X7IZwse8rk7gY1btaDhxs2cwPph0IgDDYG97h50gu5pJyew+Xff71yMhsn5
aLC/HsB1WYLYRyO2M6+zC1ZdWUwJspusTGQDzw/CZks2JebTzmnHPTw4I0yJ
mVVAENl8m2HMym9pZLLbQ4xG2XIERWW3WSSW3cbYc9lcJhVmt1GmMrstaU6z
27J2bDbfFts4a/DJLyLtP//wj//nP//wm7/6p899/Z++963f/uKbm8GhDvsC
NjpPT1IquOzCmgzYNdJZzvkqO/yhn/U19t1p7JyzK8L4PzjVeTVf/PQvX/z1
lwuza/6PH7NtfvMXf/jib76K4F2D/dRmXt1MY+7VDiazr3ZNtvhXu0JjBtZO
xnKwdgUWWFi7LhwPa8cTmVi7HgoX63cpQzbWDqbxsVE1aEY2qgXHyWY7gmZl
7WpovKxdDZ6ZTfYEz80G13gKO+vvDImfTatBMLTBASNxtNHnhcLSRjtE5mnT
+ySVqY36N56rTQ4ima21K8PwtXa4HcbWrg7H2YbdDcXa2nUQeVv/tNthbu36
dsHdBjdYPHtrV0Lkb/1OrsHgUc8P2n7UdhvgGOQWX/zdhyY58Nw2SwpVY5B1
G6/icMMcBYubtgricYPHf9HC8aHbcoVrUIWC6UHDoDg5wvLiepHMnO50kRyx
R8+XCuZ8ioJdizmvQ07m4Q4nC42btaDltvz8ZKFuI25pkDlfNX7gH/byZJ4b
U7j6P07mo/KI5Vt9tsk7/dmwLtlYyeObhIzHfd9thH4oWUz+3jVrpts5ve8r
eNyX8vi6AgKP59sMc2J+SyMe3x5YNI+XIyg8vs0i8fg2xh6P5zKpPL6NMuXx
bUlzHt+WtcPj+bbY5nHl5700cjkdrszF21lvw4cs81lGV+Wd9YKIpn6tbIi2
WsNJxlatiCMLtSLflksrqjHWaEUe1qAVsRbkWVEDzpsVoURlVqRTbFnVLQxF
WRFHc2SNcLQea2TjzFin0WgpVoTTfFgRjldhdavxFqy8mlIEWNVwkvvqhSO0
V3lISMar0b8psqvReLLn6t1zqIqr0TPxdqs+TGSxVVSBcVpFpB2dVVSCM1mt
LoOSWEUy0V9VJ9GOuipq2YW1Km9WeGFVRBNdVdU99aaMdbmURvCUsW7bb7WD
plRTQz6rbMD+8RWaCjdZZahapRVyqtcCyEuVj5uSwcS+3xIuo+S1BIOJWx8f
J/2dDyxu7VBJG7UwaIb5qWTDKPBdralkDx7edE5viZG0ZKMnrGtM5/XiBkoP
XZXaW8/eEPh+Qzp3w8296+7Va68pKBSau4HHEyB001hYjTabGRFodvzQ/lko
T8HPLIgkn1mGPfZcB1LNM8sxBc+smLl2ZgXtUOemFbadU/jZLdpmukxSOr6X
3WXHfI5YJ33LxJlfs8vUeTZBw4PBrH9x7fyeM5o8GS+fDo/YH9kn7Qm7dbA/
dd/o/Sf2rweL/oRdFYd8vaWk+8abCA8VNljbQKuljd1TEEG2TkGmLd8URBub
piAD65iCKAt2KUjFeaUgiGiUgkSKS4pOp6FFCiJo/igJRJujJA/njLLGoW1R
EEjzREEg3hDFrcO7ofDKRLFCUQNJPigPRJigcHdJDijpfxT7kzSS7H3yazPV
+CS9CO964kNAtjxBLMbvBDF2zE4QjHM66alG2ZwgjehxohNhx+AEybtwN+FF
HW9tgjiir4m6ktYsqW6rzf4J4cXKw7bbaEeu1NSCLCZSvahfbabK0aQlFHYm
rwnyMuHjSHUpprBRa8W1ZliLw/qwHr89GFy+1Xznps6uCZP+/mYq1U+xp9N7
w9e8vbWrNZu+cI5UVzBHqltQtTevFyfp3e/lWVq4+2lSQ3CaVHeHlhbU/Fbk
NRpbTYu8KGiETbWmPXza7XWC7sFxTtPST8IkudrPM+uYHaj98/5FydfGR6et
OAgbdVUhpbmtkzJ1azbDKGqK1e047B489A5vEdRtFU9Qt1xzYcXIbWgkb5sj
i7a3UgJF3zZRJH/bpNgTuG0k1eA2SaYKtylo7nCbonYkLtcS2xan/Tkv+tzv
s28BfLDhbX4vcaZP2FeZUX/ssPJzZzF1LqYXzvKC/7Uwd+qAf3fgxVhkzXGe
//CXH/zyGx/84qfPv/8Pz9//0xff/vsX3/75b77zq+d/9L+f/+K/vvjWz198
/f3f/vprH/7qT59/6W8Fr+3/+Esf/ONXWcLzP/v58+//4we/+Mr/+9wXELqn
fQi0xU8v0VgBNWPJMqhZjy0t1KzOWBA1c7GqqBlvQRo1a8Lpo2Y4USQ1a6Eo
pW43MpRLzViaZhpUghZOgzpw6mmyE2gJ1ayEpqOaleDFVH8v8IqqfRWnyKru
jpC01awShMBqHyqSyhp8PihSa7AzZL01uwdSRdegR+OVV//wkeVXsyqMBmtG
2xFizcpwamzUxVCSrFkDUZd1T7YdcdasbRcKrX3zxMu0ZhVErdbt1hrv2Ls9
r8F1GhLsqOem27gtsWCnM9Z6IR846rcUgq3XdJVqG6UopNusRZB+az+uS0aN
8tGPVd32BRPQ+sUJaF/vX/YfpF8wXqpw21sITDpatLwQWGG0qL/DaWijRq0V
hXEjP140it1G7GmMF/W6p7eC7umdgnCv14djn+iSaFfXkFttowTsrGDm117g
hi0vcCXjRm/Yn6NOr3OlEOxAPm40q4Bg2NsWay3abirY6yOJBuxiAMWv10kk
vl6H2NPrTSIVr9dBpna9LmdO1+uSduR62w7bcC37OBedutO/eDVdpiudHJaP
Ix2PJokzfVJc02sznewrCD+WtUSbi4UBxjosTiFjsDjWlv2K042pVxyDlV1x
mgXIFQfj3FacRWRacShFZSUn2BBhxSk0c5VnoolVHokTVaCJaEAVZ9K8VJyJ
51FpG/EaKruMUfBT0kySdYKZCNqU7TdJMuX9kgKX8qaSnRK8olNZUt618Aop
PRZkdBQnY4xRnGSHFMXZOEGETj4KDMWBRB+UnBc7HCgO34X+yW4FeOwTJxJt
T9K/NAajenzVKK/V9l3FYNTAb/sxNF3mapNAQXnClqrkDiqkgDqwPsjlZI9B
pYGpvBR71udb8Y140b21zUnWhvIFr3P7HweaewnzXYLTXfKjsEOaa8Zu3Iry
S0S1wgZ/5V69RNRh737A/pujuavlSX9SIrnByWw0P3eHV2f19a+VGrctk4Fc
7EdhLFnw6dF1t3ff7xwTBpSu4gkYV2gwbBqFTY1ILnck0SpXyaDAXC6MZHO5
HHs8lw+lCl0uyxTpckXNnS5X2A7VFVpjW+sEn/QS1PHFmcZ8yabpk3QKS65x
6UsKznS5OGK34jNnNHHe4YVfXQ07fdU5unZen06ct9iX4Fed15P53Pn92Wh4
nLAtOPfd5pWyn1+xZKe/cN5gV8j04ug8nLDdm7HduK4hwE+wM9rWVy5rzHyV
ALLwVRJt4V4l2Nj1KglY0qsEWdC8SiYO8ioxRMOr5FH4rnoKDeWuEkBDO2Ec
2uuEaTiqEzcMrXSVOBrQVeLwNidqGZ7lBNceishVG0fCOFkcwuEEO0oiOGF/
o+ibsIFkeJNdd6nmJuw3eG4T7TxZ2iqhGGSrhNjxtUosjtYkpxelapUsIqhV
D78dS6vk7oLRBBdsvKBVwoh4Vu08GkPg0kkP3WbbhSdGbLTdMHtDW+hmfs8L
2kGoXmam3EgVmUm2V2iZrBYIygSPD6JlYDw/aAhXgRGMVAuLI9XeeqkK5r2E
d7A98CXscJdD1NxaEHtubtmXuNmM/CDSYLDw8OAhfxdba0bDIfvYsDvEaX9w
Np9OTGc2LJbOaCz0G0Hk+5LlXu5fd286Xuf0nmq5FzmOrSsg8Fil4TAkVDY3
YrLSMUZTmTCHwmWlQBKZlbLssVk5mEpnpTxTPisVNye0UoAdRqu0yjalgdeJ
Aqptr6AmugXmazuXPMVYvIAosn0B2bYUDKjC2MOALKyMAZEWjAxIx2kZEEh0
MyCZImjQ6Te0NCCKpmqKYLSvKXJx0qZqLNrcgGCavgHBeIeDW4sXOfCKSLE5
qMEkpVMHI7wOPAwkuVP0X4rhKRpN1jz1vYLqeorehxc++NCQrQ+Ix6gfEGfH
/4AKcBKo7BooEwRSiToInTA7TgjUsAsxBG8yeDsEYomKCHVBDU9s9Vy/7UZt
z1O8UhuGbU++0ErAh/NFfjtwFZ4ob65KFpUlFcaorhnSRvBxTvyKbCxcfbpR
ZcdGXh1XCS+PHYPdD74LoMF3jd2ZY9ioNbxW5AU5dAzCViPUQceb7sEZX0ol
h458oOVjdpFZHvWzb0J5ePz09OJsNJnfOzioVzdUwuO2dIaOURC0mq3yFJXX
h2et63f9P1j2P3NxMrw7vjw6fXjTuTkLD3vHqsF58uWms7oI/FhoPgwvhU2N
2DF3hNHkWMmgcGMujESNuRx7zJgPpRJjLsuUF3NFzWkxV9gOKxZaIyHFw9zR
QdEieCUojte7M1+MztOvKelove2W6Uu2m0F808tkXHzVdjOu75VsERdehH1w
2ZeJ2epN3eWcpw6m7JOfrH6ymE7HmHWswf3Rpkx5ijFlAlFkygSybVEmUIUx
ZQJZWMoEIi1QJpCOo0wgkEiZQDKFMqHTb0iZQBSNMhXBaMpU5OIoU9VYNGUC
wTTKBILxlAm3Fk+Z4BWRQplQg0mUqQ5GUCZ4GEiUqei/FMpUNJpMmep7BZUy
Fb0PT5nwoSFTJhCPoUwgzg5lAhXgKFPZNVCUCaQSKRM6YXYoE6hhF5QJ3mTw
lAnEEikT6oJ6QyMb7aDZ9loQZfpu21vPIChZM9r322wr11NQpry5KspUllRQ
prpmiDLBxznhEMq46XviJaIDwTvFQWEQJV83dO9f5lI2UtAsj6IsgCbf/52J
ZlhrNd0gjnMT/bmNlu8GGhP9XXVv2L8POjnRvJ2SwtuPb5+wa00yYSesaJpX
o+Gc38CXk9Hiejo7rosKKG2znLIWTi9uhI3Q1SDOp93Tgdu9ua+aDlA+xHJd
GcE4BbsBO5CggJF3Vo4+Wj0lSRT7rESSBLSSZs9Bq9FUDa0kmppoJcBcRisR
dnxU0LJdKanWtaWopbenk8vpgHvbqO/cLs886Oynbzu/4mwCHPYfhHdqtUzb
PdVpxv6pEUl2UI06bHmoRlXGLqqRifVRjWgLTqpRC85LNYKJbqpRA8VPdbqL
oaNqRNI8VbMCtKtq5uN8VbfxaGfVqIDmrRoV4N1Vr/V4f9W6ElMcVmcHSB6r
XwHCZbUOD8lnNfs/xWk1d4Lstfr3LqrbavZavN/qHTKy42pUg/FcjVg7rqtR
Ec53tbsSynk10oneq3Ni7bivRk278F+tmx7egTXiiR6s03W1hrj6bjtsZmNT
Za/Mu2E7dOGpJrNNVFNNqput8mHtBIUT67cE8mKtx+HquulHo0VtfF3PP7Pn
HtnTiSvZ03o+I9Nm8fv6gtf1vd/luNnf9YrpO3xXPwxrYeDGYW7OyshthE1P
Y87Kh1fdm/thpzBnZXoJS+cy5We9RMzZL5PFFdvpemVTJS4XymeyHLhu6IW8
H6lkuXPVObj/tHvQCRSyLF9oZl0ZQZbL+wDDWXlrI1MuHm40KItiKJpczCNR
cjHKniOXcqmIXIwzFeRiaXM+Lpa3Y8flNu0KjhVXjCIZ33qrd++2M+lPphfs
2uawO8FiOpiOHXaJTbU4hePK+FoEGitapc3FUI4xFINhZCIG023hMFiJMQuD
aVgQBkMtUDCYj0NgMJLIv2A2BX7hrmBIvmAYDXuV0WjmVSbjgFfdYDTtgtE0
1AWj8ZyrajEechXXSwrhwo0m4a1ONIJtFQeDBLbK/kyhWmXDyUircz+h8qyy
L+JhVnWAyCQLVoDBWDDQDsOCVeAAVqOboOgVzCWiK3zq7HArWMcuoFVxI8IT
KxhMxFW4Q+otxu22/bDtAqzq9/yg7XntyJcuxh322O+DWD0TKdRgFahqlFVQ
qk7tEKIqHg/FMwg0vTAWWWhctdD4X8ccAlILLc8hULDQeLcWyvkzzM8h0Aq9
0NeZQ+Cwx3HxXs5C06lqC0utr9flKLno5WjcH/Tr4PZKHF2FrFW02WxJ5jDt
hIcHZ6r5Sz05gfJkgn9umgnDz2YzI/HMDiSaOgvlKcaZBZFwM8uwp5rrQCpn
ZjmmjpkVMwfMrKAdudy0wvYkozof4qJXpivzFMa2HuauD4YmqVO9Nkwqw4x1
Up1IJkp1FbacUl2TMVaqI7FiqU62wJbqSnB2qc4lAqa6AopianQUQ8pUJ9I8
Uy8fjZp68TjZ1Gw6mjfV+TTjVOfjoVOr7Xjt1Ln0UshTo/kk99TOR+CnzrEh
Cahev6cwqN4ukC1U+05FBVG97opXUa3jRaZRdS0YH1Wn2kFSdT04KdXtRCgu
VYcTzVTjnNqBU3VFu9BTnVscnlDV6URH1eizGpja6Llu2w3aXgxOw+rxuQtW
U7UKx6iuN3FbCkxVtlolqroBClbVbgdkqzqPuWJgjYRTtIaClaF+l7zq735G
Ax+a0SDcIa8GtYYbNoM8r3qh14w8DV592j24E3Z7d3K8yjl9n4/rKmlqf8Iu
j+Pl2WhSz2+iHl26KZchahjx1klWgvLSBt1XLpMul9RVPGUoab7BinF0+U3N
BpFujyZ+BGk5gzR8dBtGGzu6zbE4cDQXSh41us0yHjK6LYoYL7otbGmwaL41
ttlV8mkXSWt+UtWSihqN/hTXqD/qU1DefLSnKIQ+ylOUam10pyjcfFSnKAU9
mlMUZmMUpygXOXpTFEUdtSnKJI3WFJ5a01GaohCaZkoj8aMyZYnI0ZjSBuJH
YYoiiaMvRZGEUZeSFhJGW4qvW6RRlsJG0kZXApGYUZXinaaNppT1R9IoSllD
6aMnges3edSkrE8RRktKDgR9lKQoGDU6UhRkaVSkKBo5GlJ+2nGjIEV51NGP
wlNiadSjKHsnox3FF37CKEdRIHV0o7BjaUBcutZR1Gp7PviyeKsdBu1Avh6S
nw2O9JWjGgUNVY5mlJdRjWIEagNHL4ofb0ovffNC+WWVblhb6ntra2v44ilE
BdrmFbht79O9zht7LxPcXGvgFuTA7Rl/kON0lh7vDKY693rOG9kW7PBcDJ9m
qnSvpwKfLJivtJYG5kRqEPfujk/ffSe6ebd352bvvY3zuSXnCwqvlO8W+qK4
6TZyE5c2gjBqld/RFk1cGnRu7nuHvUHO+cbsTAymw5LyvcF+uho6dZAsWKeY
zurbDZXWVy2dmV/sRnHoNspvvwteJ3901e09ctnxdxUCKJ+odF0ZwQCFOwKL
ibCIkQkKjj3aBqVZFCMUhJKsUJBnzwxF4VQ7FGSaGqIgwtwSBSF2TFHYul29
hQ5ea4rSyDfNhnQ6hY+XmTGCNWpLozzF2BuBKLI6Atm27BGowlgggSysQwKR
FjQSSMeZJBBIlEkgmeKT0Ok3VEogimaVimC0WCpycW6paixaL4FgmmECwXjJ
hFuL90zwikhRTajBJNtUByOEEzwMJOdU9F+KdioaTTZP9b2CKp+K3of3T/jQ
kBUUiMdYKBBnR0SBCnAuquwaKB0FUolGCp0wO1IK1LALLwVvMng1BWKJdgp1
QZWgpvTpNjh9Rk1IUPmUnG7blS/DtNnEVwiqvLkqR1WWVGiqumbIVMHHOYGs
rn7Jt2fFa2ezLax6nieS1agKq1HBVW8/eLAzVl39oKCq8U6GMX4cVDWGRk9G
O0RVvxa3mnGYW+C+GTRbkasxevL45vDgzGO/y6lq7rXT2yfsilfi1bP+iJ2s
k7pgMyWuZmUzUfXCKPRbnngY5R2327t/fbga14kbRpnlEwx1216YgbbbGWnp
+lCiibQYQHHRdRIJQ9ch9gR0k0hlz3WQqXWuy5kD57qkHdXctsP2MEng81wA
zO1IcROuBNK1sVKWYUyV0iAyVEqTbTGltAJjpJQmYYlSGmgBKKXZOJ6UxhFx
UppLoUn5KTeESWkQjSXBWDRKgqk4koQbigZJaSyNI6WxeIyEWoqnSOCaR4FI
eWNJDKmKRSAkcABIBAn2VwpAgg0m86PqPkDFR7C/4ekROihkeJSGY9hRGmYH
HaXxOHJUdAcUOEozidwoP012sFGavwtqBG4geGiUhhKZUd7pNJAxHabpttou
8L503POiVBBdABnZJkGrHamGacoaqyJGRTkFMKpqhXgRePwSvwvtCZfdUU01
udvBmQJFtPcydKj7MnT4suaa9GuR7/u5ZXcakdcIGxqaN/A6Pb5CukTz9m+f
zNhJ37/zlN0u56uvO3nZeyc5OkguH4zOL8bsopQM64qySu4rB2buF7QaXsNt
tSSzUEZsB4LOwVmkgD9gMZ6sAoL8CZoOM4qggJEFVg4+GgUlSRQdrESSmLCS
Zs8Lq9FUOKwkmgpiJcCcEisRdkxR0DLbuGh6SbEgjqZVajOkUbCxTZqlk8HS
rDpbimlWqzFtmsVjvdOsFgsIalYhTkbN6iByqVllFEM17HCGsGqWTtNW87rQ
BGteFc5lEbuExlqzumiCa1YXnnWN9wlvvaa3CwoAG+4WSYVRdSGo2PT4kfzY
/HNFQWXzXSNLM+oOTOVn848A3qSNjykZqs1qxOi1WQ12SNusTpxzYzojCr/N
KiKKuGF/sMPkZpXuws5Nb914UDeriajshp8D9QwJgdfzvbYXKcb3es2212r7
Ldm6T1lMs+2q6N1oD1QejwlTID2qfZDcmzKGmPNd4WQLrmCyBbfg+a/3L/sP
0q86O1P93c5xKl1Cqsz6hSWk+FHYoesHnteI/PwaUmEUBS2dNaS6Bw+9zs1Z
DvYHuf6Q3rLylH8xXFzPkuW8XtlKifbrohnW+y77T+iKrf7eVefg1lX34JZq
kK58poMsn0D1uQbDGJnb0IjmNwcTTfKlBArFb6JIBL9JsUfv20gquW+STKl9
U9Cc2DdF7dB6riW2SV3+0S7ON/D68uKaXbcc9jUpOeLU6fQnQ4f97GQ6cVYb
zh12UXRGk0v25W10nH5dclivdPjsPrbmRJU3VxveJRHGxC7LIWO6LNgWm8vy
jYFcFoSlcFmeBfSWReN4W5ZGhGxZLIWspSfbEKdlOTSGhlLR4AyF4mgZbCYa
kWWpNC6WpeJhGGgnnoDlFzkK9kqbSmJdRSoCcOV7T6JaqJ9SUBZqLplfFVd9
KrRCHQ1PqsARIeOpLBvDpLIsOyAqS8fRJ9wRUMgpiyRypvQM2YFLWfwuiFJ+
u8BjpCyTyI7S3qYxBWvc4ysYNduBBwJjzMf2BrF0bG/Y81rt0GNbKYBR0lYV
JcLFFGioqBPiQfljlRgC/WYYCmdeVQ7tXT9HdrPnyJcKgvbWlHc/ZrMFlJey
d1/e8GI3Dhs5hWyEHl/aXmN4sdvpdbzOwX2JQvKvwWWI7I+Tpws/COuiDdUL
L2WlM4v0Yj+MfF8yYYDfOb3vdU7v4S0yy6csvLRtsGJxmu2GZosurY8nfsml
YgJpwaV1FG25pXWKxcWWNpHkpZbWScYLLa0LmlvkpqilRZa2LbG+xBL06S5y
5C32gMi+t7IvQ+PxNffH/kXisJt6P2VJXoZ1ntFg7kyLC98vps55/yzhLnnu
sC8jI1a6Pxgk7ALILvkIkATbrL9UkzTFfMEmeRR92SZ5trXFm+RVmC/hJM9C
L+Qkj7SxnJM8HbmokzyQurSTPJm0wBNw+k2XeZJH0dBSEYxf8gnORS78pGgs
fvkneTBxESh5MGEpKLC1hAWhoCsiaVkooMG0xaGUwZgloqDDQFsoCu6/FNVU
NJq+aJTyXkG1TUXvIywgBR4a+jJS8njUYlLyOEtLSskrQC4speoauOWl5KnU
RaaAE2ZpqSl5DTtZcAq6yRCWnZLHUhefArqg1gBLz2vz6Q0CxQSqfJ5VxQSq
fBPVBKry5qoIVFlStRyVsmZwUSrocS43gereWkKbDTGEBlUIDT4+EBruFEL7
F3224/t+zd3K3q30Z2sSdVa/27LorXwRPR0t1iJB0nuv5ZA0hJA02CGSerXQ
bbpxfqxm6LlBHGmM1XQ7vVs33dOHOSW9NVmMHq/WTBtUVqXvJNPJ4MFiORxN
65UNlUSaK50padBstvzAL88XIVioqhMeHvAm33uqIFP5HKvryghmWtwDGJyK
2xrJaf4wo/G0GkLx03waiVDzQfYUtZBKhdR8mKml5suac2q+tB1RLbZnV2tL
gdeFIq6mAzZXS9nn7LTtPEjGT/bZ5XJwxod2/nvn1vByNOd/fMBag7BTsEna
dipPMbZTIIpsp0C2LTsFqjC2UyALa6dApAU7BdJxdgoEEu0USKbYKXT6De0U
iKLZqSIYbaeKXJydqhqLtlMgmGanQDDeTuHW4u0UvCJS7BRqMMlO1cEIOwUP
A8lOFf2XYqeKRpPtVH2voNqpovfh7RQ+NGQ7BeIxdgrE2bFToAKcnSq7BspO
gVSinUInzI6dAjXswk7BmwzeToFYop1CXVBj7Gij5/rtqNH2GxI79fYDl28T
NtuRZOxofpNQYafy5qrsVFlSYafqmiE7BR/nSotPsZJXV1e1i9n0KDl9spxd
pwnz5ewyua5vcNWPWihbfXuZvFROtfeiuav7ovnLssugVWv6zabbzNml7zZb
QUPDLq87B8dR52aQs8sFa9+c3wQni/3R5Mm0pJcHk9vTy7pgI6VcpiUzs4xd
v9X0mhpm+eiqc3oWdnrHKrP0pWa5roxgluu2w4Kz3srIKVcHFC2U+eIUm1zl
kFRyFWHPI7M8qkSuYkwNclXKXB9X5ey447oNuxJH6We5qI25DRy+wXlaIx+4
2Z1eJuPCm+OfXN1Sbk/ffsVxjq6dIWs8e1Lsj9ntYug4i2RwMpmyK8I1QiOl
zdWWSHGCsUJKYsgCKcm1pY+SeGN5lORg1VESZ0EcJck4bZSEEaVRkkpRRtlp
NhRGSQxNF4FQtCwCmThVhBqJFkVJKE0TJaF4SZS3Eq+I0qsaRRBlDSXpIRyK
kEPprpPUEOifFDEEGkvWQvgaT5VCoIfhlVB+OMhCKInG6KAkyo4MSsJxKgh2
AZQIShKJGig7OXYkUJK+CwWU3hzwAiiJJOqfrJtpyF/USyeTbEeRYtRkELW9
BjxqMmi0Q08hf+KmqtQPLKUQP7hGSPukj0uCZeaHk8H0svZk+rR2PtngXhDF
qDfIe+zx9F/0ZJI449vhS9xBq+Y3A7eVXyOqEblNnZe4ve7Nw6tDwUvc+6xr
DM7S1uWBbzQaPq1XtlDqHi+W4V4rCJqNQPLa9tlN5+Y46NwoX9uWj0HM8gmc
lzUW1pFsIyPMSw8e2vJypSmUl8aQJC9NsAd5qziq46UppoyXFjJXvLSYHcTL
WmD7VWzxx7QId7enk8tktqgyXV7pNq9i98er97OfzKbn6bSQt09G7OtO4pwn
w/S3/Gv6cjJaXH9y+PS6Npi8wl/WPp1PJ87qWyaC9MR7oe15guLGmCfKIEue
KNQW44myjQ1PFIIFPFGWBb0TxeLoTpREdDtRJAXthCfVUOxEGTSukyWirU4W
iIM6afPQSidKpBGdKBHvc5L24XFOfKGiyJywiSSWAxIRJifeYxLIyfohReNk
zSRTHHC1pjqcrDPhEU5yFMgCJ8rF8Jsox469iZJx8CY/4Sh1E8URyU14Nux4
myh6F9gmvszjpU2UR2Q2YY/SWHXd67lxO2xlUyqKjS3kQ+fcsO0HUmMLel7Y
Zlt5qqVfBO1UAZu8iELXgLogWhM/tkhWWHcD4aIsvmBRFr/gaG+mc/f/KzC0
j8P8iyDd8QO/M7uLanGrGUdhDu+CZjOImxp4d3N4cHzTPT3O4d0sGe4PZtN5
eebFdxJ2xRy9m0yO6/lNNBZtX5fL+M5r+WEjakqWa78TdU7vB93esWq5drnf
rSsgLdeea7RqSercpoZLtG+OKGFx9lIGbVn2TRhxQfZNjs2l2Leh9EXYN1nm
y6/nPgam7JcrbGvJ9Vxr7C+2LvzEFw3wg1987qO/+bsXf/6TD3/13Rd//+3n
X/tO/cVP//LFX3/5w1/+xfOvf/75T7/zwa+/9+H3//j53/3k+X/7KwThSVph
sMx6tTxiNXVBiIVF0wWp9tZGF4QjlkAXpOBXOheEWVnQXJCLXbdcEEVenlyQ
SVuFXHRqjRcbF4TQOE8aSVg6XJKIXSFc1kDCQuCCSOp634JIyrLe4hZSVu8W
Xrdoi3SLGklci1seiVpyW7jTxJW1Jf2RInvShpJpD7p+U21P2qfwuCc7EBYW
txYE49awFgTZWqpaEI1dkVp62pELTwvyyOtLi06JrWWkBdm7WS1aeOGnLAot
CCSv/SzqWFozELrNtu+3Q3Asnce2aWTLQEvG0mWbRMolnqsNVUEfUEa5YLO8
NnhdZuHjjWAM3VW65Q3bcn1S0umi1qdgbw2CjZYnHFfnNQQi2HiZIrj6wY7m
IYwFIHh8Md4P8pMQ3u0+dO4mk2TWHztvLo9Ygc2EhJdBaUbCu2++kRXWw8Jc
ZRIwPIPmIowLYNjYKRi6ked5wXv/5b3/D7dR8/4=
    "]], 
   Association[
   "Headers" -> {{"Server", "GitHub.com"}, {
      "Date", "Thu, 06 Feb 2020 21:10:29 GMT"}, {
      "Content-Type", "application/json; charset=utf-8"}, {
      "Transfer-Encoding", "chunked"}, {"Status", "200 OK"}, {
      "X-RateLimit-Limit", "30"}, {"X-RateLimit-Remaining", "29"}, {
      "X-RateLimit-Reset", "1581023489"}, {"Cache-Control", "no-cache"}, {
      "X-OAuth-Scopes", 
       "gist, notifications, read:packages, repo, user, workflow, \
write:discussion, write:packages"}, {"X-Accepted-OAuth-Scopes", ""}, {
      "X-GitHub-Media-Type", "github.v3; format=json"}, {
      "Link", "<https://api.github.com/search/repositories?page=2&q=\
coronavirus>; rel=\"next\", \
<https://api.github.com/search/repositories?page=13&q=coronavirus>; \
rel=\"last\""}, {
      "Access-Control-Expose-Headers", 
       "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, \
X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, \
X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type"}, {
      "Access-Control-Allow-Origin", "*"}, {
      "Strict-Transport-Security", 
       "max-age=31536000; includeSubdomains; preload"}, {
      "X-Frame-Options", "deny"}, {"X-Content-Type-Options", "nosniff"}, {
      "X-XSS-Protection", "1; mode=block"}, {
      "Referrer-Policy", 
       "origin-when-cross-origin, strict-origin-when-cross-origin"}, {
      "Content-Security-Policy", "default-src 'none'"}, {
      "Content-Encoding", "gzip"}, {
      "X-GitHub-Request-Id", "2AFC:7D72:D77D5:20323E:5E3C80C4"}}, 
    "StatusCode" -> 200, "Cookies" -> {}], CharacterEncoding -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.790012094560767*^9, 3.790012140934464*^9, 
  3.790012264235506*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"f10bb0ae-eae8-44c6-bee5-93a937b3b7b2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ImportByteArray", "[", 
  RowBox[{
   RowBox[{"response", "[", "\"\<BodyByteArray\>\"", "]"}], ",", 
   "\"\<RawJSON\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.790012050038742*^9, 3.7900120640513787`*^9}, {
  3.790012277380104*^9, 3.7900122844204245`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"2b4f7485-a333-4ed4-a250-d2deb0dbcb53"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"more", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{"more", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Pause", "[", "1", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Echo", "[", "i", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"search", "=", 
      RowBox[{"URLRead", "[", 
       RowBox[{"HTTPRequest", "[", 
        RowBox[{
         RowBox[{"\"\<https://api.github.com/search/repositories?page=\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", 
          "\"\<&q=coronavirus\>\""}], ",", 
         RowBox[{"<|", 
          RowBox[{"\"\<Headers\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Authorization\>\"", "\[Rule]", 
             RowBox[{"\"\<token \>\"", "<>", "token"}]}], "}"}]}], "|>"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"json", "=", 
      RowBox[{"ImportByteArray", "[", 
       RowBox[{
        RowBox[{"search", "[", "\"\<BodyByteArray\>\"", "]"}], ",", 
        "\"\<RawJSON\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Echo", "[", 
      RowBox[{"Length", "[", "json", "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "json", "]"}], "=!=", "3"}], ",", 
       RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"result", ",", 
       RowBox[{"json", "[", "\"\<items\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"json", "[", "\"\<items\>\"", "]"}], "]"}], ">", "0"}], ",", 
       "Null", ",", 
       RowBox[{"more", "=", "False"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"i", "++"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7897455431293077`*^9, 3.7897455994161572`*^9}, {
   3.7897480915230665`*^9, 3.7897481293775277`*^9}, {3.7897481815960894`*^9, 
   3.7897481827621*^9}, {3.7897482440850425`*^9, 3.7897484190110197`*^9}, {
   3.7897484934288244`*^9, 3.789748519132101*^9}, {3.789748593422042*^9, 
   3.789748600745116*^9}, {3.78974874043098*^9, 3.789748770221323*^9}, {
   3.789748809238738*^9, 3.789748810988757*^9}, {3.7897488681444035`*^9, 
   3.7897489505752788`*^9}, 3.7898206936120663`*^9},
 CellLabel->"In[99]:=",ExpressionUUID->"f094e2f3-e605-420c-8591-b00f7cd4d23a"],

Cell[CellGroupData[{

Cell[BoxData["1"], "Echo",
 CellChangeTimes->{
  3.7900123991192703`*^9},ExpressionUUID->"ff0b074f-cdcb-41dd-9b69-\
e46d19f4a960"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7900124012823668`*^9},ExpressionUUID->"f1270389-012c-4833-9f43-\
fd570f4d6f96"],

Cell[BoxData["2"], "Echo",
 CellChangeTimes->{
  3.790012402303273*^9},ExpressionUUID->"29707911-2801-4463-bb85-\
840cbe240fb2"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.790012403722335*^9},ExpressionUUID->"645b1046-7ad1-49a3-a445-\
5cb221be06b0"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7900124047353787`*^9},ExpressionUUID->"c05f552e-e2d9-4351-8b5a-\
72e09ad6eca0"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7900124064984627`*^9},ExpressionUUID->"a4c5337a-5485-484e-9240-\
b6bf2fe26ed1"],

Cell[BoxData["4"], "Echo",
 CellChangeTimes->{
  3.7900124075082836`*^9},ExpressionUUID->"9454f0c6-d052-46a6-b093-\
c58b0025d9c6"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7900124090273523`*^9},ExpressionUUID->"e30cbd41-081f-43b3-a82e-\
6acfbe94d207"],

Cell[BoxData["5"], "Echo",
 CellChangeTimes->{
  3.7900124100354004`*^9},ExpressionUUID->"39748cd8-6b94-4c8f-a467-\
5971cf4705cf"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7900124118034763`*^9},ExpressionUUID->"eb7c5834-bf77-46f3-b481-\
247946e9c68a"],

Cell[BoxData["6"], "Echo",
 CellChangeTimes->{
  3.7900124129205275`*^9},ExpressionUUID->"2621cd85-cbfb-4656-b881-\
b5999f36c17d"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7900124144875917`*^9},ExpressionUUID->"2ffb9e5d-ed5b-4cd4-a6b0-\
04d5999879ea"],

Cell[BoxData["7"], "Echo",
 CellChangeTimes->{
  3.7900124154986343`*^9},ExpressionUUID->"7de3d191-5a08-418c-aab6-\
9876c52f03c4"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7900124178077393`*^9},ExpressionUUID->"5d7a25ba-131c-45db-81ae-\
aa64bec89f12"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.790012418883787*^9},ExpressionUUID->"b473476c-123d-472a-a0dc-\
97f2a13be3d6"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.790012421018882*^9},ExpressionUUID->"cd9c5262-c2b0-441e-be50-\
a7b3c5e478c3"],

Cell[BoxData["9"], "Echo",
 CellChangeTimes->{
  3.790012422038924*^9},ExpressionUUID->"aa50833e-0b93-4e9c-922a-\
3b6c6c3d6b39"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7900124236870003`*^9},ExpressionUUID->"82be0e36-4fda-4f96-b732-\
b98f122e94e6"],

Cell[BoxData["10"], "Echo",
 CellChangeTimes->{
  3.790012424787777*^9},ExpressionUUID->"d5745f72-6113-4c64-a9e2-\
b536debabdb1"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.790012426327845*^9},ExpressionUUID->"a40d282a-8f3e-4960-9e2e-\
873e0e85aded"],

Cell[BoxData["11"], "Echo",
 CellChangeTimes->{
  3.790012427376095*^9},ExpressionUUID->"454f3f9b-f9c6-4e89-a3a6-\
89f9237434c7"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7900124298402014`*^9},ExpressionUUID->"5a2840c2-c140-43a4-896a-\
e337823e1598"],

Cell[BoxData["12"], "Echo",
 CellChangeTimes->{
  3.7900124308522453`*^9},ExpressionUUID->"0587dab8-4014-4ab2-80c7-\
8106bef81cd9"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.790012432291313*^9},ExpressionUUID->"cf59e2eb-bb77-46bc-b3b1-\
70c03bedc589"],

Cell[BoxData["13"], "Echo",
 CellChangeTimes->{
  3.790012433302354*^9},ExpressionUUID->"e2563267-f705-4a8a-a157-\
9de1b5175ba0"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7900124347534184`*^9},ExpressionUUID->"f14bee03-ae69-4cb8-b419-\
cc96e414aab4"],

Cell[BoxData["14"], "Echo",
 CellChangeTimes->{
  3.790012435763464*^9},ExpressionUUID->"f6c53d5e-4117-4393-8be4-\
232a064bb89e"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.7900124359704742`*^9},ExpressionUUID->"f691da8e-502e-4d6f-b569-\
e40f8c8f98f3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"14", " ", "30"}]], "Input",
 CellChangeTimes->{{3.7900124601898513`*^9, 3.7900124609468784`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"32230fab-df38-4595-96d9-47511878c74f"],

Cell[BoxData["420"], "Output",
 CellChangeTimes->{3.7900124615469074`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"9457325a-1be0-4019-ab6c-65198c1b4026"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"420", "-", "30"}]], "Input",
 CellChangeTimes->{{3.79001247101475*^9, 3.7900124722748013`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"edc5058b-3ad7-4a0e-b034-76f64d233e89"],

Cell[BoxData["390"], "Output",
 CellChangeTimes->{3.790012472747825*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"6de8c775-61c0-4214-b3d3-43f926600b4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Flatten", "[", "result", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7897485526625276`*^9, 3.7897485780198717`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"ec20d036-05b4-4afb-a155-3791a3a536a6"],

Cell[BoxData["386"], "Output",
 CellChangeTimes->{3.789748986976712*^9, 3.7898207365035315`*^9, 
  3.7900124664965467`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"8ec51500-19b3-4ce4-b717-4340caa9104d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<name\>\"", "\[Rule]", 
         RowBox[{"#", "[", "\"\<name\>\"", "]"}]}], ",", 
        RowBox[{"\"\<owner\>\"", "\[Rule]", 
         RowBox[{
          RowBox[{"#", "[", "\"\<owner\>\"", "]"}], "[", "\"\<login\>\"", 
          "]"}]}]}], "|>"}], "&"}], ",", 
     RowBox[{"Flatten", "[", "result", "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7897489993198404`*^9, 3.7897490224101105`*^9}, {
  3.7897490545694537`*^9, 3.7897490924458632`*^9}, {3.7897491775737777`*^9, 
  3.789749230686346*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"e1e86ddf-92f9-48ef-a058-9ba6c1143956"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "name" -> "2019-wuhan-coronavirus-data", "owner" -> "globalcitizen"], 
       Association["name" -> "ncov", "owner" -> "nextstrain"], 
       Association["name" -> "nCov2019", "owner" -> "GuangchuangYu"], 
       Association["name" -> "nCovMemory", "owner" -> "2019ncovmemory"], 
       Association["name" -> "coronavirus", "owner" -> "JohnCoene"], 
       Association[
       "name" -> "Novel-Coronavirus-Updates", "owner" -> "839Studio"], 
       Association["name" -> "choropleth", "owner" -> "ncovis"], 
       Association["name" -> "2019-ncov-frontend", "owner" -> "sorxrob"], 
       Association[
       "name" -> "coronatracker-analytics", "owner" -> "docligot"], 
       Association[
       "name" -> "Coronavirus-Epidemic-2019-nCov", "owner" -> "YiranJing"], 
       Association["name" -> "coronavirus-analysis", "owner" -> "AaronWard"], 
       
       Association["name" -> "coronavirus", "owner" -> "hysios"], 
       Association[
       "name" -> "2020-new-coronavirus-live-map", "owner" -> "lbj96347"], 
       Association["name" -> "2019-ncov-api", "owner" -> "sorxrob"], 
       Association["name" -> "wuhan", "owner" -> "chrism0dwk"], 
       Association["name" -> "coronavirus", "owner" -> "dreamerjackson"], 
       Association["name" -> "ncov_incubation", "owner" -> "HopkinsIDD"], 
       Association[
       "name" -> "CoronaV_Challenge", "owner" -> "widscommunityorg"], 
       Association["name" -> "artic-ncov2019", "owner" -> "artic-network"], 
       Association[
       "name" -> "wuhan-coronavirus-outbreak", "owner" -> "vilaca"], 
       Association["name" -> "2019-nCoV", "owner" -> "antonlukin"], 
       Association["name" -> "livecod", "owner" -> "LiveCoronaDetector"], 
       Association["name" -> "CoronavirusChart", "owner" -> "kaichih"], 
       Association[
       "name" -> "Coronavirus-Chrome-Extension", "owner" -> 
        "WebDevSimplified"], 
       Association["name" -> "coronavirus-ds", "owner" -> "pdtyreus"], 
       Association["name" -> "coronavirus-stats", "owner" -> "alext234"], 
       Association["name" -> "Anti_2019-ncoV", "owner" -> "MeoncStudio"], 
       Association["name" -> "transparent-info", "owner" -> "DnCov"], 
       Association["name" -> "corona-tracker", "owner" -> "iidx"], 
       Association["name" -> "red-cross", "owner" -> "WeileiZeng"], 
       Association["name" -> "cov", "owner" -> "nextstrain"], 
       Association["name" -> "corona", "owner" -> "Xetera"], 
       Association[
       "name" -> "wolfram-coronavirus", "owner" -> "arnoudbuzing"], 
       Association["name" -> "ncov2019", "owner" -> "etchorigin"], 
       Association["name" -> "2020-new-coronavirus", "owner" -> "coddec"], 
       Association["name" -> "Coronavirus", "owner" -> "instafluff"], 
       Association["name" -> "2019-nCoV", "owner" -> "ChengF-Lab"], 
       Association[
       "name" -> "Coronavirus-Dashboard", "owner" -> "avischiffmann"], 
       Association["name" -> "DonationChannel", "owner" -> "WuhanZhuRong"], 
       Association["name" -> "Wuhan-Coronavirus-API", "owner" -> "Laeyoung"], 
       
       Association["name" -> "coronavirus", "owner" -> "aitahtman"], 
       Association[
       "name" -> "CoronaVirus-2019-nCoV-Live-Tracking", "owner" -> 
        "Kyald1412"], 
       Association["name" -> "corona-live", "owner" -> "sagunsh"], 
       Association[
       "name" -> "ncov-data-fetcher", "owner" -> "jarekpelczynski"], 
       Association["name" -> "corona-bot", "owner" -> "the-robot"], 
       Association["name" -> "nCov2019_analysis", "owner" -> "jianxu305"], 
       Association[
       "name" -> "SMART-CORONA_VIRUS_DETECTOR", "owner" -> 
        "JordanMicahBennett"], 
       Association["name" -> "coronavirus_data", "owner" -> "sijiali57"], 
       Association["name" -> "corona", "owner" -> "kevinlu1248"], 
       Association["name" -> "2019-nCoV", "owner" -> "yitao94"], 
       Association["name" -> "Coronavirus", "owner" -> "xcv58"], 
       Association[
       "name" -> "coronavirus-world-map", "owner" -> "labsletemps"], 
       Association[
       "name" -> "Coronavirus-Estimation", "owner" -> "JunjieZhouwust"], 
       Association["name" -> "coronavirus", "owner" -> "bjwa2020"], 
       Association["name" -> "coronavirus-2020", "owner" -> "fangohr"], 
       Association[
       "name" -> "CoronavirusOdesseyRepo", "owner" -> "Sviper-07"], 
       Association["name" -> "viral-coronavirus", "owner" -> "muditham90"], 
       Association["name" -> "corona", "owner" -> "ugovaretto"], 
       Association["name" -> "GameJame2020", "owner" -> "iPomme"], 
       Association["name" -> "corona", "owner" -> "kaiyz"], 
       Association["name" -> "coronavirus-api", "owner" -> "jairoD"], 
       Association[
       "name" -> "2020-novel-coronavirus", "owner" -> "Cyberist-Edgar"], 
       Association["name" -> "coronavirus", "owner" -> "mshyun"], 
       Association["name" -> "coronavirus", "owner" -> "mcodz"], 
       Association["name" -> "coronavirus-stat", "owner" -> "netqyq"], 
       Association["name" -> "viral-coronavirus", "owner" -> "mudiant"], 
       Association[
       "name" -> "Coronavirus-2019", "owner" -> "Coronavirus2019"], 
       Association["name" -> "coronavirus", "owner" -> "jairoD"], 
       Association[
       "name" -> "2020-new-coronavirus-info-crawler", "owner" -> "lbj96347"], 
       
       Association["name" -> "mc-2d", "owner" -> "ivan-iliev"], 
       Association["name" -> "2019-nCoV", "owner" -> "burgess"], 
       Association["name" -> "lina.github.io", "owner" -> "lina"], 
       Association["name" -> "coronavirus-data-hq", "owner" -> "stephan227"], 
       
       Association["name" -> "dash-coronavirus", "owner" -> "chunyeow"], 
       Association["name" -> "coronavirus", "owner" -> "joshuaferr1s"], 
       Association["name" -> "Coronavirus", "owner" -> "iuming"], 
       Association[
       "name" -> "Coronavirus_quantity_prediction", "owner" -> "POGE0124"], 
       Association["name" -> "WuhanCoronavirusDataCrawel", "owner" -> "XuCQ"], 
       Association["name" -> "coronavirusapi", "owner" -> "filswa"], 
       Association["name" -> "2020ncov", "owner" -> "openthings"], 
       Association["name" -> "corona", "owner" -> "dranoer"], 
       Association["name" -> "coronavirus-info", "owner" -> "SpencerAung"], 
       Association["name" -> "coronavirus_analysis", "owner" -> "ddong63"], 
       Association["name" -> "Wuhan2019", "owner" -> "kealyn"], 
       Association["name" -> "EDITOR", "owner" -> "MCN-TV-NEWS"], 
       Association["name" -> "gmod_coronavirus", "owner" -> "ExtReMLapin"], 
       Association["name" -> "2019-ncov", "owner" -> "ricosmall"], 
       Association["name" -> "Coronavirus_Epidemic", "owner" -> "htso"], 
       Association["name" -> "cido", "owner" -> "biomedontology"], 
       Association["name" -> "VxAfee", "owner" -> "feraliscatus"], 
       Association["name" -> "coronavirus-map", "owner" -> "piscium2010"], 
       Association["name" -> "situation-coronavirus", "owner" -> "aknow2"], 
       Association[
       "name" -> "WuhanSeedingVsTransmission", "owner" -> "epiforecasts"], 
       Association[
       "name" -> "China_CoronaVirus_Data_Miner", "owner" -> "dakula009"], 
       Association["name" -> "2019-nCoV", "owner" -> "EveDong"], 
       Association["name" -> "corona-oh-na-na", "owner" -> "ddlan"], 
       Association[
       "name" -> "Data-Visualisation--Coronavirus-confirmed-cases", "owner" -> 
        "kianweelee"], 
       Association["name" -> "2019ncov", "owner" -> "eragmus"], 
       Association["name" -> "VirusTracker", "owner" -> "henryshw"], 
       Association["name" -> "coronavirus-data-ETL", "owner" -> "JenQian"], 
       Association["name" -> "wuhan", "owner" -> "yx-z"], 
       Association["name" -> "coronavirus-scraper", "owner" -> "AndyLPK247"], 
       
       Association["name" -> "NCP-Model", "owner" -> "SuperDiscovery"], 
       Association["name" -> "wuhan_coronavirus", "owner" -> "itsyaoyu"], 
       Association["name" -> "epidemicsituation2020", "owner" -> "sanghy"], 
       Association["name" -> "Coronavirus", "owner" -> "QMHTMY"], 
       Association["name" -> "wuhancov", "owner" -> "audreyqyfu"], 
       Association["name" -> "coronatracker", "owner" -> "RuyiLi"], 
       Association["name" -> "Wuhan_Coronavirus", "owner" -> "KezhiLi"], 
       Association[
       "name" -> "novel-coronavirus", "owner" -> "martinedoesgis"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "ergodiclife"], 
       Association[
       "name" -> "Wuhan-Coronavirus-Even-Timeline", "owner" -> "ShuuTsubaki"], 
       Association["name" -> "coronavirus_viz", "owner" -> "ljnicol"], 
       Association["name" -> "coronavirus-mongodb", "owner" -> "MaBeuLux88"], 
       
       Association[
       "name" -> "coronavirus-outbreak-log", "owner" -> "aliciawyy"], 
       Association["name" -> "VirusVisual", "owner" -> "EricLiam94"], 
       Association["name" -> "ncov-vis-wuhan2020", "owner" -> "zipengliu"], 
       Association["name" -> "2019-nCoV", "owner" -> "perlatex"], 
       Association["name" -> "wuhancv", "owner" -> "liu-zoe"], 
       Association["name" -> "mers-analysis", "owner" -> "sdwfrost"], 
       Association[
       "name" -> "Noval-Coronavirus-763-Cases", "owner" -> "839-Studio"], 
       Association["name" -> "coronavirus", "owner" -> "lukas-jue"], 
       Association["name" -> "coronavirusMap", "owner" -> "donpaul999"], 
       Association["name" -> "CoronavirusVisualization", "owner" -> "sgfm"], 
       Association[
       "name" -> "CoronavirusObserver", "owner" -> "SuriousCompany"], 
       Association["name" -> "coronavirus2020", "owner" -> "reetaa"], 
       Association["name" -> "coronavirus", "owner" -> "yuhanbae06"], 
       Association["name" -> "Coronavirus", "owner" -> "blowsys"], 
       Association["name" -> "coronavirus", "owner" -> "kaixin1976"], 
       Association["name" -> "Shanghai2020", "owner" -> "ykl124"], 
       Association["name" -> "coronavirus", "owner" -> "xstarseed"], 
       Association[
       "name" -> "The-Rise-of-CoronaVirus", "owner" -> "elvinaqa"], 
       Association["name" -> "CoronavirusTracker", "owner" -> "hriewe"], 
       Association["name" -> "coronavirus", "owner" -> "JackJoeng"], 
       Association["name" -> "coronavirus", "owner" -> "choderalab"], 
       Association["name" -> "CoronavirusDetection", "owner" -> "divyeshj02"], 
       Association["name" -> "CoronaTracker", "owner" -> "bahe007"], 
       Association["name" -> "2019-ncov", "owner" -> "FrankChen021"], 
       Association["name" -> "coronavirusMonitor", "owner" -> "qingzma"], 
       Association[
       "name" -> "CoronavirusTracking", "owner" -> "jubayer-hossain"], 
       Association["name" -> "2019-nCoV", "owner" -> "cooerson"], 
       Association["name" -> "true-coronavirus", "owner" -> "apex-stack"], 
       Association["name" -> "coronavirus", "owner" -> "SuperSt3ve"], 
       Association["name" -> "Coronavirus", "owner" -> "TheGodOfHuaji"], 
       Association["name" -> "coronavirus", "owner" -> "Dork3yyyy"], 
       Association["name" -> "Coronavirus", "owner" -> "joaogrosso"], 
       Association["name" -> "CoronaVirus", "owner" -> "mot200286mot"], 
       Association["name" -> "CoronavirusHackUCI", "owner" -> "flyffast"], 
       Association["name" -> "coronavirus-neo4j", "owner" -> "bovinemagnet"], 
       
       Association["name" -> "corona_bot", "owner" -> "casperbrike"], 
       Association["name" -> "nCoV-API", "owner" -> "kalzeo"], 
       Association["name" -> "404-not-found", "owner" -> "bwanglzu"], 
       Association["name" -> "coronavirus", "owner" -> "lprone"], 
       Association["name" -> "Coronavirus", "owner" -> "finateautomata"], 
       Association["name" -> "Coronavirus", "owner" -> "ozpv"], 
       Association["name" -> "coronavirus", "owner" -> "itoic"], 
       Association["name" -> "coronavirus", "owner" -> "toyourheart163"], 
       Association[
       "name" -> "appex-04-coronavirus", "owner" -> "sta199-sp20-002"], 
       Association[
       "name" -> "coronavirusRealTimeData", "owner" -> "dizzySummer"], 
       Association["name" -> "CoronaVirus-MD", "owner" -> "TheCode-Jedi"], 
       Association["name" -> "DnCov", "owner" -> "DnCov"], 
       Association["name" -> "Coronavirus", "owner" -> "notfree"], 
       Association["name" -> "Coronavirus", "owner" -> "Schukerz"], 
       Association["name" -> "coronavirus", "owner" -> "nurulc"], 
       Association["name" -> "mask", "owner" -> "dirkarnez"], 
       Association["name" -> "wuhan2020-oversea", "owner" -> "PengKuang"], 
       Association[
       "name" -> "2019-n-CoV-Virus-Dashboard", "owner" -> "PranavPable"], 
       Association[
       "name" -> "infection_prediction", "owner" -> "liuyangly25"], 
       Association["name" -> "Toronto2020", "owner" -> "ncoronavirus"], 
       Association["name" -> "2019-nCoV", "owner" -> "donghoony1"], 
       Association["name" -> "NCov2019_Data", "owner" -> "Nrg800"], 
       Association["name" -> "nCoV", "owner" -> "EthanGeekFan"], 
       Association["name" -> "novel_coronavirus", "owner" -> "WooilJeong"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "JakeJing"], 
       Association["name" -> "nCoV-2019", "owner" -> "CoDeRgAnEsh"], 
       Association["name" -> "lstm4ncor", "owner" -> "changbing2019"], 
       Association["name" -> "coronavirus-crawling", "owner" -> "chunyeow"], 
       Association["name" -> "2019-nCov", "owner" -> "sungml92"], 
       Association["name" -> "coronavirus", "owner" -> "kidanh"], 
       Association["name" -> "Coronavirus", "owner" -> "zk213"], 
       Association["name" -> "coronavirus-project", "owner" -> "KimOlsson"], 
       Association[
       "name" -> "Coronavirus-Wuhan-nCoV-2019", "owner" -> "ThinkGeo"], 
       Association["name" -> "coronavirus_dashboard", "owner" -> "nyem69"], 
       Association["name" -> "coronavirus", "owner" -> "nickofc"], 
       Association["name" -> "coronavirus", "owner" -> "teddylun"], 
       Association["name" -> "Coronavirus", "owner" -> "alamjane"], 
       Association["name" -> "coronavirus", "owner" -> "Zhnan811"], 
       Association["name" -> "2019-nCoV_Donation", "owner" -> "leonluleonlu"], 
       Association["name" -> "data2019nCoV", "owner" -> "eebrown"], 
       Association["name" -> "2019-nCoV", "owner" -> "CSSEGISandData"], 
       Association[
       "name" -> "CoronavirusWebsiteTracker", "owner" -> "kalzeo"], 
       Association[
       "name" -> "CoronavirusPersonalReport", "owner" -> "chenhua1008"], 
       Association["name" -> "coronavirus", "owner" -> "yarfer"], 
       Association["name" -> "Coronavirus", "owner" -> "GHumorBS"], 
       Association["name" -> "Coronavirus", "owner" -> "Yuriyama"], 
       Association["name" -> "Coronavirus", "owner" -> "rnjsalswl93"], 
       Association["name" -> "CoronaVirus", "owner" -> "johnmelodyme"], 
       Association["name" -> "coronaVirus", "owner" -> "themarcusaurelius"], 
       Association["name" -> "coronaVirus", "owner" -> "DuongThuyet"], 
       Association["name" -> "coronavirus", "owner" -> "MarGonz7"], 
       Association["name" -> "coronavirus", "owner" -> "juwikuang"], 
       Association["name" -> "coronavirus", "owner" -> "igorisolomon"], 
       Association["name" -> "coronavirus", "owner" -> "cfshi"], 
       Association["name" -> "coronavirus", "owner" -> "colortail"], 
       Association["name" -> "CoronaVirus", "owner" -> "Dajnowicz"], 
       Association["name" -> "coronavirus", "owner" -> "HardWorkerIlya"], 
       Association["name" -> "CoronaVirus", "owner" -> "NarekSag"], 
       Association["name" -> "coronavirus", "owner" -> "741wcai"], 
       Association["name" -> "coronavirus", "owner" -> "diehard04"], 
       Association["name" -> "coronavirus", "owner" -> "henry123i"], 
       Association["name" -> "coronavirus", "owner" -> "escudero"], 
       Association["name" -> "CoronaVirus", "owner" -> "Ruchit007"], 
       Association[
       "name" -> "coronavirustracker", "owner" -> "guptaekarigar"], 
       Association[
       "name" -> "Coronavirus_Bayseian_Modelling", "owner" -> "Koohoko"], 
       Association[
       "name" -> "propagation-model-for-2019-nCov", "owner" -> "davy868"], 
       Association["name" -> "ncov-api-k8s", "owner" -> "damonYuan"], 
       Association["name" -> "nCoV-2019", "owner" -> "hernanmd"], 
       Association[
       "name" -> "novel-coronavirus-exploratory-analysis", "owner" -> 
        "aejsong"], 
       Association["name" -> "coronavirusmap", "owner" -> "daniel2231"], 
       Association["name" -> "coronavirus", "owner" -> "Gazerbeamco"], 
       Association["name" -> "coronavirus", "owner" -> "karolkolodziej"], 
       Association["name" -> "-coronavirus-", "owner" -> "143034"], 
       Association["name" -> "coronavirusanalysis", "owner" -> "PratirupG"], 
       Association["name" -> "coronavirustracker", "owner" -> "nerocui"], 
       Association["name" -> "coronaviruslamp", "owner" -> "larsgimse"], 
       Association["name" -> "Coronavirus_ios", "owner" -> "jwktls"], 
       Association[
       "name" -> "coronavirus-seasonality", "owner" -> "ctedijanto"], 
       Association[
       "name" -> "coronavirus-virus", "owner" -> "mrmattwright-inc"], 
       Association["name" -> "coronavirus-stats", "owner" -> "optoisolated"], 
       
       Association["name" -> "coronavirus_crawler", "owner" -> "quangvo09"], 
       Association["name" -> "Coronavirus-macro", "owner" -> "geunm"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "joshualeung"], 
       Association["name" -> "coronavirus-website", "owner" -> "maksim72"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "A-Yifeng"], 
       Association["name" -> "coronavirus_map", "owner" -> "Olivine-Ryo"], 
       Association["name" -> "Coronavirus-Map", "owner" -> "imsoncod"], 
       Association[
       "name" -> "coronavirus-infographics", "owner" -> "epignatelli"], 
       Association["name" -> "Wuhan-Coronavirus", "owner" -> "JILI1028"], 
       Association["name" -> "coronavirus-map", "owner" -> "pavel-ilin"], 
       Association[
       "name" -> "coronavirus-protect", "owner" -> "android-apps-apk"], 
       Association["name" -> "coronavirus-apps", "owner" -> "abuuzayr"], 
       Association[
       "name" -> "corona-virus-data-tracker", "owner" -> "fasalmbt"], 
       Association[
       "name" -> "Coronavirus-things", "owner" -> "developers-arm"], 
       Association["name" -> "coronavirus-analysis", "owner" -> "HesterLim"], 
       
       Association[
       "name" -> "coronavirus_genbank", "owner" -> "smorfopoulou"], 
       Association[
       "name" -> "coronavirus_gizmo", "owner" -> "andrewadiletta"], 
       Association["name" -> "China-Coronavirus", "owner" -> "JonathanJing"], 
       
       Association[
       "name" -> "Coronavirus-Report", "owner" -> "SamuelePolimi"], 
       Association[
       "name" -> "coronavirus-detection", "owner" -> "PatornJantara"], 
       Association[
       "name" -> "Coronavirus-Tracker", "owner" -> "samjakobcavazos"], 
       Association[
       "name" -> "coronavirus-research", "owner" -> "victormaggie"], 
       Association["name" -> "data-coronavirus", "owner" -> "kobkrit"], 
       Association["name" -> "china_coronavirus", "owner" -> "lingye0926"], 
       Association[
       "name" -> "WuhanCoronavirus", "owner" -> "shadowkiller162"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "L0per"], 
       Association["name" -> "coronavirus-api", "owner" -> "catofsof"], 
       Association["name" -> "Anti-2019-nCoV", "owner" -> "Sun2yKid"], 
       Association[
       "name" -> "wuhan-coronavirus-crawler-nodejs", "owner" -> "neotan"], 
       Association["name" -> "WuhanPneumonia", "owner" -> "gson2019"], 
       Association["name" -> "coronavirus-map", "owner" -> "yixinshi"], 
       Association["name" -> "CoronaVirus-", "owner" -> "Vijayb023"], 
       Association["name" -> "coronavirus-api", "owner" -> "samrahimi"], 
       Association["name" -> "Coronavirus_android", "owner" -> "jwktls"], 
       Association["name" -> "2019-ncov-confirmed", "owner" -> "vndevpro"], 
       Association["name" -> "n-Cov2019", "owner" -> "louisnot"], 
       Association["name" -> "OpenSourceWuhan", "owner" -> "WeileiZeng"], 
       Association["name" -> "2019-nCoV_Notes", "owner" -> "nnikniL"], 
       Association[
       "name" -> "coronavirus-blog", "owner" -> "asmointernational123"], 
       Association["name" -> "coronavirus_analises", "owner" -> "Zeldsc"], 
       Association["name" -> "new-coronavirus", "owner" -> "ddzyan"], 
       Association["name" -> "coronavirus_data", "owner" -> "nyem69"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "cyrusxzw"], 
       Association["name" -> "coronavirus-dashboard", "owner" -> "tomsharp"], 
       
       Association["name" -> "No-coronavirus", "owner" -> "Daggron"], 
       Association["name" -> "wuhan", "owner" -> "EnderRL"], 
       Association["name" -> "pandemic2020", "owner" -> "zire"], 
       Association["name" -> "coronavirus_scrapper", "owner" -> "tangingw"], 
       Association["name" -> "Coronavirus_spread", "owner" -> "PrabhaSahiti"], 
       Association["name" -> "coronavirus-map", "owner" -> "yc111"], 
       Association["name" -> "coronavirus-news", "owner" -> "dexterwah"], 
       Association["name" -> "coronavirus-map", "owner" -> "Felix-lxd"], 
       Association["name" -> "2019nCov", "owner" -> "ZhanweiDU"], 
       Association[
       "name" -> "wuhan-stochastic-model", "owner" -> "jdrakephd"], 
       Association["name" -> "coronavirus-bot", "owner" -> "lichader"], 
       Association["name" -> "wuhan-coronavirus", "owner" -> "yongjun21"], 
       Association["name" -> "coronavirus-tracker", "owner" -> "ExpDev07"], 
       Association["name" -> "novel-coronavirus", "owner" -> "green-trees"], 
       Association["name" -> "Corona-Monitor", "owner" -> "thiennv2896"], 
       Association["name" -> "wuhan-virus-paper", "owner" -> "edwardcooper"], 
       
       Association[
       "name" -> "LSTM4Coronavirusprediction", "owner" -> "changbing2019"], 
       Association["name" -> "2019ncov-xiaogan", "owner" -> "GloryWong"], 
       Association[
       "name" -> "Data-Science-Coronavirus", "owner" -> "SauravSanjay"], 
       Association[
       "name" -> "CoronaVirusMapper", "owner" -> "johnjaiharjose"], 
       Association[
       "name" -> "coronavirus-data-analysis", "owner" -> "imanpalsingh"], 
       Association["name" -> "CoronaVirusSpread", "owner" -> "Pyxisq"], 
       Association[
       "name" -> "x-coronavirus-volunteer", "owner" -> "craftsman-lab"], 
       Association["name" -> "Coronavirus-Analysis", "owner" -> "Fjallen"], 
       Association["name" -> "corona-tracker", "owner" -> "rbrick"], 
       Association[
       "name" -> "coronavirus-tracker-api", "owner" -> "ExpDev07"], 
       Association["name" -> "conronavirus_viz", "owner" -> "diy2learn"], 
       Association["name" -> "CoronaVirusModel", "owner" -> "jonklaric"], 
       Association["name" -> "ncov-analysis", "owner" -> "anevaluator"], 
       Association[
       "name" -> "CoronaVirus-Vizualizer", "owner" -> "thegostisdead"], 
       Association["name" -> "x-coronavirus-bee", "owner" -> "x-craftsman"], 
       Association["name" -> "KoronaCS", "owner" -> "lumaaaaaa"], 
       Association["name" -> "Coronavirus-Analysis", "owner" -> "Bohan-S"], 
       Association["name" -> "coronavirus_scrapper", "owner" -> "renyi"], 
       Association["name" -> "Coronavirus-Wuhan-101", "owner" -> "yuejoo"], 
       Association[
       "name" -> "anti-coronavirus-backend", "owner" -> "PrawiraGenestonlia"], 
       Association["name" -> "wuhan_coronavirus_risk", "owner" -> "dankaki"], 
       
       Association[
       "name" -> "Visualization_for_Wuhan-Coronavirus_2019-nCov_cases_HK", 
        "owner" -> "easonlai"], 
       Association["name" -> "2019-nCoV-", "owner" -> "mame0521"], 
       Association["name" -> "-", "owner" -> "garchingastronomy"], 
       Association[
       "name" -> "WuhanCoronaVirusMutationMonitoring", "owner" -> 
        "CalBearKen"], 
       Association["name" -> "rn-coronavirus-info", "owner" -> "suhanlee"], 
       Association[
       "name" -> "Coronavirus_Tweets_Analysis", "owner" -> "bhuwanesh340"], 
       Association[
       "name" -> "Coronavirus_on_Twitter", "owner" -> "weiaiwayne"], 
       Association[
       "name" -> "Wuhan-Coronavirus-Visualization", "owner" -> "h-mehta"], 
       Association["name" -> "x-coronavirus-fee", "owner" -> "x-craftsman"], 
       Association[
       "name" -> "coronavirus-home-quarantine-hk", "owner" -> "williamli"], 
       Association[
       "name" -> "CoronaVirusTweetScraper", "owner" -> "realvivekganta"], 
       Association[
       "name" -> "wuhan-coronavirus-prediction-", "owner" -> "Cricetulus"], 
       Association[
       "name" -> "coronavirus-block-chrome-extension", "owner" -> "dotis90"], 
       
       Association["name" -> "news_coronavirus_json", "owner" -> "msyazwan"], 
       
       Association[
       "name" -> "x-coronavirus-apis", "owner" -> "craftsman-lab"], 
       Association[
       "name" -> "Project_2_Coronavirus_-Pneumonia", "owner" -> "peirangxu"], 
       
       Association[
       "name" -> "x-coronavirus-hospital", "owner" -> "craftsman-lab"], 
       Association["name" -> "CoronaVirusMap", "owner" -> "OBMGIS"], 
       Association[
       "name" -> "2019-Novel-Coronavirus", "owner" -> "Formalin564"], 
       Association[
       "name" -> "2019-nCov-data-collection", "owner" -> "presstofan"], 
       Association[
       "name" -> 
        "Shanghai-During-and-After-Bastyr-Landing-CoronaVirus-Source-", 
        "owner" -> "CoryAndrewHofstad"], 
       Association["name" -> "coronavirus_live_map", "owner" -> "AlaaSenjab"], 
       Association["name" -> "2020_wuhan_coronavirus", "owner" -> "odaiwai"], 
       
       Association[
       "name" -> "interactive-coronavirus-tracker-map", "owner" -> 
        "guardian"], 
       Association[
       "name" -> "2019-novel-coronavirus", "owner" -> "yangmingleiSYSU"], 
       Association[
       "name" -> "A3-coronavirus-alert", "owner" -> "UW-CSE442-WI20"], 
       Association[
       "name" -> "coronavirus-tracking-app", "owner" -> "tunguyen2504"], 
       Association[
       "name" -> "Joke.Win32.Coronavirus", "owner" -> "thecatgamer137"], 
       Association["name" -> "AntiCoronavirus2", "owner" -> "hwei"], 
       Association[
       "name" -> "2019-Novel-Coronavirus-analysis", "owner" -> "muniah"], 
       Association[
       "name" -> "Coronavirus-data-visalization-project", "owner" -> 
        "juliuswuwu"], 
       Association[
       "name" -> "coronavirus-data-hq-api", "owner" -> "stephan227"], 
       Association["name" -> "coronavirus-map-backend", "owner" -> "ygmpkk"], 
       
       Association["name" -> "2020WuhanCoronavirus", "owner" -> "yuwei1985"], 
       
       Association["name" -> "CoronaVirusTracker", "owner" -> "kalzeo"], 
       Association[
       "name" -> "coronavirus-chrome-extension", "owner" -> "RaSt92"], 
       Association["name" -> "CoronaVirusServiceCenter", "owner" -> "Up-s"], 
       Association[
       "name" -> "2019-wuhan-coronavirus-data", "owner" -> "perell2014"], 
       Association["name" -> "CoronaVirusMaleware", "owner" -> "HwdTech010"], 
       
       Association[
       "name" -> "Coronavirus-Data-Visualization", "owner" -> "iam-abbas"], 
       Association[
       "name" -> "Coronavirus-2019-ncov-Predictions-ML", "owner" -> 
        "ciszakdamian"], 
       Association[
       "name" -> "wuhan_2019_coronavirus_model_navigate", "owner" -> 
        "Jinchili"], 
       Association[
       "name" -> "interactive-coronavirus-tracker-asia-map", "owner" -> 
        "guardian"], 
       Association[
       "name" -> "CoronaVirus-spread-prediction-model", "owner" -> "gadm21"], 
       
       Association[
       "name" -> "20200203-international-novel-coronavirus-live", "owner" -> 
        "initiumdev"], 
       Association["name" -> "samrahimi.github.io", "owner" -> "samrahimi"], 
       Association[
       "name" -> "Project2-WuHan-Coronavirus", "owner" -> "Vicky0528"], 
       Association["name" -> "CSAPP_labs", "owner" -> "DarlingHang"], 
       Association["name" -> "get-out-game", "owner" -> "duiyu"], 
       Association["name" -> "powerbi-ncov2019", "owner" -> "jenzushsu"], 
       Association["name" -> "daily-corona", "owner" -> "samrahimi"], 
       Association["name" -> "rumorsbreaker", "owner" -> "standwithwuhan"], 
       Association[
       "name" -> "nCov-transportation-subscriber", "owner" -> "Vopaaz"], 
       Association["name" -> "Korona", "owner" -> "lumaaaaaa"], 
       Association[
       "name" -> "New-coronavirus-development-trend-Feb-6", "owner" -> 
        "qingweihk"], 
       Association[
       "name" -> "Days-In-China-with-Coronavirus-Spreading", "owner" -> 
        "Nova-Xue"], 
       Association[
       "name" -> 
        "coronavirus-infectent-prediction-using-linear-regression-model", 
        "owner" -> "balandhanka"], 
       Association[
       "name" -> "Analise-Corona-Virus", "owner" -> "gustavocarmoh"], 
       Association[
       "name" -> "static-website", "owner" -> "viral-coronavirus-dev"], 
       Association[
       "name" -> "Actualizaciones-Coronavirus-2019-nCoV-Gobierno-de-Espana", 
        "owner" -> "BrunoCdot"], 
       Association[
       "name" -> "-Novel-Coronavirus-2019-nCoV-Outbreake-Timelapse", "owner" -> 
        "aasgary"], 
       Association["name" -> "alert-app", "owner" -> "viral-coronavirus-dev"], 
       Association[
       "name" -> 
        "SOURCE-OF-CORONAVIRUS-OUTBREAK-BOSC23-HUMAN-LABORATORY-SLAVES", 
        "owner" -> "CoryAndrewHofstad"], 
       Association[
       "name" -> "PROCEDIMIENTO-DE-ACTUACION-2019-nCoV-", "owner" -> 
        "BrunoCdot"], 
       Association[
       "name" -> "StockMarket_Virus_Relationship", "owner" -> "akalia25"], 
       Association[
       "name" -> "Eidolon_helvum_CoV_seasonality", "owner" -> "dmontecino"], 
       Association["name" -> "CoronaStats", "owner" -> "raphtlw"], 
       Association["name" -> "2019-nCoV", "owner" -> "Nexysweb"], 
       Association[
       "name" -> 
        "Images-of-CoronaVirus-cells-are-white-blood-cells-swarmed-by-\
Pycnogonida-Larvae", "owner" -> "CoryAndrewHofstad"], 
       Association[
       "name" -> 
        "Extinction-Threat-by-Physalia-Physalis-Pycnogonida-EEE-AIDS-HIV-SARS-\
SMALLPOX-CORONAVIRUS", "owner" -> "Gundam-MS"], 
       Association["name" -> "ncov.io", "owner" -> "ncov-io"], 
       Association["name" -> "WuhanWin", "owner" -> "Jonasonw"], 
       Association["name" -> "2019-nCoV", "owner" -> "mame0521"], 
       Association[
       "name" -> "East-African-bats-and-CoV-shedding", "owner" -> 
        "dmontecino"], 
       Association[
       "name" -> "2019-nCoV-Articles-Compilation", "owner" -> "febrifahmi"], 
       Association["name" -> "FightTheVirus", "owner" -> "kevinxyc1"]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "name"} -> 1, {All, "owner"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "name" -> TypeSystem`PackageScope`AtomShape[307.20000000000005`], 
            "owner" -> TypeSystem`PackageScope`AtomShape[
             134.40000000000003`]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"name", "owner"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 386], "Meta" -> 
     Association["ID" -> 212871656559365], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "name"} -> 1, {All, "owner"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "name" -> TypeSystem`PackageScope`AtomShape[307.20000000000005`], 
            "owner" -> TypeSystem`PackageScope`AtomShape[
             134.40000000000003`]]], 
          DirectedInfinity[1], 2, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"name", "owner"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 386], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     386, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "ScrollPosition" -> {1, 1}, "UpdateType" -> 1],
     TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["name", 
                    Style[
                    "name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1967048804][{All, "name"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1967048804][{All, "name"}, "ColumnHeader", True], "Mouse"], 
                " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["owner", 
                    Style[
                    "owner", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1967048804][{All, "owner"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 1967048804][{All, "owner"}, "ColumnHeader", True], "Mouse"], 
                " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2019-wuhan-coronavirus-data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["globalcitizen", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{1, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ncov", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["nextstrain", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{2, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["nCov2019", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GuangchuangYu", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{3, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["nCovMemory", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2019ncovmemory", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{4, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["JohnCoene", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{5, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Novel-Coronavirus-Updates", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["839Studio", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{6, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["choropleth", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ncovis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{7, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2019-ncov-frontend", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["sorxrob", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{8, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronatracker-analytics", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{9, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["docligot", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{9, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Coronavirus-Epidemic-2019-nCov", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{10, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["YiranJing", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{10, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus-analysis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{11, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["AaronWard", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{11, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{12, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["hysios", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{12, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2020-new-coronavirus-live-map", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{13, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["lbj96347", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{13, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2019-ncov-api", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{14, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["sorxrob", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{14, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["wuhan", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{15, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["chrism0dwk", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{15, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["coronavirus", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{16, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dreamerjackson", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{16, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ncov_incubation", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{17, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HopkinsIDD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{17, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["CoronaV_Challenge", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{18, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["widscommunityorg", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{18, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["artic-ncov2019", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{19, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["artic-network", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{19, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["wuhan-coronavirus-outbreak", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{20, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{307.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["vilaca", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               1967048804][{20, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 386, 1], {1, 386 - -20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 386, 1], {1, 386 - -20 + 1}], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    386, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    386, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804},
                     "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804},
                     "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804},
                     "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804},
                     "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804},
                     "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 386, 1], {1, 386 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 386, 1], {1, 386 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                1967048804, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], 
                    Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], 
                    Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1967048804]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967048804][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1967048804][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 1967048804; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{495., {345.91754150390625`, 353.08245849609375`}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.789749223375264*^9, 3.789749231476348*^9}, 
   3.7898207405776696`*^9, 3.790012516662615*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"2033a84f-321b-464f-af69-4e7656325381"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gettags", "[", "assoc_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"repo", ",", "owner", ",", "url", ",", "tags"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"repo", "=", 
      RowBox[{"assoc", "[", "\"\<name\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"owner", "=", 
      RowBox[{"assoc", "[", "\"\<owner\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Echo", "[", 
      RowBox[{"url", "=", 
       RowBox[{"URL", "[", 
        RowBox[{
        "\"\<https://api.github.com/repos/\>\"", "<>", "owner", "<>", 
         "\"\</\>\"", "<>", "repo", "<>", "\"\</topics\>\""}], "]"}]}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"tags", "=", 
      RowBox[{"URLRead", "[", 
       RowBox[{"HTTPRequest", "[", 
        RowBox[{"url", ",", 
         RowBox[{"<|", 
          RowBox[{"\"\<Headers\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "\"\<Accept\>\"", "\[Rule]", 
              "\"\<application/vnd.github.mercy-preview+json\>\""}], ",", 
             RowBox[{"\"\<Authorization\>\"", "\[Rule]", 
              RowBox[{"\"\<token \>\"", "<>", "token"}]}]}], "}"}]}], 
          "|>"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tags", "=", 
      RowBox[{"ImportByteArray", "[", 
       RowBox[{
        RowBox[{"tags", "[", "\"\<BodyByteArray\>\"", "]"}], ",", 
        "\"\<RawJSON\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<owner\>\"", "\[Rule]", "owner"}], ",", 
       RowBox[{"\"\<repo\>\"", "\[Rule]", "repo"}], ",", 
       RowBox[{"\"\<tags\>\"", "\[Rule]", 
        RowBox[{"tags", "[", "\"\<names\>\"", "]"}]}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7897455792409253`*^9, 3.789745581670954*^9}, {
  3.789745634300541*^9, 3.789745655975813*^9}, {3.789745749442859*^9, 
  3.789745755087923*^9}, {3.7897458756102743`*^9, 3.789745963865261*^9}, {
  3.789746016155851*^9, 3.789746057913308*^9}, {3.789746098485759*^9, 
  3.7897461562023993`*^9}, {3.789746264548639*^9, 3.7897462690666924`*^9}, {
  3.7897465392139564`*^9, 3.7897465583641624`*^9}, {3.78974660906273*^9, 
  3.7897466263809147`*^9}, {3.7897467247360544`*^9, 3.7897467603974495`*^9}, {
  3.789749255130604*^9, 3.7897492987731085`*^9}, {3.7897493931301184`*^9, 
  3.789749413952345*^9}, {3.7897495212584887`*^9, 3.789749543911763*^9}, {
  3.7900126655738964`*^9, 3.7900126660919204`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"24bc3ba3-3ce3-4672-816b-4271a0e6c831"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"gettags", ",", 
   RowBox[{"Take", "[", 
    RowBox[{"ds", ",", "3"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.789749445352681*^9, 3.7897494506647367`*^9}, {
  3.7900126222029963`*^9, 3.7900126223800063`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"2a159297-b250-47d4-be90-0f087c0c6f4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/globalcitizen/2019-wuhan-coronavirus-data/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126242400837`*^9},ExpressionUUID->"a863c223-c7fe-49bf-8e02-\
1c5f2a6b4e90"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nextstrain/ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001262472011*^9},ExpressionUUID->"ddb728c6-d431-4157-a929-aab0e0cf75fa"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/GuangchuangYu/nCov2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012624983135*^9},ExpressionUUID->"6ee8afa7-d2dd-469d-81b5-\
f8ba008b794d"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "owner" -> "globalcitizen", "repo" -> "2019-wuhan-coronavirus-data", 
        "tags" -> {
         "wuhan", "2019ncov", "coronavirus", "virology", "2019-ncov", 
          "pathogens", "viruses", "pandemic", "opendata", "epedemiology", 
          "epedemic"}], 
       Association["owner" -> "nextstrain", "repo" -> "ncov", "tags" -> {}], 
       Association[
       "owner" -> "GuangchuangYu", "repo" -> "nCov2019", "tags" -> {}]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "owner"} -> 1, {All, "repo"} -> 1, {All, "tags"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "owner" -> TypeSystem`PackageScope`AtomShape[124.80000000000001`], 
            "repo" -> TypeSystem`PackageScope`AtomShape[259.20000000000005`], 
            "tags" -> TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"owner", "repo", "tags"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 3], "Meta" -> 
     Association["ID" -> 34845262140273], "RowTarget" -> 20, "ColumnTarget" -> 
     20, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "owner"} -> 1, {All, "repo"} -> 1, {All, "tags"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "owner" -> TypeSystem`PackageScope`AtomShape[124.80000000000001`], 
            "repo" -> TypeSystem`PackageScope`AtomShape[259.20000000000005`], 
            "tags" -> TypeSystem`PackageScope`UnknownShape[False]]], 
          DirectedInfinity[1], 3, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"owner", "repo", "tags"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength]}], 3], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 
     3, "DataRowCount" -> 3, "DataColumnCount" -> 3, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "ScrollPosition" -> {1, 1}, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["owner", 
                    Style[
                    "owner", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 527308428][{
                    All, "owner"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 527308428][{All, "owner"}, "ColumnHeader", True], "Mouse"], 
                " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["repo", 
                    Style[
                    "repo", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 527308428][{
                    All, "repo"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 527308428][{All, "repo"}, "ColumnHeader", True], "Mouse"], 
                " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["tags", 
                    Style[
                    "tags", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 527308428][{
                    All, "tags"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                 527308428][{All, "tags"}, "ColumnHeader", True], "Mouse"], 
                " ", ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["globalcitizen", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               527308428][{1, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2019-wuhan-coronavirus-data", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               527308428][{1, 
                 Key["repo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Row[{"  { ", 
                    Subscript["\[Ellipsis]", 11], " }  "}], 
                  Style[
                   Row[{"  { ", 
                    Subscript["\[Ellipsis]", 11], " }  "}], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 527308428][{1, 
                   Key["tags"]}, 4]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               527308428][{1, 
                 Key["tags"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation["nextstrain", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               527308428][{2, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ncov", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               527308428][{2, 
                 Key["repo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation["GuangchuangYu", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               527308428][{3, 
                 Key["owner"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["nCov2019", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               527308428][{3, 
                 Key["repo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{259.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                527308428, {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                   Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], 
                    Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 527308428][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], 
                    Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 527308428][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 527308428][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 527308428][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 527308428][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]], FontFamily -> "Verdana",
             FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 527308428][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`Pathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 527308428]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
        MouseAnnotation[Null], {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[527308428][Null, 
           Blank[]] -> "", 
         TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[527308428][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 527308428; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
      FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
      Top, ImageSize -> {Automatic, 15}], FontSize -> 1]}, 
    DynamicBox[ToBoxes[
      Dataset`DatasetContent[
      1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$, "State" -> 
       TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
       Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], StandardForm],
     ImageSizeCache->{489., {69.91754150390625, 77.08245849609375}},
     TrackedSymbols:>{
      TypeSystem`NestedGrid`PackagePrivate`$state$$, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]]],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7897494511127377`*^9, 3.790012625182152*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"821709e9-7d13-4002-8373-6149214a194d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result2", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"gettags", ",", "ds"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.789746129877107*^9, 3.789746144636273*^9}, {
  3.789746275245758*^9, 3.7897462776657853`*^9}, {3.7897464398548174`*^9, 
  3.7897464400038204`*^9}, {3.78974648410369*^9, 3.789746484225689*^9}, {
  3.789746572735321*^9, 3.7897465733473344`*^9}, {3.7897493112082415`*^9, 
  3.789749316870306*^9}, {3.7897494287705035`*^9, 3.7897494841110954`*^9}, {
  3.7897495384607058`*^9, 3.789749552142856*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"f1ed22c2-7408-4c08-8624-42bd116bf749"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/globalcitizen/2019-wuhan-coronavirus-data/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001267339471*^9},ExpressionUUID->"b76ac7df-e951-4fd2-9d85-c0e4067aa3b9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nextstrain/ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001267355772*^9},ExpressionUUID->"76495b14-e009-41e1-8b78-0b8f4a3b384d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/GuangchuangYu/nCov2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001267385573*^9},ExpressionUUID->"5d71715c-4a1f-485d-bcaa-27a36883c698"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/2019ncovmemory/nCovMemory/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126740187473`*^9},ExpressionUUID->"9f8f04cc-8d25-4667-a02d-\
460a4474e0fe"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JohnCoene/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126743657646`*^9},ExpressionUUID->"8c1ff427-87ec-4332-b88c-\
c0bc89d259d5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/839Studio/Novel-Coronavirus-Updates/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126745437746`*^9},ExpressionUUID->"48163aa5-d78e-4647-aab5-\
3012e03e3128"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ncovis/choropleth/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126747037764`*^9},ExpressionUUID->"31aec0f2-d5a7-4cd0-b3b7-\
f4a047cd881e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sorxrob/2019-ncov-frontend/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001267496679*^9},ExpressionUUID->"320c36be-db49-4e04-b9b7-16659fc2ae6c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/docligot/coronatracker-analytics/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126751977973`*^9},ExpressionUUID->"665846fb-7217-49cd-97b3-\
10c6519acefb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/YiranJing/Coronavirus-Epidemic-2019-nCov/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126753458056`*^9},ExpressionUUID->"b2e6a82c-e576-49ae-8c9d-\
465186ae9eb5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/AaronWard/coronavirus-analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012675568813*^9},ExpressionUUID->"ff4cdba5-dd0f-47ae-99d3-\
969615060289"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/hysios/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012675838827*^9},ExpressionUUID->"c00eecdc-a845-4db5-b9cf-\
185f101a700f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lbj96347/2020-new-coronavirus-live-map/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012676010835*^9},ExpressionUUID->"900b5b47-2999-483a-9aaa-\
c373583d7699"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sorxrob/2019-ncov-api/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012676165842*^9},ExpressionUUID->"11f87d79-1760-4a5f-a77a-\
1510b605b5b8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/chrism0dwk/wuhan/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126763148503`*^9},ExpressionUUID->"094c1757-f0d8-41a6-b60d-\
40988f03e8b8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dreamerjackson/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012676487855*^9},ExpressionUUID->"38730299-6397-420c-a5df-\
d752bdf89694"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/HopkinsIDD/ncov_incubation/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126766450806`*^9},ExpressionUUID->"d9f14221-ea17-485b-91ed-\
05d03c9cee8c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/widscommunityorg/CoronaV_Challenge/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012676970145*^9},ExpressionUUID->"7638732e-445c-4441-9fec-\
dc6db6bb3bd9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/artic-network/artic-ncov2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012677133153*^9},ExpressionUUID->"165c1b23-68e5-4f0b-b609-\
869875e7f1e1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/vilaca/wuhan-coronavirus-outbreak/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012677315161*^9},ExpressionUUID->"44920e51-e5d8-4ed5-b59e-\
863f8f3fc02c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/antonlukin/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126774821663`*^9},ExpressionUUID->"4f16a0f7-0a85-4465-93af-\
c96c5427aadf"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/LiveCoronaDetector/livecod/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126776471753`*^9},ExpressionUUID->"3ad2bb77-52de-486d-b115-\
a5f4b018bbb7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kaichih/CoronavirusChart/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126778081822`*^9},ExpressionUUID->"deee4219-af82-4c57-a6e7-\
ba76440d23f1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/WebDevSimplified/Coronavirus-Chrome-\
Extension/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126780525007`*^9},ExpressionUUID->"625032a6-11e4-4150-b7c5-\
cf026b133e78"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/pdtyreus/coronavirus-ds/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012678386515*^9},ExpressionUUID->"5a5ac777-f091-4494-afac-\
6dcc782943cc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/alext234/coronavirus-stats/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126786195297`*^9},ExpressionUUID->"e37bf8a3-7a25-49dd-89d1-\
326b033ca075"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/MeoncStudio/Anti_2019-ncoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012678989541*^9},ExpressionUUID->"ec1447db-be7a-46e5-9f71-\
04da7b7662af"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/DnCov/transparent-info/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126791515474`*^9},ExpressionUUID->"1e3fea22-ce28-4ce7-a1d0-\
9651731c5512"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/iidx/corona-tracker/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001267967857*^9},ExpressionUUID->"c9a73763-a59f-46ea-92f4-1adf929b1bb9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/WeileiZeng/red-cross/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012679977582*^9},ExpressionUUID->"98cf487a-67e5-4fc2-8623-\
6e60e2a29c73"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nextstrain/cov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012680172592*^9},ExpressionUUID->"f18dc3a3-6278-42c8-82ca-\
b8e09b39d721"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Xetera/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126804406033`*^9},ExpressionUUID->"cb95698d-7b1f-4b7a-8662-\
88000305e148"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/arnoudbuzing/wolfram-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012680710614*^9},ExpressionUUID->"56041909-1409-4d2f-9e1b-\
85b7e7aaf6fe"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/etchorigin/ncov2019/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126809276237`*^9},ExpressionUUID->"1bdbec59-dc4d-4914-be4f-\
468036afcae5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/coddec/2020-new-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012681127631*^9},ExpressionUUID->"2716a059-0da9-40c2-a2c3-\
9af9aacceda6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/instafluff/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012681325641*^9},ExpressionUUID->"28be23a7-820a-4a7e-86f6-\
bc7874e18259"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ChengF-Lab/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012681494652*^9},ExpressionUUID->"5789d254-1bd4-4103-9fe9-\
7bab6ba4e5c3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/avischiffmann/Coronavirus-Dashboard/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126816868534`*^9},ExpressionUUID->"2a323e18-c3b1-4eae-a1fb-\
a4d602108d2a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/WuhanZhuRong/DonationChannel/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012681916868*^9},ExpressionUUID->"568514c3-e2c4-4772-8475-\
a480f2022182"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Laeyoung/Wuhan-Coronavirus-API/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001268210187*^9},ExpressionUUID->"f930d865-cc6c-46b2-8905-db832eb95b56"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aitahtman/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126823278847`*^9},ExpressionUUID->"45024d9d-a8ef-4e43-89ae-\
5a5f9139b762"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Kyald1412/CoronaVirus-2019-nCoV-Live-\
Tracking/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012682620894*^9},ExpressionUUID->"e2d4c259-be37-4b62-a46a-\
ea8be975d703"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/sagunsh/corona-live/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012682787629*^9},ExpressionUUID->"353b404b-eb69-4a7c-b480-\
afff1a69d8cd"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jarekpelczynski/ncov-data-fetcher/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012682985634*^9},ExpressionUUID->"bf9c87da-9d6d-4aaf-9eed-\
ceee57549975"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/the-robot/corona-bot/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126831526484`*^9},ExpressionUUID->"bd28e867-3e77-4947-9b57-\
4d0fff9ff1fc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jianxu305/nCov2019_analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126833606744`*^9},ExpressionUUID->"e67457ca-156c-4934-a2cf-\
0de32df9208c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JordanMicahBennett/SMART-CORONA_VIRUS_\
DETECTOR/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126836096864`*^9},ExpressionUUID->"f416968d-9009-433f-9a6e-\
6d470f78bf7a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sijiali57/coronavirus_data/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126837556887`*^9},ExpressionUUID->"75cc0dea-f03b-4b0c-9ed5-\
fc2eb6e1888f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kevinlu1248/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126840017138`*^9},ExpressionUUID->"dd45607a-487f-4880-b2ab-\
99aea79cd2e6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/yitao94/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126843530025`*^9},ExpressionUUID->"7e017c4d-bbb7-43d4-9ee6-\
16790fc3212e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/xcv58/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001268460303*^9},ExpressionUUID->"cfa187b8-08e2-47c7-92fa-4894531a39ec"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/labsletemps/coronavirus-world-map/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126847820415`*^9},ExpressionUUID->"22f3de8c-0d1c-449d-aa5c-\
81e0812e014d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JunjieZhouwust/Coronavirus-Estimation/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126849530473`*^9},ExpressionUUID->"3f849e8f-8dd4-4a54-8c12-\
d526f8798668"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/bjwa2020/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126851110573`*^9},ExpressionUUID->"056f6106-b72d-483d-b352-\
307004304f64"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/fangohr/coronavirus-2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126854730706`*^9},ExpressionUUID->"1822aa8f-ed44-435a-9e02-\
5e00c000eb10"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Sviper-07/CoronavirusOdesseyRepo/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012685728081*^9},ExpressionUUID->"112bcabe-cbe5-4fe5-b18f-\
014e90765bcc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/muditham90/viral-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126859860954`*^9},ExpressionUUID->"3a8d1cec-06c1-4fb8-8e46-\
a322dc0d85ba"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ugovaretto/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012686338111*^9},ExpressionUUID->"2a91e335-6d8b-4268-8c83-\
1d6df9257d8f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/iPomme/GameJame2020/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012686520115*^9},ExpressionUUID->"30cec840-c8f9-4eb7-97b5-\
74974df3ffbb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kaiyz/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126866770043`*^9},ExpressionUUID->"ff3566d7-ce76-4a62-96cd-\
ccbde130c692"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jairoD/coronavirus-api/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126869215727`*^9},ExpressionUUID->"205d3881-f03a-4dda-9363-\
9ee13ea8f401"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Cyberist-Edgar/2020-novel-coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126870905123`*^9},ExpressionUUID->"efc835a5-f811-487f-8792-\
c7c7aa3092d6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/mshyun/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126872412653`*^9},ExpressionUUID->"a53dee3c-5a9b-4a68-9dae-\
69701228e8df"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/mcodz/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126874022655`*^9},ExpressionUUID->"f4bc12c8-a24c-4572-910d-\
b829bd051a91"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/netqyq/coronavirus-stat/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012687599278*^9},ExpressionUUID->"88545954-3031-401b-be0e-\
0a2f507b0eae"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/mudiant/viral-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012687842286*^9},ExpressionUUID->"825d9b31-ec35-4729-bc7a-\
aad4042c8528"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Coronavirus2019/Coronavirus-2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126880232997`*^9},ExpressionUUID->"2c852dfc-4872-4514-9ab5-\
2fbbfdfa311c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/jairoD/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126882043056`*^9},ExpressionUUID->"3b013290-5887-4a00-919d-\
4c54954e743e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lbj96347/2020-new-coronavirus-info-crawler/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012688537319*^9},ExpressionUUID->"1a604ec8-ba49-4cf9-b921-\
2d9580d4c9aa"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ivan-iliev/mc-2d/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126887163286`*^9},ExpressionUUID->"d7a1b6ec-9bdc-4c90-9123-\
b44c384a6029"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/burgess/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001268888833*^9},ExpressionUUID->"466e7f7a-3259-4e7a-90d4-e171dab49420"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/lina/lina.github.io/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012689075342*^9},ExpressionUUID->"ad4879b2-2b81-470a-8250-\
bf9920670c4a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/stephan227/coronavirus-data-hq/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126892555447`*^9},ExpressionUUID->"022d6b55-4ce8-41ab-80cd-\
df16bba65fd8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/chunyeow/dash-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126895235577`*^9},ExpressionUUID->"2a25ca26-e621-4ded-af77-\
65246cbfb698"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/joshuaferr1s/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126896947117`*^9},ExpressionUUID->"f0ce55d6-ab39-49de-8ab9-\
33b391c1707c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/iuming/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126899317226`*^9},ExpressionUUID->"3f3c3e49-cfce-4219-9e86-\
579e52c1a02f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/POGE0124/Coronavirus_quantity_prediction/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012690121732*^9},ExpressionUUID->"54987a11-3ec6-41ba-a3ff-\
86907dc2a6e8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/XuCQ/WuhanCoronavirusDataCrawel/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126902947598`*^9},ExpressionUUID->"d807364c-3d7c-4492-b19a-\
4d7362506249"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/filswa/coronavirusapi/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126904747815`*^9},ExpressionUUID->"8098f7f5-e295-47bc-9d5b-\
c78f56599c26"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/openthings/2020ncov/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012690728876*^9},ExpressionUUID->"95a722aa-fbd8-43d4-8098-\
5d90514271ba"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/dranoer/corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126908928823`*^9},ExpressionUUID->"aad1482e-7eba-4256-8b44-\
53c595004ffa"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SpencerAung/coronavirus-info/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126911908956`*^9},ExpressionUUID->"8955c81a-7459-45ca-909a-\
09729e72c0dc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ddong63/coronavirus_analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012691393908*^9},ExpressionUUID->"c95ae0e5-a863-4b13-a058-\
86e47db70ce6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kealyn/Wuhan2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126918059196`*^9},ExpressionUUID->"2957b155-2643-4a2a-a148-\
7adef9df8719"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/MCN-TV-NEWS/EDITOR/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126920059304`*^9},ExpressionUUID->"7331f263-98f9-4b69-ab82-\
b6589b57a90d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ExtReMLapin/gmod_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126923129406`*^9},ExpressionUUID->"24d1ebc8-83ef-45c1-88a3-\
65598e121f5e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ricosmall/2019-ncov/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126924689503`*^9},ExpressionUUID->"db8fbb62-9254-4892-9aee-\
790dd3f33603"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/htso/Coronavirus_Epidemic/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012692631957*^9},ExpressionUUID->"2389c7d5-1b36-45a1-9f67-\
479fa1e6c276"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/biomedontology/cido/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012692818965*^9},ExpressionUUID->"033f08bc-e37c-4f9c-84b3-\
b324dc24538a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/feraliscatus/VxAfee/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126929909716`*^9},ExpressionUUID->"02cc4c9a-080e-47d4-b2bc-\
95c7b9bff311"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/piscium2010/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126931879826`*^9},ExpressionUUID->"482d5f11-824a-4680-be0e-\
3ac8ec8646af"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aknow2/situation-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126933469906`*^9},ExpressionUUID->"1ac396d6-7290-46ab-82e6-\
731c3e5fe5d3"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/epiforecasts/WuhanSeedingVsTransmission/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126935119944`*^9},ExpressionUUID->"ee09e897-4643-4771-9852-\
ba4db3cd0c68"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dakula009/China_CoronaVirus_Data_Miner/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126937000055`*^9},ExpressionUUID->"a9190ce5-63ed-4954-899c-\
3c5206ed7c54"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/EveDong/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001269385701*^9},ExpressionUUID->"2a01a4f7-44aa-41ff-9c90-641da9177932"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ddlan/corona-oh-na-na/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126940250187`*^9},ExpressionUUID->"1de2fa16-52a0-41de-8457-\
0361698a8b4f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kianweelee/Data-Visualisation--Coronavirus-\
confirmed-cases/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126943574505`*^9},ExpressionUUID->"3fb483c2-f8ea-47d2-b27d-\
7fc3c52e72f0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/eragmus/2019ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012694715913*^9},ExpressionUUID->"7a05e42f-d436-46a0-87c5-\
472acbc2256d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/henryshw/VirusTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012694888883*^9},ExpressionUUID->"88543ed9-b185-4012-99b0-\
d379e8ef1500"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JenQian/coronavirus-data-ETL/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012695136804*^9},ExpressionUUID->"6d840ac6-17c3-44d0-a7d8-\
16eca49e2a80"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/yx-z/wuhan/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012695321821*^9},ExpressionUUID->"13cd9e8d-1148-401c-8377-\
b1cbd196e06f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/AndyLPK247/coronavirus-scraper/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012695594932*^9},ExpressionUUID->"fd8853a0-937f-4ded-913a-\
c916e380b307"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SuperDiscovery/NCP-Model/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126958338647`*^9},ExpressionUUID->"590ae98a-44f9-4140-8fc1-\
3432d940079a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/itsyaoyu/wuhan_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012696014278*^9},ExpressionUUID->"b847e8fa-1212-4339-92b4-\
2e84d895024c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sanghy/epidemicsituation2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126961712804`*^9},ExpressionUUID->"4127017d-97d3-4ff2-8954-\
e6742b8278b8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/QMHTMY/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012696329291*^9},ExpressionUUID->"0f54c264-0af5-40bb-b378-\
0a81ccb9fc65"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/audreyqyfu/wuhancov/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126965549154`*^9},ExpressionUUID->"c371b00f-e540-4027-b4fc-\
d5f870ff06da"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/RuyiLi/coronatracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126967909265`*^9},ExpressionUUID->"2006b12d-0aec-448d-99ed-\
b15a75fc8ae5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/KezhiLi/Wuhan_Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126970529375`*^9},ExpressionUUID->"dbe70308-bcb3-4791-9afe-\
8289dcc8886c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/martinedoesgis/novel-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012697214943*^9},ExpressionUUID->"aa42736e-eb25-44ea-8e52-\
b6f5170d274c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ergodiclife/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012697376953*^9},ExpressionUUID->"7fe8272b-6dc8-4d2a-91a6-\
c57060b0f1df"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ShuuTsubaki/Wuhan-Coronavirus-Even-\
Timeline/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012697534959*^9},ExpressionUUID->"d775977e-fa81-42ea-96c0-\
9e7aa1108fb4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ljnicol/coronavirus_viz/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126976899633`*^9},ExpressionUUID->"7632cb84-3d4a-4edb-b46a-\
ceeb049a8fce"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/MaBeuLux88/coronavirus-mongodb/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012697947975*^9},ExpressionUUID->"ea4bd98e-df7b-4538-9a51-\
745b6c554c51"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aliciawyy/coronavirus-outbreak-log/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012698137985*^9},ExpressionUUID->"e695d891-84c9-4815-bc0a-\
5033672d02e9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/EricLiam94/VirusVisual/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012698288994*^9},ExpressionUUID->"aebfd4e8-805d-4cfa-a9fa-\
b0e901107ef7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/zipengliu/ncov-vis-wuhan2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126984419966`*^9},ExpressionUUID->"b0c80c7d-eba8-4ed5-8f3a-\
6edf8fb6f621"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/perlatex/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126985920067`*^9},ExpressionUUID->"bc4ece69-73fb-4300-9bce-\
cbf9eedc5f36"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/liu-zoe/wuhancv/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012698746033*^9},ExpressionUUID->"b4a51802-0133-4de7-99a4-\
6dffaac7be06"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sdwfrost/mers-analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126988920355`*^9},ExpressionUUID->"6e8b5d07-5bc2-42ce-b008-\
be10ddd960f1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/839-Studio/Noval-Coronavirus-763-Cases/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126990590477`*^9},ExpressionUUID->"1c4f8735-8921-4abf-b9d0-\
5329b9ad7485"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lukas-jue/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012699232111*^9},ExpressionUUID->"a974aa0a-d07c-4306-83e1-\
03296ab49e81"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/donpaul999/coronavirusMap/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126993780727`*^9},ExpressionUUID->"bf2a5c42-a521-4b86-a29d-\
f4c665a73ffa"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sgfm/CoronavirusVisualization/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126995310774`*^9},ExpressionUUID->"d93c51e0-de90-4ac0-9432-\
f2518a084aff"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SuriousCompany/CoronavirusObserver/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126996840878`*^9},ExpressionUUID->"54acf16b-0a70-4a6e-ab28-\
de6076db715c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/reetaa/coronavirus2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900126998350925`*^9},ExpressionUUID->"6d371fdc-b0e2-4e1f-9b5b-\
3423e7294776"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yuhanbae06/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127000001*^9},ExpressionUUID->"7f2b08a1-95b5-4105-aea3-4c100bf625ec"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/blowsys/Coronavirus/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001270016811*^9},ExpressionUUID->"fe4bdf1c-c198-4048-b810-4c10ff7fbc48"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kaixin1976/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012700346113*^9},ExpressionUUID->"3081edaf-2580-49f1-83d3-\
0c928e8a5cac"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ykl124/Shanghai2020/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127004961176`*^9},ExpressionUUID->"99a70ff5-f491-41d5-9d53-\
23f948d16308"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/xstarseed/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012700687129*^9},ExpressionUUID->"2833fc51-6784-4837-b8e0-\
7fc9a3587a81"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/elvinaqa/The-Rise-of-CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127008261385`*^9},ExpressionUUID->"93ad72d7-50e0-4f5a-a428-\
86b5a6241417"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/hriewe/CoronavirusTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127009801593`*^9},ExpressionUUID->"3576fb7b-b1c3-4bf2-b2d0-\
5d635fbbc85e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JackJoeng/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127011421623`*^9},ExpressionUUID->"4f06549e-c0b3-459f-b790-\
b6f55e46719b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/choderalab/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127012991705`*^9},ExpressionUUID->"80405452-d502-4c43-a227-\
4de8f07cfb1e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/divyeshj02/CoronavirusDetection/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012701461179*^9},ExpressionUUID->"d7f2fba9-aa64-4565-93cd-\
749238b2d305"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/bahe007/CoronaTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012701632201*^9},ExpressionUUID->"f34262f2-6183-4293-8400-\
5f194a2e724f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/FrankChen021/2019-ncov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127017822075`*^9},ExpressionUUID->"aaf93c6a-9607-44c2-b533-\
dc182477b50b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/qingzma/coronavirusMonitor/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012701917217*^9},ExpressionUUID->"04c349e1-705e-42cf-bb77-\
ae4eddc664ec"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jubayer-hossain/CoronavirusTracking/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012702080223*^9},ExpressionUUID->"e3eb847f-ce95-4ff2-af82-\
875c30170bf1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/cooerson/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012702240227*^9},ExpressionUUID->"ebe3311f-e955-4022-b5be-\
0b68e6d47fc7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/apex-stack/true-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012702397233*^9},ExpressionUUID->"8c7f8e56-1ed7-46fe-abff-\
1096127252f0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SuperSt3ve/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127025662565`*^9},ExpressionUUID->"a422c1b4-5913-46a9-b84c-\
6eacb5f2577b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/TheGodOfHuaji/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127027322807`*^9},ExpressionUUID->"fdc4c39b-4a42-4c22-bc50-\
81a792d9f5d9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Dork3yyyy/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127029002967`*^9},ExpressionUUID->"4cd82e46-6c15-444e-86ce-\
b8323295c261"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/joaogrosso/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127030483074`*^9},ExpressionUUID->"f756346c-8acb-474f-92e9-\
59844ffc9358"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/mot200286mot/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012703228314*^9},ExpressionUUID->"04b7149e-afb8-4d2c-953c-\
ab1eaa8a7aae"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/flyffast/CoronavirusHackUCI/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012703440322*^9},ExpressionUUID->"12f8ab47-9e96-46bd-aa2d-\
d42133b731d9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/bovinemagnet/coronavirus-neo4j/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127035983295`*^9},ExpressionUUID->"58d2a557-6449-40fc-8294-\
193460ec79c5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/casperbrike/corona_bot/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012703754738*^9},ExpressionUUID->"b9fa1f47-286e-4b0a-8e87-\
1ad33a1df831"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kalzeo/nCoV-API/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127039007435`*^9},ExpressionUUID->"5d8bb3f3-6ad6-47bf-bd34-\
c418d3e74e8c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/bwanglzu/404-not-found/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012704054748*^9},ExpressionUUID->"6a6240e5-6fc2-4eee-ac94-\
7238a885feb1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/lprone/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012704207778*^9},ExpressionUUID->"616aafb9-677f-4f40-ad8a-\
c133d46c7f45"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/finateautomata/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127044167843`*^9},ExpressionUUID->"3d6e2125-eb57-4784-bd4d-\
268c3af0e20e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ozpv/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127045807915`*^9},ExpressionUUID->"1b42b332-3d9b-4220-b171-\
abf9f8a6984a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/itoic/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127047747993`*^9},ExpressionUUID->"237a4c65-f525-45b1-81e4-\
57eefa1d7935"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/toyourheart163/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127049808087`*^9},ExpressionUUID->"b45f208e-82fb-46f3-9c13-\
5bd3a4b7b286"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/sta199-sp20-002/appex-04-coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012705256819*^9},ExpressionUUID->"f0c5e3c5-f177-418c-aefb-\
7a862d57257e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dizzySummer/coronavirusRealTimeData/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012705439828*^9},ExpressionUUID->"04735104-b234-4414-a156-\
099d6a4ff64e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/TheCode-Jedi/CoronaVirus-MD/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012705615834*^9},ExpressionUUID->"21474e4f-00db-44e8-b012-\
6f44601d265e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/DnCov/DnCov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001270577384*^9},ExpressionUUID->"54f50a0a-ff56-4cf5-ba27-942f386de39c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/notfree/Coronavirus/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012705959851*^9},ExpressionUUID->"0e134c5e-e2f2-45e6-b930-\
997d4a751750"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Schukerz/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127061278567`*^9},ExpressionUUID->"ef490f5e-5388-4422-9bba-\
48fe15acfb48"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nurulc/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012706285864*^9},ExpressionUUID->"fa96ab46-a462-4890-b971-\
c1ca5d1886ab"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/dirkarnez/mask/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127064668713`*^9},ExpressionUUID->"bf76eec4-9ab8-414f-b043-\
c16513c3acf5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PengKuang/wuhan2020-oversea/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127066498775`*^9},ExpressionUUID->"e2a61388-d6e5-46ae-8ae9-\
8d423e48c659"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PranavPable/2019-n-CoV-Virus-Dashboard/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127068208885`*^9},ExpressionUUID->"54b2f538-1f97-4691-9cde-\
242446f986ae"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/liuyangly25/infection_prediction/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012707056896*^9},ExpressionUUID->"7c305c79-4dc3-4be4-8fdc-\
f50d60be06bb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ncoronavirus/Toronto2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012707243905*^9},ExpressionUUID->"3be8901c-8c93-4570-b58d-\
69abcbc4ca17"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/donghoony1/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012707402912*^9},ExpressionUUID->"d1e2bc05-b7ec-4044-92bd-\
d12aac69fb28"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Nrg800/NCov2019_Data/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127078029304`*^9},ExpressionUUID->"de029e4a-3ba4-4d46-9469-\
196ef83a4da7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/EthanGeekFan/nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127079779387`*^9},ExpressionUUID->"dc2f94e6-2b66-4742-88b7-\
8c4b0c679ff9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/WooilJeong/novel_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127082349463`*^9},ExpressionUUID->"38c544a3-8886-4b43-8f66-\
bc34ec3f01e7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JakeJing/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001270849596*^9},ExpressionUUID->"9cee30be-fa44-45ac-b9e2-810b1ef553f9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CoDeRgAnEsh/nCoV-2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127088749766`*^9},ExpressionUUID->"9039cf42-a37e-45ee-876d-\
f93e6c62785c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/changbing2019/lstm4ncor/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012709248992*^9},ExpressionUUID->"944e16fc-43b7-4beb-bddd-\
56a6701dfb22"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/chunyeow/coronavirus-crawling/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127096180058`*^9},ExpressionUUID->"e988e31d-da62-44cc-8971-\
a21c875d96b8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/sungml92/2019-nCov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127099070206`*^9},ExpressionUUID->"e0a8372c-5988-44bb-85dd-\
cc3fde1cc860"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/kidanh/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127100780334`*^9},ExpressionUUID->"abca38df-7a73-4953-b534-\
6f399b8bf8a5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/zk213/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127103000345`*^9},ExpressionUUID->"0bfb9e95-5e39-4d0b-92dd-\
2d1c751d7058"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/KimOlsson/coronavirus-project/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012710455044*^9},ExpressionUUID->"365a98a4-05f0-42a0-aff8-\
6f2e35d12e5f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ThinkGeo/Coronavirus-Wuhan-nCoV-2019/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127106730576`*^9},ExpressionUUID->"e113bb66-cf1e-46ee-ac12-\
664623f621e0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nyem69/coronavirus_dashboard/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012710976066*^9},ExpressionUUID->"25ff1737-aada-4a5f-baf7-\
9496c138b615"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/nickofc/coronavirus/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012711246076*^9},ExpressionUUID->"b9ae0a6c-ecdb-4237-880a-\
34cb9fb4a4a9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/teddylun/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012711431086*^9},ExpressionUUID->"d5156def-c1ba-4f9b-8469-\
a7143e4c8897"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/alamjane/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012711636095*^9},ExpressionUUID->"d432adc2-db17-4cff-9b91-\
d5c7a82da098"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Zhnan811/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127119231043`*^9},ExpressionUUID->"56d9b58e-8351-4670-bce3-\
ab57cdd3f051"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/leonluleonlu/2019-nCoV_Donation/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127120921125`*^9},ExpressionUUID->"0d9225ee-1775-4f37-bdfa-\
22dcaf7ab48c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/eebrown/data2019nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127123151226`*^9},ExpressionUUID->"ff1f468f-9023-410f-8f27-\
1181ef812881"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CSSEGISandData/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012712482129*^9},ExpressionUUID->"60bf59c2-5f65-4345-94f6-\
ef23cffba793"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kalzeo/CoronavirusWebsiteTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127126461363`*^9},ExpressionUUID->"7e451dd4-df6b-4f5d-b2b7-\
67582dd8e41c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/chenhua1008/CoronavirusPersonalReport/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127128901477`*^9},ExpressionUUID->"1685853b-14e1-4d8c-b3bb-\
eddd760b350a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/yarfer/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012713080157*^9},ExpressionUUID->"99286357-573b-49de-9b9a-\
82d0ff8ecb0e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/GHumorBS/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127132421613`*^9},ExpressionUUID->"9b2cdf2b-b7da-4dcb-a744-\
59ed2982e4f0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Yuriyama/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012713405174*^9},ExpressionUUID->"dd745183-49c3-42aa-92da-\
c0781a03a2ee"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/rnjsalswl93/Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012713556175*^9},ExpressionUUID->"c5e86f73-62f0-4803-8a13-\
a0ec4db64527"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/johnmelodyme/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012713715184*^9},ExpressionUUID->"b2c270ac-229c-4aaa-bceb-\
fe99cef7ebba"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/themarcusaurelius/coronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127138781915`*^9},ExpressionUUID->"eb2faff9-61d6-48b7-bb0a-\
1713e8c12097"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/DuongThuyet/coronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012714056196*^9},ExpressionUUID->"b489c2f6-c5e9-4e97-96f5-\
b5801ae9d3a2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/MarGonz7/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012714299207*^9},ExpressionUUID->"803b0036-7738-4a93-a717-\
df085be98cd9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/juwikuang/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012714478217*^9},ExpressionUUID->"9cd838d8-95c8-4b7c-bef9-\
33eedfa27158"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/igorisolomon/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012714665223*^9},ExpressionUUID->"ef6be03d-0ff0-40d5-8ed9-\
1b420eddd28d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/cfshi/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012714907233*^9},ExpressionUUID->"77b18033-e42e-4bb8-9110-\
dc4502e3760d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/colortail/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127150902433`*^9},ExpressionUUID->"47f21053-e0b4-4b26-a015-\
05d8d52bbea5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Dajnowicz/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012715286249*^9},ExpressionUUID->"aecef896-55f6-4e20-9f84-\
4c4ff40d72f0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/HardWorkerIlya/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127155172596`*^9},ExpressionUUID->"eff945c4-3083-493b-82cd-\
699a5bdc2c3c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/NarekSag/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127158222785`*^9},ExpressionUUID->"50e4e9eb-c965-4148-836e-\
e6d67a01029d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/741wcai/coronavirus/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127160692835`*^9},ExpressionUUID->"c3b88a04-566e-4495-be62-\
3a8ecb0b0fa0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/diehard04/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127162882967`*^9},ExpressionUUID->"425a4f4c-2524-4380-80fd-\
769c6674fca0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/henry123i/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012716533303*^9},ExpressionUUID->"92da8ac5-c994-4a05-9bdf-\
36ac398d9d57"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/escudero/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127167513123`*^9},ExpressionUUID->"321d371f-e312-429c-b585-\
e1305aaa9271"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Ruchit007/CoronaVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012716950323*^9},ExpressionUUID->"1edc1e86-431d-425b-bc65-\
9969b7b9d4af"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/guptaekarigar/coronavirustracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012717337339*^9},ExpressionUUID->"0dc8879b-6b08-4dd4-832b-\
b5c7db6cdb29"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Koohoko/Coronavirus_Bayseian_Modelling/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012717533346*^9},ExpressionUUID->"125f9c8a-83ba-4fc1-853a-\
a5fc13a6466a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/davy868/propagation-model-for-2019-nCov/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012717818359*^9},ExpressionUUID->"ff0bcc44-a65a-445b-adc8-\
30796fe18c2c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/damonYuan/ncov-api-k8s/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127179943676`*^9},ExpressionUUID->"4fe04535-497a-4bed-ac30-\
e7e44d90e325"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/hernanmd/nCoV-2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127182713776`*^9},ExpressionUUID->"43fdd58d-3847-4604-b7fc-\
ec9923754c61"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aejsong/novel-coronavirus-exploratory-\
analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127184743867`*^9},ExpressionUUID->"21fb7450-ae7b-4fbc-ad25-\
2c1865b5adca"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/daniel2231/coronavirusmap/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127186893997`*^9},ExpressionUUID->"708c01ca-bbad-4736-a511-\
6046211187ed"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Gazerbeamco/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127189154058`*^9},ExpressionUUID->"9ea8c859-baf4-4e47-a46f-\
f5d4cbd58bf6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/karolkolodziej/coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127191224136`*^9},ExpressionUUID->"ede2a1a4-7424-4a8c-bfda-\
e1dbfe296f32"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/143034/-coronavirus-/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012719282422*^9},ExpressionUUID->"768dd725-a394-4507-adc7-\
c0fbccb6d259"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PratirupG/coronavirusanalysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127194334297`*^9},ExpressionUUID->"39c4160a-9099-4a56-8989-\
766e4445f0ec"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nerocui/coronavirustracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127195894356`*^9},ExpressionUUID->"43f36cd0-90ff-4e69-97c5-\
b759066dbec4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/larsgimse/coronaviruslamp/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127197464433`*^9},ExpressionUUID->"cdf764f7-303c-421d-8021-\
e8f85952bf22"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jwktls/Coronavirus_ios/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127199054484`*^9},ExpressionUUID->"2f7b46ed-8e0a-46f4-b278-\
81a8e3b63fb4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ctedijanto/coronavirus-seasonality/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012720102459*^9},ExpressionUUID->"9b466ae0-51d5-4a49-a23e-\
ce728803d400"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/mrmattwright-inc/coronavirus-virus/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012720313466*^9},ExpressionUUID->"76210427-a12a-4e5d-a6b2-\
db70db2d29a9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/optoisolated/coronavirus-stats/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012720493473*^9},ExpressionUUID->"25175777-39bf-4b3f-a40c-\
1bd62802180f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/quangvo09/coronavirus_crawler/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012720820489*^9},ExpressionUUID->"73c90123-d96a-4087-8ae0-\
3031142c4d12"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/geunm/Coronavirus-macro/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012721010498*^9},ExpressionUUID->"9d6c1350-5c26-435a-9e88-\
a303d08edc17"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/joshualeung/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012721160505*^9},ExpressionUUID->"7ec711b2-b2ba-4f4e-adf3-\
00c8dd3e193d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/maksim72/coronavirus-website/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012721356513*^9},ExpressionUUID->"d92252f5-71d7-4e78-8191-\
7a19024b6df8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/A-Yifeng/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127215815234`*^9},ExpressionUUID->"1d12afc2-0010-4546-abc9-\
a9972f3ca1e2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Olivine-Ryo/coronavirus_map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012721744528*^9},ExpressionUUID->"56f43e9d-1688-485c-9b7e-\
ea8e2ebbecc9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/imsoncod/Coronavirus-Map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127219205413`*^9},ExpressionUUID->"eab4880b-a3fe-456c-8d4a-\
6a958d817e7f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/epignatelli/coronavirus-infographics/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012722110546*^9},ExpressionUUID->"da19507d-2fd2-4b96-8287-\
5bfa21f59982"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JILI1028/Wuhan-Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127222805567`*^9},ExpressionUUID->"53c5430b-ed4e-40f2-a184-\
225f806b5115"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/pavel-ilin/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012722435563*^9},ExpressionUUID->"88cdf0fb-a340-4e9a-b322-\
9235e5b4636a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/android-apps-apk/coronavirus-protect/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012722628565*^9},ExpressionUUID->"ccf07068-c31a-4508-8157-\
f2ef471a2714"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/abuuzayr/coronavirus-apps/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127228585777`*^9},ExpressionUUID->"96a85672-7f3c-4718-a33b-\
77ada60c8cde"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/fasalmbt/corona-virus-data-tracker/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012723090587*^9},ExpressionUUID->"629e408b-404f-44d7-ac2f-\
693d8d95d40d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/developers-arm/Coronavirus-things/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127232585945`*^9},ExpressionUUID->"c22b9d2a-6e0a-4d7a-ac87-\
e1475c545b96"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/HesterLim/coronavirus-analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127234456015`*^9},ExpressionUUID->"b1b38a6b-7ed2-421a-891f-\
5978bedeb3e6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/smorfopoulou/coronavirus_genbank/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012723598607*^9},ExpressionUUID->"69cac26e-038c-4c5d-acc2-\
d04ad92c9252"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/andrewadiletta/coronavirus_gizmo/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012723767616*^9},ExpressionUUID->"80231e09-673a-4259-ac65-\
528cd0443d99"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/JonathanJing/China-Coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127239456244`*^9},ExpressionUUID->"bcbca585-a66b-4ea2-8211-\
614d02e2b3f4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SamuelePolimi/Coronavirus-Report/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012724107629*^9},ExpressionUUID->"dfb647e4-360d-4d2c-9a89-\
4592c8074f47"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PatornJantara/coronavirus-detection/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012724260637*^9},ExpressionUUID->"8af45c31-1ada-4866-b9c0-\
a4bcf0debef0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/samjakobcavazos/Coronavirus-Tracker/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012724525649*^9},ExpressionUUID->"16165375-35f7-49b7-8f2b-\
6c07e9b9162d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/victormaggie/coronavirus-research/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012724864662*^9},ExpressionUUID->"d4049097-8e9e-4cb4-8718-\
f045db4174c5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kobkrit/data-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012725099674*^9},ExpressionUUID->"b2e537b9-5a68-47f3-80dd-\
0321f3dd4042"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lingye0926/china_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012725283683*^9},ExpressionUUID->"4362f953-48da-451c-bd4f-\
de4044bf9597"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/shadowkiller162/WuhanCoronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127254416857`*^9},ExpressionUUID->"80dc260d-5566-4df9-9e39-\
9b94687f7ccf"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/L0per/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127257997046`*^9},ExpressionUUID->"89da75c5-e568-449c-8a77-\
574576e9dd2b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/catofsof/coronavirus-api/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127259517117`*^9},ExpressionUUID->"e4ba719f-696a-45f7-a2b7-\
f78709f130e6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Sun2yKid/Anti-2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012726125719*^9},ExpressionUUID->"00491e5c-0d5e-44e0-8152-\
1e6ae358d05f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/neotan/wuhan-coronavirus-crawler-nodejs/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012726283725*^9},ExpressionUUID->"9d2f0826-bbef-4bb4-8b56-\
f1610ed61825"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/gson2019/WuhanPneumonia/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012726505732*^9},ExpressionUUID->"e2c77e54-09f1-4043-b76f-\
02cf1346f273"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yixinshi/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127266547413`*^9},ExpressionUUID->"f5d1330a-b945-4d95-a7af-\
1401b5ab500f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Vijayb023/CoronaVirus-/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127268697505`*^9},ExpressionUUID->"e6b9a4d9-1d7d-4bdf-8284-\
7206735b0e4d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/samrahimi/coronavirus-api/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012727139762*^9},ExpressionUUID->"ec3a232b-9b80-42f4-831f-\
2374dd08f2d1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jwktls/Coronavirus_android/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127273597746`*^9},ExpressionUUID->"e74b211c-9080-4b5f-b00e-\
d108a9276412"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/vndevpro/2019-ncov-confirmed/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127276017814`*^9},ExpressionUUID->"b1c3fffc-2758-4e44-a579-\
fc550f0308bc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/louisnot/n-Cov2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012727764787*^9},ExpressionUUID->"99ccc8f3-82d4-4d19-b64c-\
f4384febdecd"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/WeileiZeng/OpenSourceWuhan/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012727969797*^9},ExpressionUUID->"847430a0-fab6-4039-b321-\
a04f0ea2070a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nnikniL/2019-nCoV_Notes/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012728124804*^9},ExpressionUUID->"11584ea9-6543-43f6-b7a2-\
14e4d02f9515"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/asmointernational123/coronavirus-blog/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012728424816*^9},ExpressionUUID->"f5a6460c-acae-4441-b5d8-\
08421c570f24"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Zeldsc/coronavirus_analises/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012728585823*^9},ExpressionUUID->"0a579cb6-99b4-4ab0-bbf6-\
2d7adb7a9d20"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ddzyan/new-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127287428303`*^9},ExpressionUUID->"3372d67d-2cc8-4364-8f16-\
8dd71b7bfd5d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/nyem69/coronavirus_data/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127289028373`*^9},ExpressionUUID->"3209a39a-59df-41fb-8133-\
f15b2cefba5a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/cyrusxzw/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127290728436`*^9},ExpressionUUID->"b7536211-ee2b-46e5-aa4e-\
08a90f721378"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/tomsharp/coronavirus-dashboard/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127292178507`*^9},ExpressionUUID->"e738d658-0a58-43c8-8fef-\
c0d538c547c0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Daggron/No-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012729385858*^9},ExpressionUUID->"1a9875ae-32cd-4738-82a7-\
e780337c4eab"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/EnderRL/wuhan/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127295418644`*^9},ExpressionUUID->"642929d7-7ee3-4ad7-8695-\
7b2266566da2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/zire/pandemic2020/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127296908712`*^9},ExpressionUUID->"c910d44c-bdde-476d-9b75-\
97a595ef46be"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/tangingw/coronavirus_scrapper/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012729839878*^9},ExpressionUUID->"21707363-9e51-470b-a7bb-\
6f100da0461f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PrabhaSahiti/Coronavirus_spread/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012730061887*^9},ExpressionUUID->"c99fb309-0a37-4688-8e54-\
6643a5599d54"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yc111/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012730287913*^9},ExpressionUUID->"61be7ff3-79ba-4c59-802f-\
bc3276658be0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dexterwah/coronavirus-news/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012730456919*^9},ExpressionUUID->"f9604bdc-896f-4925-b2d8-\
295efae100c6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Felix-lxd/coronavirus-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012730619929*^9},ExpressionUUID->"c76e83f6-3b3c-45fd-9f18-\
9f6842df5220"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ZhanweiDU/2019nCov/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127307689314`*^9},ExpressionUUID->"bfb598da-dbb8-432c-8e57-\
68a46be386b0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jdrakephd/wuhan-stochastic-model/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012730909938*^9},ExpressionUUID->"d1cc896d-cd25-4eb5-87d7-\
47edeaaed6c4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/lichader/coronavirus-bot/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012731059947*^9},ExpressionUUID->"a053e6c2-eebf-4a3d-8999-\
5b46a86de855"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yongjun21/wuhan-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127312269497`*^9},ExpressionUUID->"ab735bad-98fe-40e9-ab3c-\
422b10e2f816"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ExpDev07/coronavirus-tracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127313899584`*^9},ExpressionUUID->"8d91da6e-6d92-43ac-bf59-\
fcdaa9f6c934"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/green-trees/novel-coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127315719676`*^9},ExpressionUUID->"d06186cb-5f93-4685-962e-\
87ff3abade88"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/thiennv2896/Corona-Monitor/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127318849792`*^9},ExpressionUUID->"e5d0b125-c019-4dd8-8216-\
a94701a12cb8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/edwardcooper/wuhan-virus-paper/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012732312998*^9},ExpressionUUID->"ce4a29ba-a097-4f8a-8bfb-\
39d29be1325e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/changbing2019/LSTM4Coronavirusprediction/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127325240183`*^9},ExpressionUUID->"ced710ed-1373-4900-9360-\
df6fc3a99f4e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/GloryWong/2019ncov-xiaogan/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012732678026*^9},ExpressionUUID->"0f69e6ce-ade3-4029-9b69-\
8a2fbdcec006"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/SauravSanjay/Data-Science-Coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127328420324`*^9},ExpressionUUID->"fc100e26-cd63-42d5-a93d-\
506d80565237"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/johnjaiharjose/CoronaVirusMapper/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127330024805`*^9},ExpressionUUID->"aa661553-f115-4e07-9a5d-\
5cabd1f20bab"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/imanpalsingh/coronavirus-data-analysis/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012733163488*^9},ExpressionUUID->"5d4b1746-0777-4723-a858-\
3ebc090277ce"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Pyxisq/CoronaVirusSpread/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127333274927`*^9},ExpressionUUID->"6240e6d9-c999-43cd-a25e-\
3cb3bfeaf7d0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/craftsman-lab/x-coronavirus-volunteer/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127335055017`*^9},ExpressionUUID->"47378365-cd27-4ef3-a811-\
5e798820fe00"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Fjallen/Coronavirus-Analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012733735514*^9},ExpressionUUID->"648f17f5-8328-461e-b02d-\
61e889631386"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/rbrick/corona-tracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001273395952*^9},ExpressionUUID->"cd576afc-c2dd-4ca6-8990-cd1c79aa75e1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ExpDev07/coronavirus-tracker-api/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012734117545*^9},ExpressionUUID->"d0200913-d167-42af-a990-\
32dfeacbc417"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/diy2learn/conronavirus_viz/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127342745514`*^9},ExpressionUUID->"a8300514-ebef-4f4a-b7e2-\
48858badbe16"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jonklaric/CoronaVirusModel/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012734443555*^9},ExpressionUUID->"b18ad04c-3f7a-47dc-ad59-\
0d4e0d4e3f83"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/anevaluator/ncov-analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012734602565*^9},ExpressionUUID->"df365cc9-1a07-43c3-bc33-\
7c505cc13e37"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/thegostisdead/CoronaVirus-Vizualizer/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012734752571*^9},ExpressionUUID->"3749df0a-ea7f-44e5-984c-\
83d6132f4d6a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/x-craftsman/x-coronavirus-bee/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012734984578*^9},ExpressionUUID->"c3a95441-5c57-474d-b0f6-\
7f0b77da2f32"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/lumaaaaaa/KoronaCS/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127351405916`*^9},ExpressionUUID->"cf0dd35f-1534-425b-b4a8-\
3948bbce2842"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Bohan-S/Coronavirus-Analysis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012735293599*^9},ExpressionUUID->"2eb5c746-2d0f-4474-9a26-\
4738a5a9e0ef"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/renyi/coronavirus_scrapper/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012735449601*^9},ExpressionUUID->"5825ecd0-2b80-42f6-b7c7-\
471a86a3e0c1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yuejoo/Coronavirus-Wuhan-101/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127356226063`*^9},ExpressionUUID->"8d5c341a-78ce-4733-867e-\
63abf0a00ef1"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/PrawiraGenestonlia/anti-coronavirus-\
backend/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127358696337`*^9},ExpressionUUID->"e4fe1b87-80b2-45f0-ad20-\
0208a38de983"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dankaki/wuhan_coronavirus_risk/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012736038639*^9},ExpressionUUID->"27daf2ea-8048-4116-b878-\
01b5035727aa"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/easonlai/Visualization_for_Wuhan-\
Coronavirus_2019-nCov_cases_HK/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127361926603`*^9},ExpressionUUID->"94a1823e-da72-44b8-8eda-\
7dd4eff1f9d6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/mame0521/2019-nCoV-/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127364196696`*^9},ExpressionUUID->"1e8fffbe-79f2-4d2e-9e68-\
85b9c6911f70"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/garchingastronomy/-/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127366506834`*^9},ExpressionUUID->"932fcac0-f592-4323-9d81-\
4f335bc2efc9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CalBearKen/\
WuhanCoronaVirusMutationMonitoring/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127368696938`*^9},ExpressionUUID->"14b7ceae-1fde-4f41-a73b-\
4756e6b10f72"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/suhanlee/rn-coronavirus-info/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012737122716*^9},ExpressionUUID->"bd5e4c70-22de-47f3-b355-\
f965d41d4d23"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/bhuwanesh340/Coronavirus_Tweets_Analysis/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001273732572*^9},ExpressionUUID->"224e5f3f-085e-419f-a049-ebd19933198a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/weiaiwayne/Coronavirus_on_Twitter/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012737492729*^9},ExpressionUUID->"51a47a02-2800-46e4-800f-\
3663ba2963c9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/h-mehta/Wuhan-Coronavirus-Visualization/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127376507387`*^9},ExpressionUUID->"50243b36-c1e6-4f45-aa76-\
dec2b6016c09"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/x-craftsman/x-coronavirus-fee/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012737787743*^9},ExpressionUUID->"f334ba38-dbfd-4dbc-89e1-\
34f25d74e7f7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/williamli/coronavirus-home-quarantine-hk/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012737966752*^9},ExpressionUUID->"9791f2e7-b3fd-4a80-a127-\
e65fc2920483"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/realvivekganta/CoronaVirusTweetScraper/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127381897593`*^9},ExpressionUUID->"7c21032a-3c6c-4509-87e1-\
afa83c2689d8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Cricetulus/wuhan-coronavirus-prediction-/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012738444787*^9},ExpressionUUID->"9b4bfabe-45a9-4034-9a3f-\
b754080cc718"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dotis90/coronavirus-block-chrome-extension/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012738631796*^9},ExpressionUUID->"8de3f24e-93fc-4182-9c55-\
bbe11fcc49f4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/msyazwan/news_coronavirus_json/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012738868806*^9},ExpressionUUID->"91ab3eee-8800-4440-9fdc-\
e0d755f98b80"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/craftsman-lab/x-coronavirus-apis/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127390928144`*^9},ExpressionUUID->"a596a61f-1d75-4685-a0e2-\
4ed139cce89f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/peirangxu/Project_2_Coronavirus_-Pneumonia/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127392468204`*^9},ExpressionUUID->"a62c2bff-5bd6-4ce0-8821-\
8bad58eb464e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/craftsman-lab/x-coronavirus-hospital/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012739509833*^9},ExpressionUUID->"53b66a81-a918-4e6b-a24f-\
e581ae8d4e89"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/OBMGIS/CoronaVirusMap/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012739730843*^9},ExpressionUUID->"7afc396d-860c-49d0-be5d-\
f3be34a18ce6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Formalin564/2019-Novel-Coronavirus/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127398829365`*^9},ExpressionUUID->"6ddadae6-6d59-4470-9e7a-\
9bd0202085e4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/presstofan/2019-nCov-data-collection/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012740034944*^9},ExpressionUUID->"193e1744-cf63-4e3c-9e77-\
0471ee186d0a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CoryAndrewHofstad/Shanghai-During-and-\
After-Bastyr-Landing-CoronaVirus-Source-/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012740322958*^9},ExpressionUUID->"92508b57-ca25-4787-9214-\
40d1ba6eb95d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/AlaaSenjab/coronavirus_live_map/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127405719657`*^9},ExpressionUUID->"7a7d55e8-4f1c-4961-a0e1-\
4be41b88c989"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/odaiwai/2020_wuhan_coronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127407819757`*^9},ExpressionUUID->"e538a6b8-6d07-4ffa-b4d0-\
75f5f2280569"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/guardian/interactive-coronavirus-tracker-\
map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127409489875`*^9},ExpressionUUID->"94a7a2b5-7b14-4f60-a6ff-\
0992a18c264e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yangmingleiSYSU/2019-novel-coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012741105994*^9},ExpressionUUID->"efd52f28-e476-478b-a519-\
63ceb971e1c7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/UW-CSE442-WI20/A3-coronavirus-alert/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012741338001*^9},ExpressionUUID->"9179c6ee-5794-4973-b2fe-\
69598a88b03c"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/tunguyen2504/coronavirus-tracking-app/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127415680265`*^9},ExpressionUUID->"ad3a4781-6510-46b6-88e3-\
b36d9fe2ae30"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/thecatgamer137/Joke.Win32.Coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001274192106*^9},ExpressionUUID->"9f47e1c0-3d65-48d3-a5d7-ff841cd6feb7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/hwei/AntiCoronavirus2/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012742133063*^9},ExpressionUUID->"314c115c-9385-44fe-afe0-\
977aaf721de0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/muniah/2019-Novel-Coronavirus-analysis/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012742295069*^9},ExpressionUUID->"b9b23e22-4076-49e7-bae0-\
aca22cc7cb04"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/juliuswuwu/Coronavirus-data-visalization-\
project/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127425630856`*^9},ExpressionUUID->"11746403-e436-4db9-8e34-\
373c755af7bc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/stephan227/coronavirus-data-hq-api/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127427781115`*^9},ExpressionUUID->"d944756c-fa0b-40fd-92cc-\
d33c5ca296e0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ygmpkk/coronavirus-map-backend/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127430911245`*^9},ExpressionUUID->"26aa1bbf-4744-4119-a0c7-\
dff3eedf0d48"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/yuwei1985/2020WuhanCoronavirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127432481337`*^9},ExpressionUUID->"08f3e448-c090-4c3b-a9f2-\
c2d217ceb43d"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kalzeo/CoronaVirusTracker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012743405139*^9},ExpressionUUID->"8a8feb15-b797-434a-be22-\
0a99084dde2a"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/RaSt92/coronavirus-chrome-extension/topics\
\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012743647149*^9},ExpressionUUID->"85f5a63c-8399-4cc9-949a-\
90454adb4899"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Up-s/CoronaVirusServiceCenter/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012743835158*^9},ExpressionUUID->"383aed0a-7584-43c2-afc5-\
55cb4b692e11"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/perell2014/2019-wuhan-coronavirus-data/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012743998169*^9},ExpressionUUID->"497927bb-dd72-422f-9d54-\
24cb6c684fb2"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/HwdTech010/CoronaVirusMaleware/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012744297179*^9},ExpressionUUID->"897cbcd1-6a0d-4e38-a61b-\
ed33ea3b02c4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/iam-abbas/Coronavirus-Data-Visualization/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012744590191*^9},ExpressionUUID->"f7a61f6c-46fd-4975-b369-\
729c31537e01"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/ciszakdamian/Coronavirus-2019-ncov-\
Predictions-ML/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012744740216*^9},ExpressionUUID->"301251fe-983f-4e54-9b93-\
61f0eea223e9"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Jinchili/wuhan_2019_coronavirus_model_\
navigate/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127449442215`*^9},ExpressionUUID->"929e3c2a-0a2a-4c11-aab9-\
372248e1a710"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/guardian/interactive-coronavirus-tracker-\
asia-map/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127452052355`*^9},ExpressionUUID->"835f2eab-c18b-491c-83de-\
68f7351b9c4f"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/gadm21/CoronaVirus-spread-prediction-model/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127453692427`*^9},ExpressionUUID->"71a8c6e5-808f-4f12-bce9-\
ea0b857d7fb8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/initiumdev/20200203-international-novel-\
coronavirus-live/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127455252495`*^9},ExpressionUUID->"c186e65b-180c-482e-9e41-\
c309dd8dc4cd"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/samrahimi/samrahimi.github.io/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012745689258*^9},ExpressionUUID->"dacfd9eb-d3f6-46bb-8aaf-\
cf77bc8eba96"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Vicky0528/Project2-WuHan-Coronavirus/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127458452625`*^9},ExpressionUUID->"0946621d-f9b7-4a4a-8b54-\
ab189fd013cc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/DarlingHang/CSAPP_labs/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012746003701*^9},ExpressionUUID->"2bf15d97-8917-4023-936f-\
8538a89f9b91"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/duiyu/get-out-game/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127461742344`*^9},ExpressionUUID->"59f6c0f7-62d7-4c86-ac14-\
53b24cb6efde"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/jenzushsu/powerbi-ncov2019/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012746343238*^9},ExpressionUUID->"e0893800-6ac8-4a5a-8d9c-\
5c450f3972c7"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/samrahimi/daily-corona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127465422463`*^9},ExpressionUUID->"a74112f4-5228-418f-8029-\
377168fb9e1b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/standwithwuhan/rumorsbreaker/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012746694251*^9},ExpressionUUID->"ac5184ad-d76a-49dd-b6eb-\
73ef2f66e845"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Vopaaz/nCov-transportation-subscriber/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127468712797`*^9},ExpressionUUID->"d8d4aa55-429b-4c7d-a6ff-\
2dd478a62038"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/lumaaaaaa/Korona/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012747026287*^9},ExpressionUUID->"b3c99e61-994b-419d-a517-\
535c5a97bee5"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/qingweihk/New-coronavirus-development-\
trend-Feb-6/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127472092896`*^9},ExpressionUUID->"2062d059-687e-42d2-886b-\
72f0ff177397"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Nova-Xue/Days-In-China-with-Coronavirus-\
Spreading/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012747370366*^9},ExpressionUUID->"041fde56-1351-43a2-9f36-\
a4c27ad72f75"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/balandhanka/coronavirus-infectent-\
prediction-using-linear-regression-model/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012747534372*^9},ExpressionUUID->"51e39d88-2443-4d56-bbd9-\
84d2b7e2b9f0"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/gustavocarmoh/Analise-Corona-Virus/topics\"\
"},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.79001274770938*^9},ExpressionUUID->"2c081d88-3dfc-497b-8008-7d440f71da37"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/viral-coronavirus-dev/static-website/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127478733883`*^9},ExpressionUUID->"d51d3245-9ff5-40cb-bb59-\
28a9090f8b0e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/BrunoCdot/Actualizaciones-Coronavirus-2019-\
nCoV-Gobierno-de-Espana/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127480479965`*^9},ExpressionUUID->"ef1c7330-fa98-4721-ae3d-\
ec6314fd5652"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/aasgary/-Novel-Coronavirus-2019-nCoV-\
Outbreake-Timelapse/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127482190037`*^9},ExpressionUUID->"835b3ac9-aeaa-4301-843e-\
725836a2855e"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/viral-coronavirus-dev/alert-app/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127483800087`*^9},ExpressionUUID->"228f60db-44f8-4190-9de8-\
67996c64b982"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CoryAndrewHofstad/SOURCE-OF-CORONAVIRUS-\
OUTBREAK-BOSC23-HUMAN-LABORATORY-SLAVES/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127485460153`*^9},ExpressionUUID->"7f0d590d-2ef9-4e84-8eb1-\
929ae4a79e62"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/BrunoCdot/PROCEDIMIENTO-DE-ACTUACION-2019-\
nCoV-/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127486990595`*^9},ExpressionUUID->"8f5ec657-c312-47d0-b187-\
cc77d2489b0b"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/akalia25/StockMarket_Virus_Relationship/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127488750687`*^9},ExpressionUUID->"d0a29171-8ab0-4f85-96c8-\
0a8e03932909"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dmontecino/Eidolon_helvum_CoV_seasonality/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127490770955`*^9},ExpressionUUID->"dea073bd-143c-4ce0-8bcb-\
63c6d1baa9cb"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/raphtlw/CoronaStats/topics\""},
   
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127492351046`*^9},ExpressionUUID->"fe6093fb-6fa7-45af-9c24-\
3f9059f8f635"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Nexysweb/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012749395109*^9},ExpressionUUID->"7bf59552-6a91-4e0f-9def-\
85a9b2702af4"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/CoryAndrewHofstad/Images-of-CoronaVirus-\
cells-are-white-blood-cells-swarmed-by-Pycnogonida-Larvae/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127495661297`*^9},ExpressionUUID->"3392b4e7-c656-4499-ac51-\
7c3f86ccd7ea"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/Gundam-MS/Extinction-Threat-by-Physalia-\
Physalis-Pycnogonida-EEE-AIDS-HIV-SARS-SMALLPOX-CORONAVIRUS/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127497221394`*^9},ExpressionUUID->"ff4bc590-2b4e-49df-9d71-\
4afa542738ec"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/ncov-io/ncov.io/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012749876143*^9},ExpressionUUID->"09889258-c876-4580-b245-\
503e61ca3e10"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/Jonasonw/WuhanWin/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012750029147*^9},ExpressionUUID->"2a3a8ada-d447-472e-814b-\
3112f32275bc"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{"\"https://api.github.com/repos/mame0521/2019-nCoV/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127501941586`*^9},ExpressionUUID->"566341bb-dc67-429d-af37-\
83ea9ab732e8"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/dmontecino/East-African-bats-and-CoV-\
shedding/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127503501644`*^9},ExpressionUUID->"f6f6d708-593d-4b1c-a612-\
cbd364fb92aa"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/febrifahmi/2019-nCoV-Articles-Compilation/\
topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.790012750493169*^9},ExpressionUUID->"1b0b45ad-4a02-4036-94b7-\
d8edcc2148a6"],

Cell[BoxData[
 RowBox[{"URL", "[", 
  TemplateBox[{
   "\"https://api.github.com/repos/kevinxyc1/FightTheVirus/topics\""},
   "URLArgument"], "]"}]], "Echo",
 CellChangeTimes->{
  3.7900127506506567`*^9},ExpressionUUID->"88fb6f4a-a1ac-4d35-b00d-\
f853216ddf48"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{"result2", "[", 
    RowBox[{"All", ",", "\"\<tags\>\""}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.789749631262018*^9, 3.789749653211327*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"0263e477-c88c-4012-8c41-7558d03195a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"wuhan\"\>", ",", "\<\"2019ncov\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"virology\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"pathogens\"\>", ",", "\<\"viruses\"\>",
    ",", "\<\"pandemic\"\>", ",", "\<\"opendata\"\>", 
   ",", "\<\"epedemiology\"\>", ",", "\<\"epedemic\"\>", ",", "\<\"ncov\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"wuhan\"\>", ",", "\<\"r\"\>", 
   ",", "\<\"rstats\"\>", ",", "\<\"ncov\"\>", ",", "\<\"ncov-2019\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus-tracking\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"statistical-models\"\>", 
   ",", "\<\"visualization\"\>", ",", "\<\"python\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"epidemic-model\"\>", 
   ",", "\<\"wuhan\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus-real-time\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"2019ncov\"\>", ",", "\<\"ncov\"\>", ",", "\<\"2020ncov\"\>", 
   ",", "\<\"wuhan-virus\"\>", ",", "\<\"china\"\>", ",", "\<\"virus\"\>", 
   ",", "\<\"pandemic\"\>", ",", "\<\"google\"\>", 
   ",", "\<\"google-sheets\"\>", ",", "\<\"trend\"\>", 
   ",", "\<\"coronavirus-analysis\"\>", ",", "\<\"jhu-csse\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"ncov-2019\"\>", 
   ",", "\<\"scrapy\"\>", ",", "\<\"webcrawler\"\>", ",", "\<\"2019-ncov\"\>",
    ",", "\<\"wuhan\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"lancaster-university\"\>", ",", "\<\"epidemic\"\>", 
   ",", "\<\"epidemic-model\"\>", ",", "\<\"wuhan-coronavirus-outbreak\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus-tracking\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"jupyter-notebook\"\>", ",", "\<\"geopandas\"\>", 
   ",", "\<\"data-science\"\>", ",", "\<\"data-science\"\>", 
   ",", "\<\"jupyter-notebook\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"data-mining\"\>", ",", "\<\"stats\"\>", ",", "\<\"china\"\>", 
   ",", "\<\"scraping-data\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"wuhan-virus\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"corona-tracker\"\>", 
   ",", "\<\"medical\"\>", ",", "\<\"telegram-bot\"\>", 
   ",", "\<\"red-cross\"\>", ",", "\<\"github-pages\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"mathematica\"\>", ",", "\<\"wolfram-language\"\>", 
   ",", "\<\"data-science\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"wuhan\"\>", ",", "\<\"wuhan-coronavirus-outbreak\"\>", 
   ",", "\<\"ncov-2019\"\>", ",", "\<\"coronavirus-tracking\"\>", 
   ",", "\<\"new-coronavirus\"\>", ",", "\<\"pneumonia\"\>", 
   ",", "\<\"wuhan\"\>", ",", "\<\"info-websites\"\>", 
   ",", "\<\"information\"\>", ",", "\<\"wuhan-pneumonia\"\>", 
   ",", "\<\"wuhan-coronavirus\"\>", 
   ",", "\<\"coronavirus-globaloutbreak\"\>", 
   ",", "\<\"novel-coronavirus\"\>", ",", "\<\"real-time-map\"\>", 
   ",", "\<\"wuhan-coronavirus-outbreak\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"nvoc\"\>", ",", "\<\"coronavirus-maps\"\>", 
   ",", "\<\"coronavirus-tracking\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus-real-time\"\>", ",", "\<\"coronavirus-info\"\>", 
   ",", "\<\"coronavirus-websites\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"mapbox-gl\"\>", 
   ",", "\<\"disease\"\>", ",", "\<\"kotlin\"\>", ",", "\<\"android\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus-globaloutbreak\"\>", 
   ",", "\<\"coronavirus-real-time\"\>", ",", "\<\"wuhan-pneumonia\"\>", 
   ",", "\<\"wuhan-coronavirus-outbreak\"\>", ",", "\<\"telegram-bot\"\>", 
   ",", "\<\"gmod\"\>", ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"virus\"\>", ",", "\<\"infection\"\>", ",", "\<\"bat\"\>", 
   ",", "\<\"soup\"\>", ",", "\<\"coronavirus-real-time\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"wuhan-pneumonia\"\>", 
   ",", "\<\"wuhan-coronavirus-outbreak\"\>", ",", "\<\"epidemics\"\>", 
   ",", "\<\"prediction-model\"\>", ",", "\<\"r\"\>", 
   ",", "\<\"regression-models\"\>", ",", "\<\"ncov\"\>", 
   ",", "\<\"ncov-data-visual\"\>", ",", "\<\"rstats\"\>", 
   ",", "\<\"rstats-package\"\>", ",", "\<\"corona\"\>", 
   ",", "\<\"python\"\>", ",", "\<\"pandas\"\>", ",", "\<\"numpy\"\>", 
   ",", "\<\"matplotlib\"\>", ",", "\<\"seaborn\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"infected-people\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"china\"\>", ",", "\<\"coronavirus-modeler\"\>", 
   ",", "\<\"spread\"\>", ",", "\<\"infection\"\>", ",", "\<\"modeling\"\>", 
   ",", "\<\"javascript\"\>", ",", "\<\"interactive\"\>", 
   ",", "\<\"wuhan\"\>", ",", "\<\"d3\"\>", ",", "\<\"d3v4\"\>", 
   ",", "\<\"corona\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"wuhan-coronavirus\"\>", ",", "\<\"ncov-2019\"\>", 
   ",", "\<\"ncov\"\>", ",", "\<\"wuhan-virus\"\>", 
   ",", "\<\"data-analysis\"\>", ",", "\<\"statistics\"\>", ",", "\<\"r\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"rpackage\"\>", ",", "\<\"data\"\>", 
   ",", "\<\"epidemiology\"\>", ",", "\<\"ncov\"\>", ",", "\<\"ncov-2019\"\>",
    ",", "\<\"dataset\"\>", ",", "\<\"kubernetes\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"api\"\>", ",", "\<\"ncov-2019\"\>", 
   ",", "\<\"bioinformatics\"\>", ",", "\<\"smalltalk\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"coronavirus-tracking\"\>", 
   ",", "\<\"open-source\"\>", ",", "\<\"wuhan\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", ",", "\<\"wuhan\"\>",
    ",", "\<\"coronavirus\"\>", ",", "\<\"sars\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"dashboard\"\>", 
   ",", "\<\"livedata\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"tracker\"\>", ",", "\<\"map\"\>", ",", "\<\"visualization\"\>", 
   ",", "\<\"emberjs\"\>", ",", "\<\"up-to-date\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"china\"\>", 
   ",", "\<\"deep-learning\"\>", 
   ",", "\<\"predicting-daily-determined-cases\"\>", 
   ",", "\<\"jupyter-notebook\"\>", ",", "\<\"2020ncov\"\>", 
   ",", "\<\"coronavirus-tracking\"\>", ",", "\<\"data\"\>", 
   ",", "\<\"go\"\>", ",", "\<\"golang\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"bot\"\>", ",", "\<\"telegram\"\>", ",", "\<\"api\"\>", 
   ",", "\<\"flask\"\>", ",", "\<\"python\"\>", ",", "\<\"heroku\"\>", 
   ",", "\<\"python3\"\>", ",", "\<\"pip\"\>", ",", "\<\"pipenv\"\>", 
   ",", "\<\"webapp\"\>", ",", "\<\"rest-api\"\>", ",", "\<\"java\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"data-science\"\>", 
   ",", "\<\"python\"\>", ",", "\<\"jupyter-notebook\"\>", 
   ",", "\<\"2019-ncov\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"alerting\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus-tracking\"\>", 
   ",", "\<\"coronavirus-globaloutbreak\"\>", ",", "\<\"coronavirus\"\>", 
   ",", "\<\"coronavirus-globaloutbreak\"\>", 
   ",", "\<\"coronavirus-tracking\"\>", ",", "\<\"2019-ncov\"\>", 
   ",", "\<\"ncov\"\>", ",", "\<\"wuhan-pneumonia\"\>", 
   ",", "\<\"wuhan-coronavirus-outbreak\"\>", ",", "\<\"coronavirus\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7897496348912296`*^9, 3.789749653574343*^9}, 
   3.789820888694104*^9, 3.790012776971442*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"f59647e0-b47c-4a51-9616-5da109bee9e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.789749657310564*^9, 3.7897496606837664`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"fc7a4b35-d011-4fdb-9116-0e001d76f13b"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.19444444444444445`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"coronavirus-tracking\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057692307692307696`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0., -35.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"2019-ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08760683760683761],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-8., 27.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"wuhan-coronavirus-outbreak\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04914529914529915],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {0., 48.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"coronavirus-globaloutbreak\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0405982905982906],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {-4., -51.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"wuhan-pneumonia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0405982905982906],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {0., 63.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"predicting-daily-determined-cases\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {0., -64.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"jupyter-notebook\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0405982905982906],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {0., -76.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coronavirus-real-time\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0405982905982906],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {0., 77.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"wuhan\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07905982905982906],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-2., -93.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"epidemic-model\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {0., 90.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ncov-2019\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04914529914529915],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0., 104.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"coronavirus-analysis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {0., -110.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"wuhan-coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {0., 118.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"lancaster-university\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {2., -120.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"regression-models\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {82., -86.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data-science\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0405982905982906],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-108., 63.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"telegram-bot\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {101., 62.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coronavirus-maps\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {114., 33.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"prediction-model\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-97., -74.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"infected-people\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {-85., 88.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coronavirus-websites\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {107., -72.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coronavirus-modeler\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {0., 129.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"real-time-map\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {116., 20.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epedemiology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {-81., -89.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"google-sheets\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {72., -96.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"wuhan-virus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03632478632478633],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {85., 90.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"deep-learning\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-120., 26.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epidemiology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {-78., -99.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"github-pages\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-78., 100.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data-analysis\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {77., 101.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pandemic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {115., -52.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"novel-coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {0., -130.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"python\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0405982905982906],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-120., -33.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"open-source\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {104., 73.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data-mining\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {-104., 75.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"visualization\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {133., -32.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ncov-data-visual\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {0., 139.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"new-coronavirus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {-123., -61.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"coronavirus-info\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {88., -106.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pneumonia\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {-121., -47.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"geopandas\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-75., -109.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mapbox-gl\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {76., -116.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pathogens\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {79., 113.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.053418803418803416`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-77., 113.}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"epidemics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {-70., -121.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"corona-tracker\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {0., -140.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bioinformatics\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {0., 149.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"matplotlib\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {68., -130.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epedemic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {79., 123.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"javascript\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {-74., 127.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2020ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-146., 37.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2019ncov\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {0., -151.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"info-websites\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-75., -131.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"opendata\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {143., 43.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"modeling\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {63., 137.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"epidemic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {57., -140.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"mathematica\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-72., 137.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rpackage\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-56., -141.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"jhu-csse\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {-142., 50.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"infection\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-57., 148.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"information\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {0., 159.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"emberjs\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {48., -150.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"python3\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-47., -151.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"kubernetes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {61., 149.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rest-api\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-134., -86.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pandas\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-116., 110.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"alerting\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {139., 81.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"interactive\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {0., -162.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dashboard\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-135., 98.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"china\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0405982905982906],
     FontColor->RGBColor[1, 0.75, 0]], {-129., -98.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"pipenv\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {127., 100.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"numpy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {124., -94.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"google\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {-159., -30.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"golang\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-119., -110.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"corona\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-47., 160.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"red-cross\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {49., 159.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"medical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {-143., 85.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"livedata\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {125., 110.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"gmod\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {152., 53.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"rstats\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {142., -83.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"dataset\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {160., -43.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"android\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-116., 120.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"disease\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {43., -160.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"virus\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {116., -117.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"heroku\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {154., 63.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"map\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {154., -51.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"java\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {103., -128.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"data\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-37., -162.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"api\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.032051282051282055`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-158., -43.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"kotlin\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {165., 20.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"d3v4\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {98., 133.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"nvoc\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {111., -61.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"flask\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-150., -71.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pip\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-163., 22.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"go\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {-1., 34.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bot\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {111., 121.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"bat\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {88., -140.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"d3\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02777777777777778],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {-63., -4.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"r\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03632478632478633],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-5., 9.},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Helvetica"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-180.5, 179.5}, {-168.5, 164.5}}]], "Output",
 CellChangeTimes->{3.789749664825003*^9, 3.789820894550297*^9, 
  3.7900127948132496`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"2032a06d-6077-4ac8-944d-d2f903010d94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<D:\\\\git\\\\wolfram-coronavirus\\\\images\\\\github-topic-wordcloud.\
png\>\"", ",", 
   RowBox[{"Out", "[", "113", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.789749677903779*^9, 3.7897497020382204`*^9}, {
  3.7898209090557723`*^9, 3.7898209091017733`*^9}, {3.790012818402586*^9, 
  3.7900128225443773`*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"9f62ae0e-8c2e-4e7f-913f-fe689540cbe2"],

Cell[BoxData["\<\"D:\\\\git\\\\wolfram-coronavirus\\\\images\\\\github-topic-\
wordcloud.png\"\>"], "Output",
 CellChangeTimes->{3.789749704188345*^9, 3.7898209099897995`*^9, 
  3.7900128254904995`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"71edcd72-aa8f-4673-92bd-f9c0f7c154c4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"json", "[", "\"\<items\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7897466559972534`*^9, 3.789746669704405*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"3a2b61d8-6adf-4212-9e4a-01bb5f974ed4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"items", "=", 
   RowBox[{"json", "[", "\"\<items\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.789746711541909*^9, 3.7897467195079966`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"d0027f66-41f5-4fbf-b3ce-4326b97cdabb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"gettags", "[", 
     RowBox[{"json", ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "30"}], "}"}]}], "]"}], "//", "Dataset"}]], "Input",
 CellChangeTimes->{{3.7897467034057817`*^9, 3.789746705703845*^9}, {
  3.789746765084499*^9, 3.7897467815496793`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"7df7a24b-47ae-4b6e-870d-7f48433427e0"],

Cell[BoxData[
 RowBox[{"Keys", "[", "json", "]"}]], "Input",
 CellChangeTimes->{{3.789747085992421*^9, 3.7897470928615103`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"1aeb43c0-d437-4414-a9fc-46445b62cc50"],

Cell[BoxData[
 RowBox[{"json", "[", "\"\<incomplete_results\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7897482010763025`*^9, 3.7897482086013794`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"67c8adff-a417-404d-b79b-06738227600e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"json", "[", "\"\<items\>\"", "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7897471305364866`*^9, 3.7897471390714846`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"aa98d376-29ca-466e-a646-08e68fda8393"],

Cell[BoxData["json"], "Input",
 CellChangeTimes->{{3.789747100792595*^9, 3.7897471010616045`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"08828817-6532-483b-ab2f-1e75b5a5a973"]
},
WindowSize->{977.5, 1012.},
WindowMargins->{{Automatic, -5}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b5593095-0dc5-4a6e-9371-2bdcb0248b0a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 724, 16, 64, "Input",ExpressionUUID->"4c1ff1ba-2b47-4440-887f-5d20a3c2de3c"],
Cell[1307, 40, 4687, 105, 80, "Output",ExpressionUUID->"95a4a4e8-b8f1-4f8f-ae14-3b7b84e69928"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6031, 150, 287, 5, 37, "Input",ExpressionUUID->"ffe324cc-4d02-4f97-b6ad-91c207436a4c"],
Cell[6321, 157, 25425, 446, 78, "Output",ExpressionUUID->"f10bb0ae-eae8-44c6-bee5-93a937b3b7b2"]
}, Open  ]],
Cell[31761, 606, 363, 7, 37, "Input",ExpressionUUID->"2b4f7485-a333-4ed4-a250-d2deb0dbcb53"],
Cell[CellGroupData[{
Cell[32149, 617, 2659, 58, 454, "Input",ExpressionUUID->"f094e2f3-e605-420c-8591-b00f7cd4d23a"],
Cell[CellGroupData[{
Cell[34833, 679, 130, 3, 32, "Echo",ExpressionUUID->"ff0b074f-cdcb-41dd-9b69-e46d19f4a960"],
Cell[34966, 684, 130, 3, 32, "Echo",ExpressionUUID->"f1270389-012c-4833-9f43-fd570f4d6f96"],
Cell[35099, 689, 128, 3, 32, "Echo",ExpressionUUID->"29707911-2801-4463-bb85-840cbe240fb2"],
Cell[35230, 694, 128, 3, 32, "Echo",ExpressionUUID->"645b1046-7ad1-49a3-a445-5cb221be06b0"],
Cell[35361, 699, 130, 3, 32, "Echo",ExpressionUUID->"c05f552e-e2d9-4351-8b5a-72e09ad6eca0"],
Cell[35494, 704, 130, 3, 32, "Echo",ExpressionUUID->"a4c5337a-5485-484e-9240-b6bf2fe26ed1"],
Cell[35627, 709, 130, 3, 32, "Echo",ExpressionUUID->"9454f0c6-d052-46a6-b093-c58b0025d9c6"],
Cell[35760, 714, 130, 3, 32, "Echo",ExpressionUUID->"e30cbd41-081f-43b3-a82e-6acfbe94d207"],
Cell[35893, 719, 130, 3, 32, "Echo",ExpressionUUID->"39748cd8-6b94-4c8f-a467-5971cf4705cf"],
Cell[36026, 724, 130, 3, 32, "Echo",ExpressionUUID->"eb7c5834-bf77-46f3-b481-247946e9c68a"],
Cell[36159, 729, 130, 3, 32, "Echo",ExpressionUUID->"2621cd85-cbfb-4656-b881-b5999f36c17d"],
Cell[36292, 734, 130, 3, 32, "Echo",ExpressionUUID->"2ffb9e5d-ed5b-4cd4-a6b0-04d5999879ea"],
Cell[36425, 739, 130, 3, 32, "Echo",ExpressionUUID->"7de3d191-5a08-418c-aab6-9876c52f03c4"],
Cell[36558, 744, 130, 3, 32, "Echo",ExpressionUUID->"5d7a25ba-131c-45db-81ae-aa64bec89f12"],
Cell[36691, 749, 128, 3, 32, "Echo",ExpressionUUID->"b473476c-123d-472a-a0dc-97f2a13be3d6"],
Cell[36822, 754, 128, 3, 32, "Echo",ExpressionUUID->"cd9c5262-c2b0-441e-be50-a7b3c5e478c3"],
Cell[36953, 759, 128, 3, 32, "Echo",ExpressionUUID->"aa50833e-0b93-4e9c-922a-3b6c6c3d6b39"],
Cell[37084, 764, 130, 3, 32, "Echo",ExpressionUUID->"82be0e36-4fda-4f96-b732-b98f122e94e6"],
Cell[37217, 769, 129, 3, 32, "Echo",ExpressionUUID->"d5745f72-6113-4c64-a9e2-b536debabdb1"],
Cell[37349, 774, 128, 3, 32, "Echo",ExpressionUUID->"a40d282a-8f3e-4960-9e2e-873e0e85aded"],
Cell[37480, 779, 129, 3, 32, "Echo",ExpressionUUID->"454f3f9b-f9c6-4e89-a3a6-89f9237434c7"],
Cell[37612, 784, 130, 3, 32, "Echo",ExpressionUUID->"5a2840c2-c140-43a4-896a-e337823e1598"],
Cell[37745, 789, 131, 3, 32, "Echo",ExpressionUUID->"0587dab8-4014-4ab2-80c7-8106bef81cd9"],
Cell[37879, 794, 128, 3, 32, "Echo",ExpressionUUID->"cf59e2eb-bb77-46bc-b3b1-70c03bedc589"],
Cell[38010, 799, 129, 3, 32, "Echo",ExpressionUUID->"e2563267-f705-4a8a-a157-9de1b5175ba0"],
Cell[38142, 804, 130, 3, 32, "Echo",ExpressionUUID->"f14bee03-ae69-4cb8-b419-cc96e414aab4"],
Cell[38275, 809, 129, 3, 32, "Echo",ExpressionUUID->"f6c53d5e-4117-4393-8be4-232a064bb89e"],
Cell[38407, 814, 130, 3, 32, "Echo",ExpressionUUID->"f691da8e-502e-4d6f-b569-e40f8c8f98f3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38586, 823, 204, 4, 37, "Input",ExpressionUUID->"32230fab-df38-4595-96d9-47511878c74f"],
Cell[38793, 829, 157, 3, 42, "Output",ExpressionUUID->"9457325a-1be0-4019-ab6c-65198c1b4026"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38987, 837, 202, 4, 37, "Input",ExpressionUUID->"edc5058b-3ad7-4a0e-b034-76f64d233e89"],
Cell[39192, 843, 155, 3, 42, "Output",ExpressionUUID->"6de8c775-61c0-4214-b3d3-43f926600b4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39384, 851, 251, 5, 37, "Input",ExpressionUUID->"ec20d036-05b4-4afb-a155-3791a3a536a6"],
Cell[39638, 858, 206, 4, 42, "Output",ExpressionUUID->"8ec51500-19b3-4ce4-b717-4340caa9104d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39881, 867, 762, 19, 64, "Input",ExpressionUUID->"e1e86ddf-92f9-48ef-a058-9ba6c1143956"],
Cell[40646, 888, 80162, 1525, 723, "Output",ExpressionUUID->"2033a84f-321b-464f-af69-4e7656325381"]
}, Open  ]],
Cell[120823, 2416, 2665, 59, 324, "Input",ExpressionUUID->"24bc3ba3-3ce3-4672-816b-4271a0e6c831"],
Cell[CellGroupData[{
Cell[123513, 2479, 347, 8, 37, "Input",ExpressionUUID->"2a159297-b250-47d4-be90-0f087c0c6f4d"],
Cell[CellGroupData[{
Cell[123885, 2491, 281, 8, 38, "Echo",ExpressionUUID->"a863c223-c7fe-49bf-8e02-1c5f2a6b4e90"],
Cell[124169, 2501, 244, 5, 38, "Echo",ExpressionUUID->"ddb728c6-d431-4157-a929-aab0e0cf75fa"],
Cell[124416, 2508, 258, 7, 38, "Echo",ExpressionUUID->"6ee8afa7-d2dd-469d-81b5-f8ba008b794d"]
}, Open  ]],
Cell[124689, 2518, 26949, 503, 171, "Output",ExpressionUUID->"821709e9-7d13-4002-8373-6149214a194d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151675, 3026, 637, 12, 37, "Input",ExpressionUUID->"f1ed22c2-7408-4c08-8624-42bd116bf749"],
Cell[CellGroupData[{
Cell[152337, 3042, 276, 7, 38, "Echo",ExpressionUUID->"b76ac7df-e951-4fd2-9d85-c0e4067aa3b9"],
Cell[152616, 3051, 244, 5, 38, "Echo",ExpressionUUID->"76495b14-e009-41e1-8b78-0b8f4a3b384d"],
Cell[152863, 3058, 255, 6, 38, "Echo",ExpressionUUID->"5d71715c-4a1f-485d-bcaa-27a36883c698"],
Cell[153121, 3066, 263, 7, 38, "Echo",ExpressionUUID->"9f8f04cc-8d25-4667-a02d-460a4474e0fe"],
Cell[153387, 3075, 259, 7, 38, "Echo",ExpressionUUID->"8c1ff427-87ec-4332-b88c-c0bc89d259d5"],
Cell[153649, 3084, 275, 8, 38, "Echo",ExpressionUUID->"48163aa5-d78e-4647-aab5-3012e03e3128"],
Cell[153927, 3094, 251, 6, 38, "Echo",ExpressionUUID->"31aec0f2-d5a7-4cd0-b3b7-f4a047cd881e"],
Cell[154181, 3102, 259, 6, 38, "Echo",ExpressionUUID->"320c36be-db49-4e04-b9b7-16659fc2ae6c"],
Cell[154443, 3110, 270, 7, 38, "Echo",ExpressionUUID->"665846fb-7217-49cd-97b3-10c6519acefb"],
Cell[154716, 3119, 280, 8, 38, "Echo",ExpressionUUID->"b2e6a82c-e576-49ae-8c9d-465186ae9eb5"],
Cell[154999, 3129, 266, 7, 38, "Echo",ExpressionUUID->"ff4cdba5-dd0f-47ae-99d3-969615060289"],
Cell[155268, 3138, 250, 6, 38, "Echo",ExpressionUUID->"c00eecdc-a845-4db5-b9cf-185f101a700f"],
Cell[155521, 3146, 276, 8, 38, "Echo",ExpressionUUID->"900b5b47-2999-483a-9aaa-c373583d7699"],
Cell[155800, 3156, 257, 7, 38, "Echo",ExpressionUUID->"11f87d79-1760-4a5f-a77a-1510b605b5b8"],
Cell[156060, 3165, 250, 6, 38, "Echo",ExpressionUUID->"094c1757-f0d8-41a6-b60d-40988f03e8b8"],
Cell[156313, 3173, 262, 7, 38, "Echo",ExpressionUUID->"38730299-6397-420c-a5df-d752bdf89694"],
Cell[156578, 3182, 264, 7, 38, "Echo",ExpressionUUID->"d9f14221-ea17-485b-91ed-05d03c9cee8c"],
Cell[156845, 3191, 272, 8, 38, "Echo",ExpressionUUID->"7638732e-445c-4441-9fec-dc6db6bb3bd9"],
Cell[157120, 3201, 264, 7, 38, "Echo",ExpressionUUID->"165c1b23-68e5-4f0b-b609-869875e7f1e1"],
Cell[157387, 3210, 271, 8, 38, "Echo",ExpressionUUID->"44920e51-e5d8-4ed5-b59e-863f8f3fc02c"],
Cell[157661, 3220, 254, 6, 38, "Echo",ExpressionUUID->"4f16a0f7-0a85-4465-93af-c96c5427aadf"],
Cell[157918, 3228, 264, 7, 38, "Echo",ExpressionUUID->"3ad2bb77-52de-486d-b115-a5f4b018bbb7"],
Cell[158185, 3237, 262, 7, 38, "Echo",ExpressionUUID->"deee4219-af82-4c57-a6e7-ba76440d23f1"],
Cell[158450, 3246, 285, 8, 38, "Echo",ExpressionUUID->"625032a6-11e4-4150-b7c5-cf026b133e78"],
Cell[158738, 3256, 259, 7, 38, "Echo",ExpressionUUID->"5a5ac777-f091-4494-afac-6dcc782943cc"],
Cell[159000, 3265, 264, 7, 38, "Echo",ExpressionUUID->"e37bf8a3-7a25-49dd-89d1-326b033ca075"],
Cell[159267, 3274, 262, 7, 38, "Echo",ExpressionUUID->"ec1447db-be7a-46e5-9f71-04da7b7662af"],
Cell[159532, 3283, 260, 7, 38, "Echo",ExpressionUUID->"1e3fea22-ce28-4ce7-a1d0-9651731c5512"],
Cell[159795, 3292, 252, 6, 38, "Echo",ExpressionUUID->"c9a73763-a59f-46ea-92f4-1adf929b1bb9"],
Cell[160050, 3300, 252, 6, 38, "Echo",ExpressionUUID->"98cf487a-67e5-4fc2-8623-6e60e2a29c73"],
Cell[160305, 3308, 246, 6, 38, "Echo",ExpressionUUID->"f18dc3a3-6278-42c8-82ca-b8e09b39d721"],
Cell[160554, 3316, 247, 6, 38, "Echo",ExpressionUUID->"cb95698d-7b1f-4b7a-8662-88000305e148"],
Cell[160804, 3324, 268, 7, 38, "Echo",ExpressionUUID->"56041909-1409-4d2f-9e1b-85b7e7aaf6fe"],
Cell[161075, 3333, 257, 7, 38, "Echo",ExpressionUUID->"1bdbec59-dc4d-4914-be4f-468036afcae5"],
Cell[161335, 3342, 263, 7, 38, "Echo",ExpressionUUID->"2716a059-0da9-40c2-a2c3-9af9aacceda6"],
Cell[161601, 3351, 258, 7, 38, "Echo",ExpressionUUID->"28be23a7-820a-4a7e-86f6-bc7874e18259"],
Cell[161862, 3360, 252, 6, 38, "Echo",ExpressionUUID->"5789d254-1bd4-4103-9fe9-7bab6ba4e5c3"],
Cell[162117, 3368, 275, 8, 38, "Echo",ExpressionUUID->"2a323e18-c3b1-4eae-a1fb-a4d602108d2a"],
Cell[162395, 3378, 264, 7, 38, "Echo",ExpressionUUID->"568514c3-e2c4-4772-8475-a480f2022182"],
Cell[162662, 3387, 263, 6, 38, "Echo",ExpressionUUID->"f930d865-cc6c-46b2-8905-db832eb95b56"],
Cell[162928, 3395, 259, 7, 38, "Echo",ExpressionUUID->"45024d9d-a8ef-4e43-89ae-5a5f9139b762"],
Cell[163190, 3404, 283, 8, 38, "Echo",ExpressionUUID->"e2d4c259-be37-4b62-a46a-ea8be975d703"],
Cell[163476, 3414, 255, 7, 38, "Echo",ExpressionUUID->"353b404b-eb69-4a7c-b480-afff1a69d8cd"],
Cell[163734, 3423, 271, 8, 38, "Echo",ExpressionUUID->"bf9c87da-9d6d-4aaf-9eed-ceee57549975"],
Cell[164008, 3433, 254, 6, 38, "Echo",ExpressionUUID->"bd28e867-3e77-4947-9b57-4d0fff9ff1fc"],
Cell[164265, 3441, 265, 7, 38, "Echo",ExpressionUUID->"e67457ca-156c-4934-a2cf-0de32df9208c"],
Cell[164533, 3450, 286, 8, 38, "Echo",ExpressionUUID->"f416968d-9009-433f-9a6e-6d470f78bf7a"],
Cell[164822, 3460, 264, 7, 38, "Echo",ExpressionUUID->"75cc0dea-f03b-4b0c-9ed5-fc2eb6e1888f"],
Cell[165089, 3469, 252, 6, 38, "Echo",ExpressionUUID->"dd45607a-487f-4880-b2ab-99aea79cd2e6"],
Cell[165344, 3477, 251, 6, 38, "Echo",ExpressionUUID->"7e017c4d-bbb7-43d4-9ee6-16790fc3212e"],
Cell[165598, 3485, 246, 5, 38, "Echo",ExpressionUUID->"cfa187b8-08e2-47c7-92fa-4894531a39ec"],
Cell[165847, 3492, 273, 8, 38, "Echo",ExpressionUUID->"22f3de8c-0d1c-449d-aa5c-81e0812e014d"],
Cell[166123, 3502, 277, 8, 38, "Echo",ExpressionUUID->"3f849e8f-8dd4-4a54-8c12-d526f8798668"],
Cell[166403, 3512, 254, 6, 38, "Echo",ExpressionUUID->"056f6106-b72d-483d-b352-307004304f64"],
Cell[166660, 3520, 262, 7, 38, "Echo",ExpressionUUID->"1822aa8f-ed44-435a-9e02-5e00c000eb10"],
Cell[166925, 3529, 268, 7, 38, "Echo",ExpressionUUID->"112bcabe-cbe5-4fe5-b18f-014e90765bcc"],
Cell[167196, 3538, 266, 7, 38, "Echo",ExpressionUUID->"3a8d1cec-06c1-4fb8-8e46-a322dc0d85ba"],
Cell[167465, 3547, 249, 6, 38, "Echo",ExpressionUUID->"2a91e335-6d8b-4268-8c83-1d6df9257d8f"],
Cell[167717, 3555, 255, 7, 38, "Echo",ExpressionUUID->"30cec840-c8f9-4eb7-97b5-74974df3ffbb"],
Cell[167975, 3564, 246, 6, 38, "Echo",ExpressionUUID->"ff3566d7-ce76-4a62-96cd-ccbde130c692"],
Cell[168224, 3572, 260, 7, 38, "Echo",ExpressionUUID->"205d3881-f03a-4dda-9363-9ee13ea8f401"],
Cell[168487, 3581, 277, 8, 38, "Echo",ExpressionUUID->"efc835a5-f811-487f-8792-c7c7aa3092d6"],
Cell[168767, 3591, 252, 6, 38, "Echo",ExpressionUUID->"a53dee3c-5a9b-4a68-9dae-69701228e8df"],
Cell[169022, 3599, 251, 6, 38, "Echo",ExpressionUUID->"f4bc12c8-a24c-4572-910d-b829bd051a91"],
Cell[169276, 3607, 259, 7, 38, "Echo",ExpressionUUID->"88545954-3031-401b-be0e-0a2f507b0eae"],
Cell[169538, 3616, 261, 7, 38, "Echo",ExpressionUUID->"825d9b31-ec35-4729-bc7a-aad4042c8528"],
Cell[169802, 3625, 270, 7, 38, "Echo",ExpressionUUID->"2c852dfc-4872-4514-9ab5-2fbbfdfa311c"],
Cell[170075, 3634, 252, 6, 38, "Echo",ExpressionUUID->"3b013290-5887-4a00-919d-4c54954e743e"],
Cell[170330, 3642, 280, 8, 38, "Echo",ExpressionUUID->"1a604ec8-ba49-4cf9-b921-2d9580d4c9aa"],
Cell[170613, 3652, 250, 6, 38, "Echo",ExpressionUUID->"d7a1b6ec-9bdc-4c90-9123-b44c384a6029"],
Cell[170866, 3660, 246, 5, 38, "Echo",ExpressionUUID->"466e7f7a-3259-4e7a-90d4-e171dab49420"],
Cell[171115, 3667, 255, 7, 38, "Echo",ExpressionUUID->"ad4879b2-2b81-470a-8250-bf9920670c4a"],
Cell[171373, 3676, 268, 7, 38, "Echo",ExpressionUUID->"022d6b55-4ce8-41ab-80cd-df16bba65fd8"],
Cell[171644, 3685, 263, 7, 38, "Echo",ExpressionUUID->"2a25ca26-e621-4ded-af77-65246cbfb698"],
Cell[171910, 3694, 262, 7, 38, "Echo",ExpressionUUID->"f0ce55d6-ab39-49de-8ab9-33b391c1707c"],
Cell[172175, 3703, 252, 6, 38, "Echo",ExpressionUUID->"3f3c3e49-cfce-4219-9e86-579e52c1a02f"],
Cell[172430, 3711, 278, 8, 38, "Echo",ExpressionUUID->"54987a11-3ec6-41ba-a3ff-86907dc2a6e8"],
Cell[172711, 3721, 273, 8, 38, "Echo",ExpressionUUID->"d807364c-3d7c-4492-b19a-4d7362506249"],
Cell[172987, 3731, 259, 7, 38, "Echo",ExpressionUUID->"8098f7f5-e295-47bc-9d5b-c78f56599c26"],
Cell[173249, 3740, 255, 7, 38, "Echo",ExpressionUUID->"95a722aa-fbd8-43d4-8098-5d90514271ba"],
Cell[173507, 3749, 248, 6, 38, "Echo",ExpressionUUID->"aad1482e-7eba-4256-8b44-53c595004ffa"],
Cell[173758, 3757, 266, 7, 38, "Echo",ExpressionUUID->"8955c81a-7459-45ca-909a-09729e72c0dc"],
Cell[174027, 3766, 264, 7, 38, "Echo",ExpressionUUID->"c95ae0e5-a863-4b13-a058-86e47db70ce6"],
Cell[174294, 3775, 250, 6, 38, "Echo",ExpressionUUID->"2957b155-2643-4a2a-a148-7adef9df8719"],
Cell[174547, 3783, 252, 6, 38, "Echo",ExpressionUUID->"7331f263-98f9-4b69-ab82-b6589b57a90d"],
Cell[174802, 3791, 266, 7, 38, "Echo",ExpressionUUID->"24d1ebc8-83ef-45c1-88a3-65598e121f5e"],
Cell[175071, 3800, 257, 7, 38, "Echo",ExpressionUUID->"db8fbb62-9254-4892-9aee-790dd3f33603"],
Cell[175331, 3809, 261, 7, 38, "Echo",ExpressionUUID->"2389c7d5-1b36-45a1-9f67-479fa1e6c276"],
Cell[175595, 3818, 255, 7, 38, "Echo",ExpressionUUID->"033f08bc-e37c-4f9c-84b3-b324dc24538a"],
Cell[175853, 3827, 257, 7, 38, "Echo",ExpressionUUID->"02cc4c9a-080e-47d4-b2bc-95c7b9bff311"],
Cell[176113, 3836, 265, 7, 38, "Echo",ExpressionUUID->"482d5f11-824a-4680-be0e-3ac8ec8646af"],
Cell[176381, 3845, 266, 7, 38, "Echo",ExpressionUUID->"1ac396d6-7290-46ab-82e6-731c3e5fe5d3"],
Cell[176650, 3854, 279, 8, 38, "Echo",ExpressionUUID->"ee09e897-4643-4771-9852-ba4db3cd0c68"],
Cell[176932, 3864, 278, 8, 38, "Echo",ExpressionUUID->"a9190ce5-63ed-4954-899c-3c5206ed7c54"],
Cell[177213, 3874, 246, 5, 38, "Echo",ExpressionUUID->"2a01a4f7-44aa-41ff-9c90-641da9177932"],
Cell[177462, 3881, 259, 7, 38, "Echo",ExpressionUUID->"1de2fa16-52a0-41de-8457-0361698a8b4f"],
Cell[177724, 3890, 298, 8, 38, "Echo",ExpressionUUID->"3fb483c2-f8ea-47d2-b27d-7fc3c52e72f0"],
Cell[178025, 3900, 248, 6, 38, "Echo",ExpressionUUID->"7a05e42f-d436-46a0-87c5-472acbc2256d"],
Cell[178276, 3908, 257, 7, 39, "Echo",ExpressionUUID->"88543ed9-b185-4012-99b0-d379e8ef1500"],
Cell[178536, 3917, 264, 7, 39, "Echo",ExpressionUUID->"6d840ac6-17c3-44d0-a7d8-16eca49e2a80"],
Cell[178803, 3926, 242, 6, 38, "Echo",ExpressionUUID->"13cd9e8d-1148-401c-8377-b1cbd196e06f"],
Cell[179048, 3934, 266, 7, 38, "Echo",ExpressionUUID->"fd8853a0-937f-4ded-913a-c916e380b307"],
Cell[179317, 3943, 262, 7, 38, "Echo",ExpressionUUID->"590ae98a-44f9-4140-8fc1-3432d940079a"],
Cell[179582, 3952, 262, 7, 38, "Echo",ExpressionUUID->"b847e8fa-1212-4339-92b4-2e84d895024c"],
Cell[179847, 3961, 266, 7, 38, "Echo",ExpressionUUID->"4127017d-97d3-4ff2-8954-e6742b8278b8"],
Cell[180116, 3970, 250, 6, 38, "Echo",ExpressionUUID->"0f54c264-0af5-40bb-b378-0a81ccb9fc65"],
Cell[180369, 3978, 257, 7, 38, "Echo",ExpressionUUID->"c371b00f-e540-4027-b4fc-d5f870ff06da"],
Cell[180629, 3987, 254, 6, 38, "Echo",ExpressionUUID->"2006b12d-0aec-448d-99ed-b15a75fc8ae5"],
Cell[180886, 3995, 263, 7, 38, "Echo",ExpressionUUID->"dbe70308-bcb3-4791-9afe-8289dcc8886c"],
Cell[181152, 4004, 268, 7, 38, "Echo",ExpressionUUID->"aa42736e-eb25-44ea-8e52-b6f5170d274c"],
Cell[181423, 4013, 265, 7, 38, "Echo",ExpressionUUID->"7fe8272b-6dc8-4d2a-91a6-c57060b0f1df"],
Cell[181691, 4022, 281, 8, 38, "Echo",ExpressionUUID->"d775977e-fa81-42ea-96c0-9e7aa1108fb4"],
Cell[181975, 4032, 261, 7, 38, "Echo",ExpressionUUID->"7632cb84-3d4a-4edb-b46a-ceeb049a8fce"],
Cell[182239, 4041, 266, 7, 38, "Echo",ExpressionUUID->"ea4bd98e-df7b-4538-9a51-745b6c554c51"],
Cell[182508, 4050, 272, 8, 38, "Echo",ExpressionUUID->"e695d891-84c9-4815-bc0a-5033672d02e9"],
Cell[182783, 4060, 258, 7, 38, "Echo",ExpressionUUID->"aebfd4e8-805d-4cfa-a9fa-b0e901107ef7"],
Cell[183044, 4069, 266, 7, 38, "Echo",ExpressionUUID->"b0c80c7d-eba8-4ed5-8f3a-6edf8fb6f621"],
Cell[183313, 4078, 252, 6, 38, "Echo",ExpressionUUID->"bc4ece69-73fb-4300-9bce-cbf9eedc5f36"],
Cell[183568, 4086, 247, 6, 38, "Echo",ExpressionUUID->"b4a51802-0133-4de7-99a4-6dffaac7be06"],
Cell[183818, 4094, 260, 7, 38, "Echo",ExpressionUUID->"6e8b5d07-5bc2-42ce-b008-be10ddd960f1"],
Cell[184081, 4103, 278, 8, 38, "Echo",ExpressionUUID->"1c4f8735-8921-4abf-b9d0-5329b9ad7485"],
Cell[184362, 4113, 257, 7, 38, "Echo",ExpressionUUID->"a974aa0a-d07c-4306-83e1-03296ab49e81"],
Cell[184622, 4122, 263, 7, 38, "Echo",ExpressionUUID->"bf2a5c42-a521-4b86-a29d-f4c665a73ffa"],
Cell[184888, 4131, 267, 7, 38, "Echo",ExpressionUUID->"d93c51e0-de90-4ac0-9432-f2518a084aff"],
Cell[185158, 4140, 274, 8, 38, "Echo",ExpressionUUID->"54acf16b-0a70-4a6e-ab28-de6076db715c"],
Cell[185435, 4150, 260, 7, 38, "Echo",ExpressionUUID->"6d371fdc-b0e2-4e1f-9b5b-3423e7294776"],
Cell[185698, 4159, 254, 6, 38, "Echo",ExpressionUUID->"7f2b08a1-95b5-4105-aea3-4c100bf625ec"],
Cell[185955, 4167, 252, 6, 38, "Echo",ExpressionUUID->"fe4bdf1c-c198-4048-b810-4c10ff7fbc48"],
Cell[186210, 4175, 258, 7, 38, "Echo",ExpressionUUID->"3081edaf-2580-49f1-83d3-0c928e8a5cac"],
Cell[186471, 4184, 257, 7, 38, "Echo",ExpressionUUID->"99a70ff5-f491-41d5-9d53-23f948d16308"],
Cell[186731, 4193, 257, 7, 38, "Echo",ExpressionUUID->"2833fc51-6784-4837-b8e0-7fc9a3587a81"],
Cell[186991, 4202, 270, 7, 38, "Echo",ExpressionUUID->"93ad72d7-50e0-4f5a-a428-86b5a6241417"],
Cell[187264, 4211, 263, 7, 38, "Echo",ExpressionUUID->"3576fb7b-b1c3-4bf2-b2d0-5d635fbbc85e"],
Cell[187530, 4220, 259, 7, 38, "Echo",ExpressionUUID->"4f06549e-c0b3-459f-b790-b6f55e46719b"],
Cell[187792, 4229, 260, 7, 38, "Echo",ExpressionUUID->"80405452-d502-4c43-a227-4de8f07cfb1e"],
Cell[188055, 4238, 271, 8, 38, "Echo",ExpressionUUID->"d7f2fba9-aa64-4565-93cd-749238b2d305"],
Cell[188329, 4248, 257, 7, 38, "Echo",ExpressionUUID->"f34262f2-6183-4293-8400-5f194a2e724f"],
Cell[188589, 4257, 260, 7, 38, "Echo",ExpressionUUID->"aaf93c6a-9607-44c2-b533-dc182477b50b"],
Cell[188852, 4266, 262, 7, 38, "Echo",ExpressionUUID->"04c349e1-705e-42cf-bb77-ae4eddc664ec"],
Cell[189117, 4275, 273, 8, 38, "Echo",ExpressionUUID->"e3eb847f-ce95-4ff2-af82-875c30170bf1"],
Cell[189393, 4285, 250, 6, 38, "Echo",ExpressionUUID->"ebe3311f-e955-4022-b5be-0b68e6d47fc7"],
Cell[189646, 4293, 263, 7, 38, "Echo",ExpressionUUID->"8c7f8e56-1ed7-46fe-abff-1096127252f0"],
Cell[189912, 4302, 260, 7, 38, "Echo",ExpressionUUID->"a422c1b4-5913-46a9-b84c-6eacb5f2577b"],
Cell[190175, 4311, 263, 7, 38, "Echo",ExpressionUUID->"fdc4c39b-4a42-4c22-bc50-81a792d9f5d9"],
Cell[190441, 4320, 259, 7, 38, "Echo",ExpressionUUID->"4cd82e46-6c15-444e-86ce-b8323295c261"],
Cell[190703, 4329, 260, 7, 38, "Echo",ExpressionUUID->"f756346c-8acb-474f-92e9-59844ffc9358"],
Cell[190966, 4338, 260, 7, 38, "Echo",ExpressionUUID->"04b7149e-afb8-4d2c-953c-ab1eaa8a7aae"],
Cell[191229, 4347, 263, 7, 38, "Echo",ExpressionUUID->"12f8ab47-9e96-46bd-aa2d-d42133b731d9"],
Cell[191495, 4356, 268, 7, 38, "Echo",ExpressionUUID->"58d2a557-6449-40fc-8294-193460ec79c5"],
Cell[191766, 4365, 258, 7, 38, "Echo",ExpressionUUID->"b9fa1f47-286e-4b0a-8e87-1ad33a1df831"],
Cell[192027, 4374, 249, 6, 38, "Echo",ExpressionUUID->"5d8bb3f3-6ad6-47bf-bd34-c418d3e74e8c"],
Cell[192279, 4382, 258, 7, 38, "Echo",ExpressionUUID->"6a6240e5-6fc2-4eee-ac94-7238a885feb1"],
Cell[192540, 4391, 250, 6, 38, "Echo",ExpressionUUID->"616aafb9-677f-4f40-ad8a-c133d46c7f45"],
Cell[192793, 4399, 264, 7, 38, "Echo",ExpressionUUID->"3d6e2125-eb57-4784-bd4d-268c3af0e20e"],
Cell[193060, 4408, 250, 6, 38, "Echo",ExpressionUUID->"1b42b332-3d9b-4220-b171-abf9f8a6984a"],
Cell[193313, 4416, 251, 6, 38, "Echo",ExpressionUUID->"237a4c65-f525-45b1-81e4-57eefa1d7935"],
Cell[193567, 4424, 264, 7, 38, "Echo",ExpressionUUID->"b45f208e-82fb-46f3-9c13-5bd3a4b7b286"],
Cell[193834, 4433, 274, 8, 38, "Echo",ExpressionUUID->"f0c5e3c5-f177-418c-aefb-7a862d57257e"],
Cell[194111, 4443, 273, 8, 38, "Echo",ExpressionUUID->"04735104-b234-4414-a156-099d6a4ff64e"],
Cell[194387, 4453, 263, 7, 38, "Echo",ExpressionUUID->"21474e4f-00db-44e8-b012-6f44601d265e"],
Cell[194653, 4462, 240, 5, 38, "Echo",ExpressionUUID->"54f50a0a-ff56-4cf5-ba27-942f386de39c"],
Cell[194896, 4469, 255, 7, 38, "Echo",ExpressionUUID->"0e134c5e-e2f2-45e6-b930-997d4a751750"],
Cell[195154, 4478, 254, 6, 38, "Echo",ExpressionUUID->"ef490f5e-5388-4422-9bba-48fe15acfb48"],
Cell[195411, 4486, 250, 6, 38, "Echo",ExpressionUUID->"fa96ab46-a462-4890-b971-c1ca5d1886ab"],
Cell[195664, 4494, 248, 6, 38, "Echo",ExpressionUUID->"bf76eec4-9ab8-414f-b043-c16513c3acf5"],
Cell[195915, 4502, 265, 7, 38, "Echo",ExpressionUUID->"e2a61388-d6e5-46ae-8ae9-8d423e48c659"],
Cell[196183, 4511, 278, 8, 38, "Echo",ExpressionUUID->"54b2f538-1f97-4691-9cde-242446f986ae"],
Cell[196464, 4521, 268, 7, 38, "Echo",ExpressionUUID->"7c305c79-4dc3-4be4-8fdc-f50d60be06bb"],
Cell[196735, 4530, 260, 7, 38, "Echo",ExpressionUUID->"3be8901c-8c93-4570-b58d-69abcbc4ca17"],
Cell[196998, 4539, 252, 6, 38, "Echo",ExpressionUUID->"d1e2bc05-b7ec-4044-92bd-d12aac69fb28"],
Cell[197253, 4547, 254, 6, 38, "Echo",ExpressionUUID->"de029e4a-3ba4-4d46-9469-196ef83a4da7"],
Cell[197510, 4555, 251, 6, 38, "Echo",ExpressionUUID->"dc2f94e6-2b66-4742-88b7-8c4b0c679ff9"],
Cell[197764, 4563, 266, 7, 38, "Echo",ExpressionUUID->"38c544a3-8886-4b43-8f66-bc34ec3f01e7"],
Cell[198033, 4572, 259, 6, 38, "Echo",ExpressionUUID->"9cee30be-fa44-45ac-b9e2-810b1ef553f9"],
Cell[198295, 4580, 259, 7, 38, "Echo",ExpressionUUID->"9039cf42-a37e-45ee-876d-f93e6c62785c"],
Cell[198557, 4589, 259, 7, 38, "Echo",ExpressionUUID->"944e16fc-43b7-4beb-bddd-56a6701dfb22"],
Cell[198819, 4598, 267, 7, 38, "Echo",ExpressionUUID->"e988e31d-da62-44cc-8971-a21c875d96b8"],
Cell[199089, 4607, 252, 6, 38, "Echo",ExpressionUUID->"e0a8372c-5988-44bb-85dd-cc3fde1cc860"],
Cell[199344, 4615, 252, 6, 38, "Echo",ExpressionUUID->"abca38df-7a73-4953-b534-6f399b8bf8a5"],
Cell[199599, 4623, 251, 6, 38, "Echo",ExpressionUUID->"0bfb9e95-5e39-4d0b-92dd-2d1c751d7058"],
Cell[199853, 4631, 265, 7, 38, "Echo",ExpressionUUID->"365a98a4-05f0-42a0-aff8-6f2e35d12e5f"],
Cell[200121, 4640, 276, 8, 38, "Echo",ExpressionUUID->"e113bb66-cf1e-46ee-ac12-664623f621e0"],
Cell[200400, 4650, 264, 7, 38, "Echo",ExpressionUUID->"25ff1737-aada-4a5f-baf7-9496c138b615"],
Cell[200667, 4659, 255, 7, 38, "Echo",ExpressionUUID->"b9ae0a6c-ecdb-4237-880a-34cb9fb4a4a9"],
Cell[200925, 4668, 252, 6, 38, "Echo",ExpressionUUID->"d5156def-c1ba-4f9b-8469-a7143e4c8897"],
Cell[201180, 4676, 252, 6, 38, "Echo",ExpressionUUID->"d432adc2-db17-4cff-9b91-d5c7a82da098"],
Cell[201435, 4684, 254, 6, 38, "Echo",ExpressionUUID->"56d9b58e-8351-4670-bce3-ab57cdd3f051"],
Cell[201692, 4692, 273, 8, 38, "Echo",ExpressionUUID->"0d9225ee-1775-4f37-bdfa-22dcaf7ab48c"],
Cell[201968, 4702, 254, 6, 39, "Echo",ExpressionUUID->"ff1f468f-9023-410f-8f27-1181ef812881"],
Cell[202225, 4710, 260, 7, 39, "Echo",ExpressionUUID->"60bf59c2-5f65-4345-94f6-ef23cffba793"],
Cell[202488, 4719, 270, 7, 39, "Echo",ExpressionUUID->"7e451dd4-df6b-4f5d-b2b7-67582dd8e41c"],
Cell[202761, 4728, 277, 8, 39, "Echo",ExpressionUUID->"1685853b-14e1-4d8c-b3bb-eddd760b350a"],
Cell[203041, 4738, 250, 6, 39, "Echo",ExpressionUUID->"99286357-573b-49de-9b9a-82d0ff8ecb0e"],
Cell[203294, 4746, 254, 6, 39, "Echo",ExpressionUUID->"9b2cdf2b-b7da-4dcb-a744-59ed2982e4f0"],
Cell[203551, 4754, 252, 6, 39, "Echo",ExpressionUUID->"dd745183-49c3-42aa-92da-c0781a03a2ee"],
Cell[203806, 4762, 259, 7, 39, "Echo",ExpressionUUID->"c5e86f73-62f0-4803-8a13-a0ec4db64527"],
Cell[204068, 4771, 260, 7, 38, "Echo",ExpressionUUID->"b2c270ac-229c-4aaa-bceb-fe99cef7ebba"],
Cell[204331, 4780, 267, 7, 38, "Echo",ExpressionUUID->"eb2faff9-61d6-48b7-bb0a-1713e8c12097"],
Cell[204601, 4789, 259, 7, 38, "Echo",ExpressionUUID->"b489c2f6-c5e9-4e97-96f5-b5801ae9d3a2"],
Cell[204863, 4798, 252, 6, 38, "Echo",ExpressionUUID->"803b0036-7738-4a93-a717-df085be98cd9"],
Cell[205118, 4806, 257, 7, 38, "Echo",ExpressionUUID->"9cd838d8-95c8-4b7c-bef9-33eedfa27158"],
Cell[205378, 4815, 260, 7, 38, "Echo",ExpressionUUID->"ef6be03d-0ff0-40d5-8ed9-1b420eddd28d"],
Cell[205641, 4824, 249, 6, 38, "Echo",ExpressionUUID->"77b18033-e42e-4bb8-9110-dc4502e3760d"],
Cell[205893, 4832, 259, 7, 38, "Echo",ExpressionUUID->"47f21053-e0b4-4b26-a015-05d8d52bbea5"],
Cell[206155, 4841, 257, 7, 38, "Echo",ExpressionUUID->"aecef896-55f6-4e20-9f84-4c4ff40d72f0"],
Cell[206415, 4850, 264, 7, 38, "Echo",ExpressionUUID->"eff945c4-3083-493b-82cd-699a5bdc2c3c"],
Cell[206682, 4859, 254, 6, 38, "Echo",ExpressionUUID->"50e4e9eb-c965-4148-836e-e6d67a01029d"],
Cell[206939, 4867, 257, 7, 38, "Echo",ExpressionUUID->"c3b88a04-566e-4495-be62-3a8ecb0b0fa0"],
Cell[207199, 4876, 259, 7, 38, "Echo",ExpressionUUID->"425a4f4c-2524-4380-80fd-769c6674fca0"],
Cell[207461, 4885, 257, 7, 38, "Echo",ExpressionUUID->"92da8ac5-c994-4a05-9bdf-36ac398d9d57"],
Cell[207721, 4894, 254, 6, 38, "Echo",ExpressionUUID->"321d371f-e312-429c-b585-e1305aaa9271"],
Cell[207978, 4902, 257, 7, 38, "Echo",ExpressionUUID->"1edc1e86-431d-425b-bc65-9969b7b9d4af"],
Cell[208238, 4911, 268, 7, 38, "Echo",ExpressionUUID->"0dc8879b-6b08-4dd4-832b-b5c7db6cdb29"],
Cell[208509, 4920, 276, 8, 38, "Echo",ExpressionUUID->"125f9c8a-83ba-4fc1-853a-a5fc13a6466a"],
Cell[208788, 4930, 277, 8, 38, "Echo",ExpressionUUID->"ff0bcc44-a65a-445b-adc8-30796fe18c2c"],
Cell[209068, 4940, 260, 7, 38, "Echo",ExpressionUUID->"4fe04535-497a-4bed-ac30-e7e44d90e325"],
Cell[209331, 4949, 252, 6, 38, "Echo",ExpressionUUID->"43fdd58d-3847-4604-b7fc-ec9923754c61"],
Cell[209586, 4957, 286, 8, 38, "Echo",ExpressionUUID->"21fb7450-ae7b-4fbc-ad25-2c1865b5adca"],
Cell[209875, 4967, 263, 7, 38, "Echo",ExpressionUUID->"708c01ca-bbad-4736-a511-6046211187ed"],
Cell[210141, 4976, 261, 7, 38, "Echo",ExpressionUUID->"9ea8c859-baf4-4e47-a46f-f5d4cbd58bf6"],
Cell[210405, 4985, 264, 7, 38, "Echo",ExpressionUUID->"ede2a1a4-7424-4a8c-bfda-e1dbfe296f32"],
Cell[210672, 4994, 252, 6, 38, "Echo",ExpressionUUID->"768dd725-a394-4507-adc7-c0fbccb6d259"],
Cell[210927, 5002, 267, 7, 38, "Echo",ExpressionUUID->"39c4160a-9099-4a56-8989-766e4445f0ec"],
Cell[211197, 5011, 264, 7, 38, "Echo",ExpressionUUID->"43f36cd0-90ff-4e69-97c5-b759066dbec4"],
Cell[211464, 5020, 263, 7, 38, "Echo",ExpressionUUID->"cdf764f7-303c-421d-8021-e8f85952bf22"],
Cell[211730, 5029, 260, 7, 38, "Echo",ExpressionUUID->"2f7b46ed-8e0a-46f4-b278-81a8e3b63fb4"],
Cell[211993, 5038, 272, 8, 38, "Echo",ExpressionUUID->"9b466ae0-51d5-4a49-a23e-ce728803d400"],
Cell[212268, 5048, 272, 8, 38, "Echo",ExpressionUUID->"76210427-a12a-4e5d-a6b2-db70db2d29a9"],
Cell[212543, 5058, 266, 7, 38, "Echo",ExpressionUUID->"25175777-39bf-4b3f-a40c-1bd62802180f"],
Cell[212812, 5067, 265, 7, 38, "Echo",ExpressionUUID->"73c90123-d96a-4087-8ae0-3031142c4d12"],
Cell[213080, 5076, 259, 7, 38, "Echo",ExpressionUUID->"9d6c1350-5c26-435a-9e88-a303d08edc17"],
Cell[213342, 5085, 265, 7, 38, "Echo",ExpressionUUID->"7ec711b2-b2ba-4f4e-adf3-00c8dd3e193d"],
Cell[213610, 5094, 264, 7, 38, "Echo",ExpressionUUID->"d92252f5-71d7-4e78-8191-7a19024b6df8"],
Cell[213877, 5103, 264, 7, 38, "Echo",ExpressionUUID->"1d12afc2-0010-4546-abc9-a9972f3ca1e2"],
Cell[214144, 5112, 263, 7, 38, "Echo",ExpressionUUID->"56f43e9d-1688-485c-9b7e-ea8e2ebbecc9"],
Cell[214410, 5121, 262, 7, 38, "Echo",ExpressionUUID->"eab4880b-a3fe-456c-8d4a-6a958d817e7f"],
Cell[214675, 5130, 274, 8, 38, "Echo",ExpressionUUID->"da19507d-2fd2-4b96-8287-5bfa21f59982"],
Cell[214952, 5140, 264, 7, 38, "Echo",ExpressionUUID->"53c5430b-ed4e-40f2-a184-225f806b5115"],
Cell[215219, 5149, 262, 7, 38, "Echo",ExpressionUUID->"88cdf0fb-a340-4e9a-b322-9235e5b4636a"],
Cell[215484, 5158, 274, 8, 38, "Echo",ExpressionUUID->"ccf07068-c31a-4508-8157-f2ef471a2714"],
Cell[215761, 5168, 263, 7, 38, "Echo",ExpressionUUID->"96a85672-7f3c-4718-a33b-77ada60c8cde"],
Cell[216027, 5177, 272, 8, 38, "Echo",ExpressionUUID->"629e408b-404f-44d7-ac2f-693d8d95d40d"],
Cell[216302, 5187, 273, 8, 38, "Echo",ExpressionUUID->"c22b9d2a-6e0a-4d7a-ac87-e1475c545b96"],
Cell[216578, 5197, 268, 7, 38, "Echo",ExpressionUUID->"b1b38a6b-7ed2-421a-891f-5978bedeb3e6"],
Cell[216849, 5206, 268, 7, 38, "Echo",ExpressionUUID->"69cac26e-038c-4c5d-acc2-d04ad92c9252"],
Cell[217120, 5215, 268, 7, 38, "Echo",ExpressionUUID->"80231e09-673a-4259-ac65-528cd0443d99"],
Cell[217391, 5224, 268, 7, 38, "Echo",ExpressionUUID->"bcbca585-a66b-4ea2-8211-614d02e2b3f4"],
Cell[217662, 5233, 268, 7, 38, "Echo",ExpressionUUID->"dfb647e4-360d-4d2c-9a89-4592c8074f47"],
Cell[217933, 5242, 273, 8, 38, "Echo",ExpressionUUID->"8af45c31-1ada-4866-b9c0-a4bcf0debef0"],
Cell[218209, 5252, 273, 8, 38, "Echo",ExpressionUUID->"16165375-35f7-49b7-8f2b-6c07e9b9162d"],
Cell[218485, 5262, 271, 8, 38, "Echo",ExpressionUUID->"d4049097-8e9e-4cb4-8718-f045db4174c5"],
Cell[218759, 5272, 260, 7, 38, "Echo",ExpressionUUID->"b2e537b9-5a68-47f3-80dd-0321f3dd4042"],
Cell[219022, 5281, 264, 7, 38, "Echo",ExpressionUUID->"4362f953-48da-451c-bd4f-de4044bf9597"],
Cell[219289, 5290, 270, 7, 38, "Echo",ExpressionUUID->"80dc260d-5566-4df9-9e39-9b94687f7ccf"],
Cell[219562, 5299, 261, 7, 38, "Echo",ExpressionUUID->"89da75c5-e568-449c-8a77-574576e9dd2b"],
Cell[219826, 5308, 262, 7, 38, "Echo",ExpressionUUID->"e4ba719f-696a-45f7-a2b7-f78709f130e6"],
Cell[220091, 5317, 259, 7, 38, "Echo",ExpressionUUID->"00491e5c-0d5e-44e0-8152-1e6ae358d05f"],
Cell[220353, 5326, 277, 8, 38, "Echo",ExpressionUUID->"9d2f0826-bbef-4bb4-8b56-f1610ed61825"],
Cell[220633, 5336, 259, 7, 38, "Echo",ExpressionUUID->"e2c77e54-09f1-4043-b76f-02cf1346f273"],
Cell[220895, 5345, 262, 7, 38, "Echo",ExpressionUUID->"f5d1330a-b945-4d95-a7af-1401b5ab500f"],
Cell[221160, 5354, 260, 7, 38, "Echo",ExpressionUUID->"e6b9a4d9-1d7d-4bdf-8284-7206735b0e4d"],
Cell[221423, 5363, 261, 7, 38, "Echo",ExpressionUUID->"ec3a232b-9b80-42f4-831f-2374dd08f2d1"],
Cell[221687, 5372, 264, 7, 38, "Echo",ExpressionUUID->"e74b211c-9080-4b5f-b00e-d108a9276412"],
Cell[221954, 5381, 266, 7, 38, "Echo",ExpressionUUID->"b1c3fffc-2758-4e44-a579-fc550f0308bc"],
Cell[222223, 5390, 250, 6, 38, "Echo",ExpressionUUID->"99ccc8f3-82d4-4d19-b64c-f4384febdecd"],
Cell[222476, 5398, 262, 7, 38, "Echo",ExpressionUUID->"847430a0-fab6-4039-b321-a04f0ea2070a"],
Cell[222741, 5407, 259, 7, 38, "Echo",ExpressionUUID->"11584ea9-6543-43f6-b7a2-14e4d02f9515"],
Cell[223003, 5416, 275, 8, 38, "Echo",ExpressionUUID->"f5a6460c-acae-4441-b5d8-08421c570f24"],
Cell[223281, 5426, 263, 7, 38, "Echo",ExpressionUUID->"0a579cb6-99b4-4ab0-bbf6-2d7adb7a9d20"],
Cell[223547, 5435, 260, 7, 38, "Echo",ExpressionUUID->"3372d67d-2cc8-4364-8f16-8dd71b7bfd5d"],
Cell[223810, 5444, 261, 7, 38, "Echo",ExpressionUUID->"3209a39a-59df-41fb-8133-f15b2cefba5a"],
Cell[224074, 5453, 264, 7, 38, "Echo",ExpressionUUID->"b7536211-ee2b-46e5-aa4e-08a90f721378"],
Cell[224341, 5462, 268, 7, 38, "Echo",ExpressionUUID->"e738d658-0a58-43c8-8fef-c0d538c547c0"],
Cell[224612, 5471, 258, 7, 38, "Echo",ExpressionUUID->"1a9875ae-32cd-4738-82a7-e780337c4eab"],
Cell[224873, 5480, 247, 6, 38, "Echo",ExpressionUUID->"642929d7-7ee3-4ad7-8695-7b2266566da2"],
Cell[225123, 5488, 251, 6, 38, "Echo",ExpressionUUID->"c910d44c-bdde-476d-9b75-97a595ef46be"],
Cell[225377, 5496, 265, 7, 38, "Echo",ExpressionUUID->"21707363-9e51-470b-a7bb-6f100da0461f"],
Cell[225645, 5505, 271, 8, 38, "Echo",ExpressionUUID->"c99fb309-0a37-4688-8e54-6643a5599d54"],
Cell[225919, 5515, 257, 7, 38, "Echo",ExpressionUUID->"61be7ff3-79ba-4c59-802f-bc3276658be0"],
Cell[226179, 5524, 262, 7, 38, "Echo",ExpressionUUID->"f9604bdc-896f-4925-b2d8-295efae100c6"],
Cell[226444, 5533, 261, 7, 38, "Echo",ExpressionUUID->"c76e83f6-3b3c-45fd-9f18-9f6842df5220"],
Cell[226708, 5542, 252, 6, 38, "Echo",ExpressionUUID->"bfb598da-dbb8-432c-8e57-68a46be386b0"],
Cell[226963, 5550, 268, 7, 38, "Echo",ExpressionUUID->"d1cc896d-cd25-4eb5-87d7-47edeaaed6c4"],
Cell[227234, 5559, 260, 7, 38, "Echo",ExpressionUUID->"a053e6c2-eebf-4a3d-8999-5b46a86de855"],
Cell[227497, 5568, 265, 7, 38, "Echo",ExpressionUUID->"ab735bad-98fe-40e9-ab3c-422b10e2f816"],
Cell[227765, 5577, 266, 7, 38, "Echo",ExpressionUUID->"8d91da6e-6d92-43ac-bf59-fcdaa9f6c934"],
Cell[228034, 5586, 267, 7, 38, "Echo",ExpressionUUID->"d06186cb-5f93-4685-962e-87ff3abade88"],
Cell[228304, 5595, 264, 7, 38, "Echo",ExpressionUUID->"e5d0b125-c019-4dd8-8216-a94701a12cb8"],
Cell[228571, 5604, 266, 7, 38, "Echo",ExpressionUUID->"ce4a29ba-a097-4f8a-8bfb-39d29be1325e"],
Cell[228840, 5613, 280, 8, 38, "Echo",ExpressionUUID->"ced710ed-1373-4900-9360-df6fc3a99f4e"],
Cell[229123, 5623, 262, 7, 38, "Echo",ExpressionUUID->"0f69e6ce-ade3-4029-9b69-8a2fbdcec006"],
Cell[229388, 5632, 277, 8, 38, "Echo",ExpressionUUID->"fc100e26-cd63-42d5-a93d-506d80565237"],
Cell[229668, 5642, 270, 7, 38, "Echo",ExpressionUUID->"aa661553-f115-4e07-9a5d-5cabd1f20bab"],
Cell[229941, 5651, 276, 8, 38, "Echo",ExpressionUUID->"5d4b1746-0777-4723-a858-3ebc090277ce"],
Cell[230220, 5661, 262, 7, 38, "Echo",ExpressionUUID->"6240e6d9-c999-43cd-a25e-3cb3bfeaf7d0"],
Cell[230485, 5670, 277, 8, 38, "Echo",ExpressionUUID->"47378365-cd27-4ef3-a811-5e798820fe00"],
Cell[230765, 5680, 264, 7, 38, "Echo",ExpressionUUID->"648f17f5-8328-461e-b02d-61e889631386"],
Cell[231032, 5689, 254, 6, 38, "Echo",ExpressionUUID->"cd576afc-c2dd-4ca6-8990-cd1c79aa75e1"],
Cell[231289, 5697, 268, 7, 38, "Echo",ExpressionUUID->"d0200913-d167-42af-a990-32dfeacbc417"],
Cell[231560, 5706, 264, 7, 38, "Echo",ExpressionUUID->"a8300514-ebef-4f4a-b7e2-48858badbe16"],
Cell[231827, 5715, 262, 7, 38, "Echo",ExpressionUUID->"b18ad04c-3f7a-47dc-ad59-0d4e0d4e3f83"],
Cell[232092, 5724, 261, 7, 38, "Echo",ExpressionUUID->"df365cc9-1a07-43c3-bc33-7c505cc13e37"],
Cell[232356, 5733, 274, 8, 38, "Echo",ExpressionUUID->"3749df0a-ea7f-44e5-984c-83d6132f4d6a"],
Cell[232633, 5743, 265, 7, 38, "Echo",ExpressionUUID->"c3a95441-5c57-474d-b0f6-7f0b77da2f32"],
Cell[232901, 5752, 252, 6, 38, "Echo",ExpressionUUID->"cf0dd35f-1534-425b-b4a8-3948bbce2842"],
Cell[233156, 5760, 264, 7, 38, "Echo",ExpressionUUID->"2eb5c746-2d0f-4474-9a26-4738a5a9e0ef"],
Cell[233423, 5769, 262, 7, 38, "Echo",ExpressionUUID->"5825ecd0-2b80-42f6-b7c7-471a86a3e0c1"],
Cell[233688, 5778, 266, 7, 38, "Echo",ExpressionUUID->"8d5c341a-78ce-4733-867e-63abf0a00ef1"],
Cell[233957, 5787, 283, 8, 38, "Echo",ExpressionUUID->"e4fe1b87-80b2-45f0-ad20-0208a38de983"],
Cell[234243, 5797, 266, 7, 38, "Echo",ExpressionUUID->"27daf2ea-8048-4116-b878-01b5035727aa"],
Cell[234512, 5806, 303, 8, 38, "Echo",ExpressionUUID->"94a1823e-da72-44b8-8eda-7dd4eff1f9d6"],
Cell[234818, 5816, 257, 7, 38, "Echo",ExpressionUUID->"1e8fffbe-79f2-4d2e-9e68-85b9c6911f70"],
Cell[235078, 5825, 257, 7, 38, "Echo",ExpressionUUID->"932fcac0-f592-4323-9d81-4f335bc2efc9"],
Cell[235338, 5834, 285, 8, 38, "Echo",ExpressionUUID->"14b7ceae-1fde-4f41-a73b-4756e6b10f72"],
Cell[235626, 5844, 264, 7, 38, "Echo",ExpressionUUID->"bd5e4c70-22de-47f3-b355-f965d41d4d23"],
Cell[235893, 5853, 275, 7, 38, "Echo",ExpressionUUID->"224e5f3f-085e-419f-a049-ebd19933198a"],
Cell[236171, 5862, 271, 8, 38, "Echo",ExpressionUUID->"51a47a02-2800-46e4-800f-3663ba2963c9"],
Cell[236445, 5872, 279, 8, 38, "Echo",ExpressionUUID->"50243b36-c1e6-4f45-aa76-dec2b6016c09"],
Cell[236727, 5882, 265, 7, 38, "Echo",ExpressionUUID->"f334ba38-dbfd-4dbc-89e1-34f25d74e7f7"],
Cell[236995, 5891, 278, 8, 38, "Echo",ExpressionUUID->"9791f2e7-b3fd-4a80-a127-e65fc2920483"],
Cell[237276, 5901, 278, 8, 38, "Echo",ExpressionUUID->"7c21032a-3c6c-4509-87e1-afa83c2689d8"],
Cell[237557, 5911, 278, 8, 38, "Echo",ExpressionUUID->"9b4bfabe-45a9-4034-9a3f-b754080cc718"],
Cell[237838, 5921, 280, 8, 38, "Echo",ExpressionUUID->"8de3f24e-93fc-4182-9c55-bbe11fcc49f4"],
Cell[238121, 5931, 266, 7, 38, "Echo",ExpressionUUID->"91ab3eee-8800-4440-9fdc-e0d755f98b80"],
Cell[238390, 5940, 270, 7, 38, "Echo",ExpressionUUID->"a596a61f-1d75-4685-a0e2-4ed139cce89f"],
Cell[238663, 5949, 282, 8, 38, "Echo",ExpressionUUID->"a62c2bff-5bd6-4ce0-8821-8bad58eb464e"],
Cell[238948, 5959, 274, 8, 38, "Echo",ExpressionUUID->"53b66a81-a918-4e6b-a24f-e581ae8d4e89"],
Cell[239225, 5969, 257, 7, 38, "Echo",ExpressionUUID->"7afc396d-860c-49d0-be5d-f3be34a18ce6"],
Cell[239485, 5978, 274, 8, 38, "Echo",ExpressionUUID->"6ddadae6-6d59-4470-9e7a-9bd0202085e4"],
Cell[239762, 5988, 274, 8, 38, "Echo",ExpressionUUID->"193e1744-cf63-4e3c-9e77-0471ee186d0a"],
Cell[240039, 5998, 316, 8, 72, "Echo",ExpressionUUID->"92508b57-ca25-4787-9214-40d1ba6eb95d"],
Cell[240358, 6008, 273, 8, 38, "Echo",ExpressionUUID->"7a7d55e8-4f1c-4961-a0e1-4be41b88c989"],
Cell[240634, 6018, 268, 7, 38, "Echo",ExpressionUUID->"e538a6b8-6d07-4ffa-b4d0-75f5f2280569"],
Cell[240905, 6027, 284, 8, 38, "Echo",ExpressionUUID->"94a7a2b5-7b14-4f60-a6ff-0992a18c264e"],
Cell[241192, 6037, 276, 8, 38, "Echo",ExpressionUUID->"efd52f28-e476-478b-a519-63ceb971e1c7"],
Cell[241471, 6047, 273, 8, 38, "Echo",ExpressionUUID->"9179c6ee-5794-4973-b2fe-69598a88b03c"],
Cell[241747, 6057, 277, 8, 38, "Echo",ExpressionUUID->"ad3a4781-6510-46b6-88e3-b36d9fe2ae30"],
Cell[242027, 6067, 272, 7, 38, "Echo",ExpressionUUID->"9f47e1c0-3d65-48d3-a5d7-ff841cd6feb7"],
Cell[242302, 6076, 257, 7, 38, "Echo",ExpressionUUID->"314c115c-9385-44fe-afe0-977aaf721de0"],
Cell[242562, 6085, 276, 8, 38, "Echo",ExpressionUUID->"b9b23e22-4076-49e7-bae0-aca22cc7cb04"],
Cell[242841, 6095, 288, 8, 38, "Echo",ExpressionUUID->"11746403-e436-4db9-8e34-373c755af7bc"],
Cell[243132, 6105, 274, 8, 38, "Echo",ExpressionUUID->"d944756c-fa0b-40fd-92cc-d33c5ca296e0"],
Cell[243409, 6115, 268, 7, 38, "Echo",ExpressionUUID->"26aa1bbf-4744-4119-a0c7-dff3eedf0d48"],
Cell[243680, 6124, 268, 7, 38, "Echo",ExpressionUUID->"08f3e448-c090-4c3b-a9f2-c2d217ceb43d"],
Cell[243951, 6133, 261, 7, 38, "Echo",ExpressionUUID->"8a8feb15-b797-434a-be22-0a99084dde2a"],
Cell[244215, 6142, 273, 8, 38, "Echo",ExpressionUUID->"85f5a63c-8399-4cc9-949a-90454adb4899"],
Cell[244491, 6152, 265, 7, 38, "Echo",ExpressionUUID->"383aed0a-7584-43c2-afc5-55cb4b692e11"],
Cell[244759, 6161, 276, 8, 38, "Echo",ExpressionUUID->"497927bb-dd72-422f-9d54-24cb6c684fb2"],
Cell[245038, 6171, 266, 7, 38, "Echo",ExpressionUUID->"897cbcd1-6a0d-4e38-a61b-ed33ea3b02c4"],
Cell[245307, 6180, 278, 8, 38, "Echo",ExpressionUUID->"f7a61f6c-46fd-4975-b369-729c31537e01"],
Cell[245588, 6190, 287, 8, 38, "Echo",ExpressionUUID->"301251fe-983f-4e54-9b93-61f0eea223e9"],
Cell[245878, 6200, 286, 8, 38, "Echo",ExpressionUUID->"929e3c2a-0a2a-4c11-aab9-372248e1a710"],
Cell[246167, 6210, 289, 8, 38, "Echo",ExpressionUUID->"835f2eab-c18b-491c-83de-68f7351b9c4f"],
Cell[246459, 6220, 282, 8, 38, "Echo",ExpressionUUID->"71a8c6e5-808f-4f12-bce9-ea0b857d7fb8"],
Cell[246744, 6230, 296, 8, 38, "Echo",ExpressionUUID->"c186e65b-180c-482e-9e41-c309dd8dc4cd"],
Cell[247043, 6240, 265, 7, 38, "Echo",ExpressionUUID->"dacfd9eb-d3f6-46bb-8aaf-cf77bc8eba96"],
Cell[247311, 6249, 276, 8, 38, "Echo",ExpressionUUID->"0946621d-f9b7-4a4a-8b54-ab189fd013cc"],
Cell[247590, 6259, 258, 7, 38, "Echo",ExpressionUUID->"2bf15d97-8917-4023-936f-8538a89f9b91"],
Cell[247851, 6268, 252, 6, 38, "Echo",ExpressionUUID->"59f6c0f7-62d7-4c86-ac14-53b24cb6efde"],
Cell[248106, 6276, 262, 7, 38, "Echo",ExpressionUUID->"e0893800-6ac8-4a5a-8d9c-5c450f3972c7"],
Cell[248371, 6285, 260, 7, 38, "Echo",ExpressionUUID->"a74112f4-5228-418f-8029-377168fb9e1b"],
Cell[248634, 6294, 264, 7, 38, "Echo",ExpressionUUID->"ac5184ad-d76a-49dd-b6eb-73ef2f66e845"],
Cell[248901, 6303, 277, 8, 38, "Echo",ExpressionUUID->"d8d4aa55-429b-4c7d-a6ff-2dd478a62038"],
Cell[249181, 6313, 248, 6, 38, "Echo",ExpressionUUID->"b3c99e61-994b-419d-a517-535c5a97bee5"],
Cell[249432, 6321, 289, 8, 38, "Echo",ExpressionUUID->"2062d059-687e-42d2-886b-72f0ff177397"],
Cell[249724, 6331, 287, 8, 38, "Echo",ExpressionUUID->"041fde56-1351-43a2-9f36-a4c27ad72f75"],
Cell[250014, 6341, 312, 8, 38, "Echo",ExpressionUUID->"51e39d88-2443-4d56-bbd9-84d2b7e2b9f0"],
Cell[250329, 6351, 269, 7, 38, "Echo",ExpressionUUID->"2c081d88-3dfc-497b-8008-7d440f71da37"],
Cell[250601, 6360, 276, 8, 38, "Echo",ExpressionUUID->"d51d3245-9ff5-40cb-bb59-28a9090f8b0e"],
Cell[250880, 6370, 306, 8, 38, "Echo",ExpressionUUID->"ef1c7330-fa98-4721-ae3d-ec6314fd5652"],
Cell[251189, 6380, 296, 8, 38, "Echo",ExpressionUUID->"835b3ac9-aeaa-4301-843e-725836a2855e"],
Cell[251488, 6390, 273, 8, 38, "Echo",ExpressionUUID->"228f60db-44f8-4190-9de8-67996c64b982"],
Cell[251764, 6400, 319, 8, 56, "Echo",ExpressionUUID->"7f0d590d-2ef9-4e84-8eb1-929ae4a79e62"],
Cell[252086, 6410, 287, 8, 38, "Echo",ExpressionUUID->"8f5ec657-c312-47d0-b187-cc77d2489b0b"],
Cell[252376, 6420, 279, 8, 38, "Echo",ExpressionUUID->"d0a29171-8ab0-4f85-96c8-0a8e03932909"],
Cell[252658, 6430, 281, 8, 38, "Echo",ExpressionUUID->"dea073bd-143c-4ce0-8bcb-63c6d1baa9cb"],
Cell[252942, 6440, 257, 7, 38, "Echo",ExpressionUUID->"fe6093fb-6fa7-45af-9c24-3f9059f8f635"],
Cell[253202, 6449, 250, 6, 38, "Echo",ExpressionUUID->"7bf59552-6a91-4e0f-9def-85a9b2702af4"],
Cell[253455, 6457, 337, 8, 56, "Echo",ExpressionUUID->"3392b4e7-c656-4499-ac51-7c3f86ccd7ea"],
Cell[253795, 6467, 339, 8, 56, "Echo",ExpressionUUID->"ff4bc590-2b4e-49df-9d71-4afa542738ec"],
Cell[254137, 6477, 247, 6, 38, "Echo",ExpressionUUID->"09889258-c876-4580-b245-503e61ca3e10"],
Cell[254387, 6485, 249, 6, 38, "Echo",ExpressionUUID->"2a3a8ada-d447-472e-814b-3112f32275bc"],
Cell[254639, 6493, 252, 6, 38, "Echo",ExpressionUUID->"566341bb-dc67-429d-af37-83ea9ab732e8"],
Cell[254894, 6501, 285, 8, 38, "Echo",ExpressionUUID->"f6f6d708-593d-4b1c-a612-cbd364fb92aa"],
Cell[255182, 6511, 279, 8, 38, "Echo",ExpressionUUID->"1b0b45ad-4a02-4036-94b7-d8edcc2148a6"],
Cell[255464, 6521, 261, 7, 38, "Echo",ExpressionUUID->"88fb6f4a-a1ac-4d35-b00d-f853216ddf48"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[255774, 6534, 315, 7, 37, "Input",ExpressionUUID->"0263e477-c88c-4012-8c41-7558d03195a4"],
Cell[256092, 6543, 7475, 120, 1031, "Output",ExpressionUUID->"f59647e0-b47c-4a51-9616-5da109bee9e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263604, 6668, 213, 4, 37, "Input",ExpressionUUID->"fc7a4b35-d011-4fdb-9116-0e001d76f13b"],
Cell[263820, 6674, 24468, 572, 437, "Output",ExpressionUUID->"2032a06d-6077-4ac8-944d-d2f903010d94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288325, 7251, 454, 10, 64, "Input",ExpressionUUID->"9f62ae0e-8c2e-4e7f-913f-fe689540cbe2"],
Cell[288782, 7263, 285, 5, 42, "Output",ExpressionUUID->"71edcd72-aa8f-4673-92bd-f9c0f7c154c4"]
}, Open  ]],
Cell[289082, 7271, 253, 5, 37, "Input",ExpressionUUID->"3a2b61d8-6adf-4212-9e4a-01bb5f974ed4"],
Cell[289338, 7278, 266, 6, 37, "Input",ExpressionUUID->"d0027f66-41f5-4fbf-b3ce-4326b97cdabb"],
Cell[289607, 7286, 431, 11, 37, "Input",ExpressionUUID->"7df7a24b-47ae-4b6e-870d-7f48433427e0"],
Cell[290041, 7299, 211, 4, 37, "Input",ExpressionUUID->"1aeb43c0-d437-4414-a9fc-46445b62cc50"],
Cell[290255, 7305, 235, 4, 37, "Input",ExpressionUUID->"67c8adff-a417-404d-b79b-06738227600e"],
Cell[290493, 7311, 251, 5, 37, "Input",ExpressionUUID->"aa98d376-29ca-466e-a646-08e68fda8393"],
Cell[290747, 7318, 181, 3, 37, "Input",ExpressionUUID->"08828817-6532-483b-ab2f-1e75b5a5a973"]
}
]
*)

